/*! For license information please see main.e5f644dc3db4566b2428.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatehermann("main",{"./app/components/Preloader.js":(e,t,r)=>{r.r(t),r.d(t,{default:()=>y});var n=r("./node_modules/gsap/index.js");function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function a(){a=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,i=Object.defineProperty||function(e,t,r){e[t]=r.value},c="function"==typeof Symbol?Symbol:{},u=c.iterator||"@@iterator",s=c.asyncIterator||"@@asyncIterator",l=c.toStringTag||"@@toStringTag";function f(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{f({},"")}catch(e){f=function(e,t,r){return e[t]=r}}function p(e,t,r,n){var o=t&&t.prototype instanceof w?t:w,a=Object.create(o.prototype),c=new A(n||[]);return i(a,"_invoke",{value:L(e,r,c)}),a}function h(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}t.wrap=p;var m="suspendedStart",d="suspendedYield",y="executing",g="completed",v={};function w(){}function b(){}function I(){}var x={};f(x,u,(function(){return this}));var S=Object.getPrototypeOf,E=S&&S(S(N([])));E&&E!==r&&n.call(E,u)&&(x=E);var P=I.prototype=w.prototype=Object.create(x);function O(e){["next","throw","return"].forEach((function(t){f(e,t,(function(e){return this._invoke(t,e)}))}))}function k(e,t){function r(a,i,c,u){var s=h(e[a],e,i);if("throw"!==s.type){var l=s.arg,f=l.value;return f&&"object"==o(f)&&n.call(f,"__await")?t.resolve(f.__await).then((function(e){r("next",e,c,u)}),(function(e){r("throw",e,c,u)})):t.resolve(f).then((function(e){l.value=e,c(l)}),(function(e){return r("throw",e,c,u)}))}u(s.arg)}var a;i(this,"_invoke",{value:function(e,n){function o(){return new t((function(t,o){r(e,n,t,o)}))}return a=a?a.then(o,o):o()}})}function L(t,r,n){var o=m;return function(a,i){if(o===y)throw Error("Generator is already running");if(o===g){if("throw"===a)throw i;return{value:e,done:!0}}for(n.method=a,n.arg=i;;){var c=n.delegate;if(c){var u=_(c,n);if(u){if(u===v)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===m)throw o=g,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=y;var s=h(t,r,n);if("normal"===s.type){if(o=n.done?g:d,s.arg===v)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(o=g,n.method="throw",n.arg=s.arg)}}}function _(t,r){var n=r.method,o=t.iterator[n];if(o===e)return r.delegate=null,"throw"===n&&t.iterator.return&&(r.method="return",r.arg=e,_(t,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),v;var a=h(o,t.iterator,r.arg);if("throw"===a.type)return r.method="throw",r.arg=a.arg,r.delegate=null,v;var i=a.arg;return i?i.done?(r[t.resultName]=i.value,r.next=t.nextLoc,"return"!==r.method&&(r.method="next",r.arg=e),r.delegate=null,v):i:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,v)}function j(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function A(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(j,this),this.reset(!0)}function N(t){if(t||""===t){var r=t[u];if(r)return r.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var a=-1,i=function r(){for(;++a<t.length;)if(n.call(t,a))return r.value=t[a],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(o(t)+" is not iterable")}return b.prototype=I,i(P,"constructor",{value:I,configurable:!0}),i(I,"constructor",{value:b,configurable:!0}),b.displayName=f(I,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,I):(e.__proto__=I,f(e,l,"GeneratorFunction")),e.prototype=Object.create(P),e},t.awrap=function(e){return{__await:e}},O(k.prototype),f(k.prototype,s,(function(){return this})),t.AsyncIterator=k,t.async=function(e,r,n,o,a){void 0===a&&(a=Promise);var i=new k(p(e,r,n,o),a);return t.isGeneratorFunction(r)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},O(P),f(P,l,"Generator"),f(P,u,(function(){return this})),f(P,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=N,A.prototype={constructor:A,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(T),!t)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function o(n,o){return c.type="throw",c.arg=t,r.next=n,o&&(r.method="next",r.arg=e),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],c=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var u=n.call(i,"catchLoc"),s=n.call(i,"finallyLoc");if(u&&s){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!s)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,v):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),v},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),T(r),v}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;T(r)}return o}}throw Error("illegal catch attempt")},delegateYield:function(t,r,n){return this.delegate={iterator:N(t),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=e),v}},t}function i(e,t,r,n,o,a,i){try{var c=e[a](i),u=c.value}catch(e){return void r(e)}c.done?t(u):Promise.resolve(u).then(n,o)}function c(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var a=e.apply(t,r);function c(e){i(a,n,o,c,u,"next",e)}function u(e){i(a,n,o,c,u,"throw",e)}c(void 0)}))}}function u(e){return function(e){if(Array.isArray(e))return s(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return s(e,t);var r={}.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function l(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,f(n.key),n)}}function f(e){var t=function(e,t){if("object"!=o(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=o(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==o(t)?t:t+""}function p(e,t,r){return t=m(t),function(e,t){if(t&&("object"==o(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,h()?Reflect.construct(t,r||[],m(e).constructor):t.apply(e,r))}function h(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(h=function(){return!!e})()}function m(e){return m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},m(e)}function d(e,t){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},d(e,t)}var y=function(e){function t(e){var r,n=e.template,o=e.page,a=e.cache;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=p(this,t,[{element:".preloader",elements:{title:".preloader__text",number:".preloader__number",numberText:".preloader__number__text",preloaderAnimation:".preloader__animation"}}])).pageCache=a,r.otherImages=["https://www.hermann-art.com/images/hermannImage.jpg","https://www.hermann-art.com/images/pushpin.jpg"],r.loadedItems={preloaderImages:0,galleryImages:0,pages:0,otherImages:0};var i=(window.ASSETS.galleries||[]).map((function(e){return"/gallery/".concat(e.uid)})),c=[].concat(["/","/about"],u(i));return r.totalItems={preloaderImages:window.ASSETS.preloaderImages.length,galleryImages:window.ASSETS.galleryImages.length,pages:c.length,otherImages:r.otherImages.length},r.totalAssets=r.totalItems.preloaderImages+r.totalItems.galleryImages+r.totalItems.pages+r.otherImages.length,r.template=n,r.page=o,r.createLoader(),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&d(e,t)}(t,e),r=t,o=[{key:"updateProgress",value:function(){var e,t=this,r=(this.loadedItems.preloaderImages+this.loadedItems.galleryImages+this.loadedItems.pages+this.loadedItems.otherImages)/this.totalAssets*90;r>=90?this.startTime||(this.startTime=Date.now(),this.progressInterval=setInterval((function(){var r=(Date.now()-t.startTime)/6e3*10;e=Math.min(90+r,100),t.elements.numberText.innerHTML="".concat(Math.round(e),"%"),e>=100&&(clearInterval(t.progressInterval),t.onLoaded())}),100)):(e=r,this.elements.numberText.innerHTML="".concat(Math.round(e),"%"))}},{key:"loadPreloaderImages",value:(y=c(a().mark((function e(){var t,r=this;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(window.ASSETS.preloaderImages.length){e.next=2;break}return e.abrupt("return");case 2:return t=window.ASSETS.preloaderImages.map(function(){var e=c(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,r.loadImage(t);case 3:r.loadedItems.preloaderImages++,r.updateProgress(),r.loadedItems.preloaderImages===r.totalItems.preloaderImages&&r.elements.preloaderAnimation&&(n.default.fromTo(r.elements.title,{opacity:0},{opacity:1,duration:.5,ease:"ease.in"}),n.default.fromTo(r.elements.preloaderAnimation,{opacity:0},{opacity:1,duration:1,ease:"ease.in",delay:.5})),e.next=12;break;case 8:e.prev=8,e.t0=e.catch(0),console.error("Error loading preloader image:",e.t0),r.updateProgress();case 12:case"end":return e.stop()}}),e,null,[[0,8]])})));return function(t){return e.apply(this,arguments)}}()),e.next=5,Promise.allSettled(t);case 5:case"end":return e.stop()}}),e)}))),function(){return y.apply(this,arguments)})},{key:"loadGalleryImages",value:(m=c(a().mark((function e(){var t,r=this;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(window.ASSETS.galleryImages.length){e.next=2;break}return e.abrupt("return");case 2:return t=window.ASSETS.galleryImages.map(function(){var e=c(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,Promise.all([r.loadImage(t.thumbnail),r.loadImage(t.preview)]);case 3:r.loadedItems.galleryImages++,r.updateProgress(),e.next=11;break;case 7:e.prev=7,e.t0=e.catch(0),console.error("Error loading gallery image:",e.t0),r.updateProgress();case 11:case"end":return e.stop()}}),e,null,[[0,7]])})));return function(t){return e.apply(this,arguments)}}()),e.next=5,Promise.allSettled(t);case 5:case"end":return e.stop()}}),e)}))),function(){return m.apply(this,arguments)})},{key:"loadPages",value:(h=c(a().mark((function e(){var t,r,n,o,i,s=this;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=["/","/about"],r=window.ASSETS.galleries||[],n=r.map((function(e){return"/gallery/".concat(e.uid)})),o=[].concat(t,u(n)),i=o.map(function(){var e=c(a().mark((function e(t){var r,n,o,i;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,fetch(t);case 3:if(200!==(r=e.sent).status){e.next=14;break}return e.next=7,r.text();case 7:n=e.sent,(o=document.createElement("div")).innerHTML=n,i=o.querySelector(".content"),s.pageCache.set(t,{html:i.innerHTML,template:i.getAttribute("data-template")}),s.loadedItems.pages++,s.updateProgress();case 14:e.next=20;break;case 16:e.prev=16,e.t0=e.catch(0),console.error("Error fetching ".concat(t,":"),e.t0),s.updateProgress();case 20:case"end":return e.stop()}}),e,null,[[0,16]])})));return function(t){return e.apply(this,arguments)}}()),e.next=7,Promise.allSettled(i);case 7:case"end":return e.stop()}}),e)}))),function(){return h.apply(this,arguments)})},{key:"loadImage",value:function(e){return new Promise((function(t,r){var n=new window.Image;n.crossOrigin="anonymous",n.src=e,n.onload=function(){return t(n)},n.onerror=r}))}},{key:"loadOtherImages",value:(f=c(a().mark((function e(){var t,r=this;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=this.otherImages.map(function(){var e=c(a().mark((function e(t){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,r.loadImage(t);case 3:r.loadedItems.otherImages++,r.updateProgress(),e.next=11;break;case 7:e.prev=7,e.t0=e.catch(0),console.error("Error loading static image:",e.t0),r.updateProgress();case 11:case"end":return e.stop()}}),e,null,[[0,7]])})));return function(t){return e.apply(this,arguments)}}()),e.next=3,Promise.allSettled(t);case 3:case"end":return e.stop()}}),e,this)}))),function(){return f.apply(this,arguments)})},{key:"createLoader",value:(s=c(a().mark((function e(){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.loadPreloaderImages();case 3:return e.next=5,Promise.all([this.loadGalleryImages(),this.loadOtherImages(),this.loadPages()]);case 5:e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),console.error("Error in loader:",e.t0);case 10:case"end":return e.stop()}}),e,this,[[0,7]])}))),function(){return s.apply(this,arguments)})},{key:"onLoaded",value:function(){var e=this;return new Promise((function(t){e.emit("completed"),e.animateOut=n.default.timeline({delay:.5}),"home"===e.template&&e.animateOut.call((function(){e.page&&"function"==typeof e.page.initialSpeedUp&&(e.page.initialSpeedUp(),e.page.initializePinnedArt())})),e.animateOut.to(e.element,{scaleY:0,transformOrigin:"0 100%",duration:.5}),e.animateOut.call((function(){e.destroy(),t()}))}))}},{key:"destroy",value:function(){this.progressInterval&&clearInterval(this.progressInterval),this.element&&this.element.parentNode&&this.element.parentNode.removeChild(this.element)}}],o&&l(r.prototype,o),i&&l(r,i),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,o,i,s,f,h,m,y}(r("./app/classes/Components.js").default)}},(function(e){e.h=()=>"611241b3bade58ff37f6"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,