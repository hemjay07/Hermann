/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
@charset "UTF-8";
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.gallery__details, .details, .gallery, .overlay, .preloader, .content__move, .content__rotate,
.content__reverse, body, html, .home {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.details, .preloader {
  align-items: center;
  display: flex;
  justify-content: center;
}

.dg.ac {
  z-index: 99999 !important;
}

.gallery__details__paragraph, .about__recognition__award, .about__recognition__degree, .about__service__description {
  font-size: 1.6rem;
  font-weight: 300;
  line-height: 1.5;
}
@media (max-width: 767px) {
  .gallery__details__paragraph, .about__recognition__award, .about__recognition__degree, .about__service__description {
    font-size: 2rem;
  }
}
@media (max-width: 480px) {
  .gallery__details__paragraph, .about__recognition__award, .about__recognition__degree, .about__service__description {
    font-size: 2.8rem;
  }
}

.about__recognition__subtitle, .about__service__title {
  font-family: "Montserrat";
  font-size: 2rem;
  margin-bottom: 2rem;
}
@media (max-width: 767px) {
  .about__recognition__subtitle, .about__service__title {
    font-size: 3rem;
    margin-bottom: 4rem;
  }
}

.about__social__title, .about__recognition__title, .about__first__right h2 {
  font-family: "George X";
  font-size: 5rem;
  line-height: 1;
}

.gallery__details__title {
  font-family: "George X";
  font-size: 8rem;
}

@font-face {
  font-family: "blowbrush";
  src: url(d5e7cdbde66a407b5108.otf) format("opentype"), url(31b0d65ca7795d041afe.ttf) format("truetype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "George X";
  src: url(a4a8eb53627b3d1a4201.woff2) format("woff2"), url(309bcc58a57b38d7fbf6.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(0e6b7bf4aefb74735816.woff2) format("woff2"), url(65915d9417a4a6661e27.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(fa32cf40d8b3cb0a9a0e.woff2) format("woff2"), url(98ccc5d5390b7fe7a79c.woff) format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(c186d81e6e7f1863599b.woff2) format("woff2"), url(03ccdb4fca57bb51c559.woff) format("woff");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(7e687123cd4528224ce5.ttf) format("truetype");
  font-weight: normal;
  font-style: normal;
}
*,
*:after,
*:before {
  box-sizing: border-box;
  user-select: none;
  cursor: none;
  -webkit-tap-highlight-color: transparent;
  /* Prevents tap highlight on iOS */
  -webkit-touch-callout: none;
  /* Prevents callout menu on long-press */
}

html {
  font-size: 0.5208333333vw; /* Set base font size by viewport width for standard resolution */
  line-height: 1;
  position: fixed;
  overflow: hidden;
}
@media (max-width: 1023px) {
  html {
    font-size: 0.9765625vw;
    /* Adjust font size for phone screen resolutions */
  }
}
@media (max-width: 767px) {
  html {
    font-size: 1.3020833333vw;
    /* Adjust font size for phone screen resolutions */
  }
}

body {
  cursor: none;
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
}

.content {
  display: flex;
  justify-content: center;
  align-items: center;
}

.content__move {
  overflow: hidden;
}

.cursor-dot {
  width: 5px;
  height: 5px;
  background-color: white;
  mix-blend-mode: difference;
}
.cursor-dot.cursor-scroll {
  width: 8px;
  height: 8px;
  background-color: #80ff00;
  transform: translate(-50%, -50%) rotate(45deg);
  border-bottom: 2px solid #80ff00;
  border-right: 2px solid #80ff00;
}

.cursor-outline {
  width: 35px;
  height: 35px;
  border: 3px solid hsl(78, 100%, 40%);
  transition: all 0.3s ease;
}
.cursor-outline.cursor-scroll {
  width: auto;
  height: auto;
  border: none;
  background: none;
  font-size: 1.2rem;
  color: #80ff00;
  text-transform: uppercase;
  letter-spacing: 0.2em;
  transform: translate(10px, -10px);
}
.cursor-outline.cursor-scroll::before {
  content: "Scroll";
}
.cursor-outline::after {
  content: attr(data-label);
  position: absolute;
  top: -10px;
  left: 50px;
  padding: 5px 10px;
  background-color: hsla(78, 100%, 90%, 0.6);
  color: hsl(78, 100%, 15%);
  font-size: 20px;
  border-radius: 4px;
  white-space: nowrap;
  display: none;
  pointer-events: none;
}

.image-hover.cursor-outline {
  background-color: hsla(78, 100%, 90%, 0.6);
  border: none;
}

.cursor-outline.image-hover::after {
  display: block;
}

.cursor-dot,
.cursor-outline {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  z-index: 999999;
  pointer-events: none;
}

@media (hover: hover) {
  .cursor-dot,
  .cursor-outline {
    display: block;
  }
}
/* Pseudo-element for the label next to the cursor */
/* Show the label when hovering over an image */
a {
  color: inherit;
  outline: none;
  text-decoration: none;
}

button {
  background: none;
  border: none;
  color: inherit;
  cursor: pointer;
  outline: none;
}

canvas {
  pointer-events: none;
  position: relative;
}

[data-animation=title] span,
[data-animation=label] span,
[data-animation=paragraph] span {
  display: inline-block;
  overflow: hidden;
  vertical-align: top;
}

.page-transition {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 3000;
  display: none;
  pointer-events: none;
}
.page-transition__layer {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  transform: translate3d(100%, 0, 0);
  pointer-events: none;
}
.page-transition__layer:nth-child(1) {
  background: hsl(90, 100%, 50%);
  z-index: 3001;
}
.page-transition__layer:nth-child(2) {
  background: hsl(200, 100%, 50%);
  z-index: 3002;
}
.page-transition__layer:nth-child(3) {
  background: hsl(45, 100%, 50%);
  z-index: 3003;
}
.page-transition.is-animating {
  display: block;
}
.page-transition.is-animating-next .page-transition__layer {
  animation: layer-slide-next-1 1.5s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards;
}
.page-transition.is-animating-next .page-transition__layer:nth-child(2) {
  animation-name: layer-slide-next-2;
}
.page-transition.is-animating-next .page-transition__layer:nth-child(3) {
  animation-name: layer-slide-next-3;
}

@keyframes layer-slide-next-1 {
  0% {
    transform: translate3d(100%, 0, 0);
  }
  25%, 75% {
    transform: translate3d(0, 0, 0);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  100% {
    transform: translate3d(-100%, 0, 0);
  }
}
@keyframes layer-slide-next-2 {
  0%, 12.5% {
    transform: translate3d(100%, 0, 0);
  }
  37.5%, 62.5% {
    transform: translate3d(0, 0, 0);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  87.5%, 100% {
    transform: translate3d(-100%, 0, 0);
  }
}
@keyframes layer-slide-next-3 {
  0%, 25% {
    transform: translate3d(100%, 0, 0);
    animation-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1);
  }
  75%, 100% {
    transform: translate3d(-100%, 0, 0);
  }
}
.page-transition.is-animating-prev .page-transition__layer {
  animation: layer-slide-prev-1 1.5s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards;
}
.page-transition.is-animating-prev .page-transition__layer:nth-child(2) {
  animation-name: layer-slide-prev-2;
}
.page-transition.is-animating-prev .page-transition__layer:nth-child(3) {
  animation-name: layer-slide-prev-3;
}

@keyframes layer-slide-prev-1 {
  0% {
    transform: translate3d(-100%, 0, 0);
  }
  25%, 75% {
    transform: translate3d(0, 0, 0);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  100% {
    transform: translate3d(100%, 0, 0);
  }
}
@keyframes layer-slide-prev-2 {
  0%, 12.5% {
    transform: translate3d(-100%, 0, 0);
  }
  37.5%, 62.5% {
    transform: translate3d(0, 0, 0);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  87.5%, 100% {
    transform: translate3d(100%, 0, 0);
  }
}
@keyframes layer-slide-prev-3 {
  0%, 25% {
    transform: translate3d(-100%, 0, 0);
    animation-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1);
  }
  75%, 100% {
    transform: translate3d(100%, 0, 0);
  }
}
.preloader {
  display: flex;
  flex-direction: column;
  gap: 3rem;
  background-color: black;
  color: hsl(78, 100%, 45%);
  z-index: 3;
}

.overlay {
  background-color: hsla(0, 0%, 0%, 0.85);
  z-index: 4;
}

.preloader__text {
  font-family: "blowbrush";
  font-size: 6.5rem;
  max-width: 66rem;
  z-index: 677;
  text-shadow: 0 0 50px hsla(0, 0%, 0%, 0.4);
}

.preloader__number {
  font-size: 2.5rem;
  font-weight: 900;
  z-index: 677;
}

.preloader__animation {
  display: none;
}

.frame {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  opacity: 0; /* Start with frames hidden */
  will-change: opacity;
  transition: opacity 0.8s ease-in-out; /* Smooth transition between frames */
}
.frame img {
  position: absolute;
  background: rgba(255, 255, 255, 0.208);
  opacity: 1;
  height: 100%;
}

.frame1 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame1 .img1 {
    left: 20vw;
  }
}

.frame1 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame1 .img2 {
    right: 20vw;
  }
}

.frame2 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame2 .img1 {
    left: 20vw;
  }
}

.frame2 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame2 .img2 {
    right: 20vw;
  }
}

.frame3 .img1 {
  top: 50%;
  transform: translateY(-50%);
  left: 50vw;
  width: 500px;
  height: 500px;
}

.frame3 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame3 .img2 {
    right: 20vw;
  }
}

.frame4 .img1 {
  top: 0;
  right: 50vw;
  width: 400px;
  height: 400px;
  z-index: 6;
}
@media (max-width: 767px) {
  .frame4 .img1 {
    right: 20vw;
  }
}

.frame4 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame4 .img2 {
    right: 20vw;
  }
}

.frame4 .img3 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame4 .img3 {
    left: 20vw;
  }
}

.frame5 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame5 .img1 {
    left: 20vw;
  }
}

.frame5 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame5 .img2 {
    right: 20vw;
  }
}

.frame6 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame6 .img1 {
    left: 20vw;
  }
}

.frame6 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame6 .img2 {
    right: 20vw;
  }
}

.frame6 .img3 {
  bottom: 0;
  left: 50vw;
  height: 60%;
}
@media (max-width: 767px) {
  .frame6 .img3 {
    left: 20vw;
  }
}

.frame7 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame7 .img1 {
    left: 20vw;
  }
}

.frame7 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame7 .img2 {
    right: 20vw;
  }
}

.frame7 .img3 {
  bottom: 20px;
  left: 50vw;
  height: 60%;
}
@media (max-width: 767px) {
  .frame7 .img3 {
    left: 20vw;
  }
}

.frame7 .img4 {
  top: 40px;
  right: 50vw;
  height: 550px;
  width: 500px;
}
@media (max-width: 767px) {
  .frame7 .img4 {
    right: 20vw;
  }
}

.frame8 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame8 .img1 {
    left: 20vw;
  }
}

.frame8 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame8 .img2 {
    right: 20vw;
  }
}

.frame8 .img3 {
  top: 40px;
  right: 50vw;
  height: 550px;
  width: 500px;
}
@media (max-width: 767px) {
  .frame8 .img3 {
    right: 20vw;
  }
}

.frame9 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame9 .img1 {
    left: 20vw;
  }
}

.frame9 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame9 .img2 {
    right: 20vw;
  }
}

.frame10 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame10 .img1 {
    left: 20vw;
  }
}

.frame10 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame10 .img2 {
    right: 20vw;
  }
}

.frame11 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame11 .img1 {
    left: 20vw;
  }
}

.frame11 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame11 .img2 {
    right: 20vw;
  }
}

.frame12 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame12 .img1 {
    left: 20vw;
  }
}

.frame12 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame12 .img2 {
    right: 20vw;
  }
}

.frame12 .img3 {
  top: 0;
  right: 50vw;
  height: 550px;
  width: 500px;
}
@media (max-width: 767px) {
  .frame12 .img3 {
    right: 20vw;
  }
}

.frame12 .img4 {
  bottom: 0;
  left: 50vw;
  height: 550px;
  width: 500px;
}
@media (max-width: 767px) {
  .frame12 .img4 {
    left: 20vw;
  }
}

@keyframes switchFrames {
  0% {
    opacity: 1;
  } /* Frame is visible */
  8.33% {
    opacity: 1;
  } /* Maintain visibility */
  8.34% {
    opacity: 0;
  } /* Start fading out */
  100% {
    opacity: 0;
  } /* Remain hidden */
}
.frame1 {
  animation: switchFrames 6s infinite;
}

.frame2 {
  animation: switchFrames 6s infinite;
  animation-delay: 0.5s;
}

.frame3 {
  animation: switchFrames 6s infinite;
  animation-delay: 1s;
}

.frame4 {
  animation: switchFrames 6s infinite;
  animation-delay: 1.5s;
}

.frame5 {
  animation: switchFrames 6s infinite;
  animation-delay: 2s;
}

.frame6 {
  animation: switchFrames 6s infinite;
  animation-delay: 2.5s;
}

.frame7 {
  animation: switchFrames 6s infinite;
  animation-delay: 3s;
}

.frame8 {
  animation: switchFrames 6s infinite;
  animation-delay: 3.5s;
}

.frame9 {
  animation: switchFrames 6s infinite;
  animation-delay: 4s;
}

.frame10 {
  animation: switchFrames 6s infinite;
  animation-delay: 4.5s;
}

.frame11 {
  animation: switchFrames 6s infinite;
  animation-delay: 5s;
}

.frame12 {
  animation: switchFrames 6s infinite;
  animation-delay: 5.5s;
}

.navigation {
  position: fixed;
  top: 0;
  right: 0;
  width: auto;
  height: 100vh;
  z-index: 2;
}

.navigation__overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.2);
  opacity: 0;
  pointer-events: none;
  z-index: 3;
  transition: opacity 0.3s ease;
}
.navigation__overlay.is-active {
  opacity: 1;
  pointer-events: all !important;
}
@media screen and (max-width: 768px) {
  .navigation__overlay {
    display: none;
  }
}

.navigation__button {
  position: fixed;
  top: 4rem;
  right: 4rem;
  width: 7rem;
  height: 7rem;
  border: none;
  background: none;
  padding: 0;
  cursor: pointer;
  z-index: 5;
}

.navigation__button-circle {
  position: relative;
  width: 100%;
  height: 100%;
}
.navigation__button-circle::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: hsl(90, 100%, 50%);
  border-radius: 50%;
  transform: scale(0);
  transform-origin: center;
  transition: transform 0.6s cubic-bezier(0.7, 0, 0.2, 1);
  box-shadow: 0 0 20px rgba(145, 255, 0, 0.2);
}
.navigation__button:hover .navigation__button-circle::before, .navigation__button.is-active .navigation__button-circle::before {
  transform: scale(1);
}
.navigation__button-circle svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.navigation__button-circle svg circle {
  fill: hsl(78, 100%, 15%);
  transition: fill 0.3s ease;
}
.navigation__button:hover .navigation__button-circle svg circle, .navigation__button.is-active .navigation__button-circle svg circle {
  fill: transparent;
}

.navigation__button-icon {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 2.5rem;
  height: 2.25rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  z-index: 1;
}
.navigation__button-icon span {
  position: relative;
  width: 100%;
  height: 3px;
  background-color: #fff;
  transform-origin: center;
  transition: transform 0.3s ease, width 0.3s ease, opacity 0.3s ease;
}
.navigation__button-icon span:nth-child(2) {
  width: 70%;
  margin-left: auto;
}
.navigation__button-icon span:first-child {
  transform-origin: center;
}
.navigation__button-icon span:last-child {
  transform-origin: center;
}
.navigation__button:hover .navigation__button-icon span {
  width: 100%;
}

.navigation__menu-wrapper {
  position: fixed;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
  max-width: 40vw;
  pointer-events: none;
  z-index: 4;
  visibility: hidden;
  overflow: hidden;
}
@media screen and (max-width: 768px) {
  .navigation__menu-wrapper {
    max-width: 100%;
  }
}

.navigation__menu-background {
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
  background-color: hsl(78, 100%, 15%);
  transform-origin: right center;
  transform: scaleX(0);
  pointer-events: all;
  background-image: linear-gradient(0deg, rgba(255, 255, 255, 0.03) 1px, transparent 1px), linear-gradient(90deg, rgba(255, 255, 255, 0.03) 1px, transparent 1px);
  background-size: 20px 20px;
  background-position: center center;
}

.navigation__menu {
  position: relative;
  z-index: 1;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: all;
}
.navigation__menu::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(45deg, rgba(255, 255, 255, 0.03) 0%, transparent 100%);
  pointer-events: none;
}

.navigation__menu-list {
  list-style: none;
  padding: 0;
  margin: 0;
  text-align: left;
}

.navigation__menu-list-item {
  margin: 4rem 0;
  opacity: 0;
  transform: translateY(2rem);
  position: relative;
  padding-left: 3rem;
  font-size: calc(clamp(3.25em, 5vw, 4em) * 0.5);
}
.navigation__menu-list-item::before {
  content: "•";
  position: absolute;
  left: 0;
  color: white;
  line-height: 1;
  opacity: 0.5;
  top: 15%;
  font-size: calc(clamp(3.25em, 5vw, 4em) * 0.5);
  transition: opacity 0.3s ease;
}
.navigation__menu-list-item:hover::before {
  opacity: 0.8;
}
.navigation__menu-list-item a {
  display: inline-block;
  color: white;
  text-decoration: none;
  font-size: clamp(3.25em, 5vw, 4em);
  font-weight: 300;
  font-family: "George X";
  line-height: 1;
  transition: all 0.3s ease;
  letter-spacing: -0.02em;
}
.navigation__menu-list-item a:hover {
  opacity: 0.8;
  transform: translateX(10px);
  letter-spacing: 0;
}

.gallery {
  overflow-y: auto;
  position: fixed;
  width: 100%;
  background: hsl(0, 3%, 14%);
  color: "#37384C";
  -ms-overflow-style: none;
  scrollbar-width: none;
}
.gallery::-webkit-scrollbar {
  display: none;
}
.gallery.no-scroll {
  overflow: hidden;
}
.gallery__content {
  position: relative;
  z-index: 1;
  width: 100%;
  height: 100%;
}
.gallery__navigation {
  position: fixed;
  z-index: 2000;
  top: 50%;
  transform: translateY(-50%);
  width: 100%;
  pointer-events: none;
}
.gallery__nav {
  position: absolute;
  pointer-events: auto;
  border: none;
  color: white;
  cursor: pointer;
  transition: all 0.3s ease;
  mix-blend-mode: difference;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  gap: 1rem;
  background: transparent;
  padding: 1.5rem;
}
.gallery__nav::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 120%;
  height: 120%;
  background: hsla(0, 0%, 0%, 0.4);
  border-radius: 8px;
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}
.gallery__nav:hover {
  transform: scale(1.05);
}
.gallery__nav:hover::before {
  opacity: 1;
}
.gallery__nav:hover .icon {
  stroke: hsl(90, 100%, 50%);
  transform: scale(1.1);
  mix-blend-mode: difference;
}
.gallery__nav:hover .gallery__nav-label {
  opacity: 1;
  transform: translateY(0);
  mix-blend-mode: difference;
}
.gallery__nav--prev {
  left: 2rem;
}
.gallery__nav--next {
  right: 2rem;
}
.gallery__nav--next .icon {
  transform: rotate(180deg);
}
.gallery__nav--next:hover .icon {
  transform: rotate(180deg) scale(1.1);
}
.gallery__nav .gallery__nav-label {
  font-size: 1.5rem;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  color: hsl(90, 100%, 50%);
  opacity: 0;
  transform: translateY(10px);
  transition: all 0.3s ease;
  text-align: center;
  white-space: nowrap;
  pointer-events: none;
  font-family: "Suisse BP";
  mix-blend-mode: difference;
}

.hidden {
  display: none;
}

.icon {
  width: 40px;
  height: 40px;
  fill: none;
  stroke: hsl(90, 100%, 50%);
  stroke-width: 6;
  transition: all 0.3s ease;
  mix-blend-mode: difference;
}

.grid {
  --gap: clamp(1rem, 5vmin, 2rem);
  --columns: 150px;
  gap: var(--gap);
  columns: var(--columns);
  width: 96%;
  max-width: 1400px;
  margin: 5rem auto;
  position: relative;
  z-index: 1;
}
@media (min-width: 768px) {
  .grid {
    --columns: 300px;
  }
}

.grid_item {
  break-inside: avoid;
  margin-bottom: var(--gap);
  position: relative;
  cursor: pointer;
  overflow: hidden;
  transform-origin: center center;
  will-change: transform;
}
.grid_item img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  filter: grayscale(100%);
  transition: filter 0.4s ease, transform 0.4s ease;
}
.grid_item img:hover {
  filter: grayscale(0);
  transform: scale(1.03);
}
.grid_item::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.2);
  opacity: 0;
  transition: opacity 0.4s ease;
}
.grid_item:hover::after {
  opacity: 1;
}

.preview {
  position: fixed;
  overflow: hidden;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: none;
  z-index: 1000;
}
.preview__background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: hsl(0, 3%, 14%);
  opacity: 0;
  transition: opacity 0.3s ease;
}
.preview__content {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.preview__image-container {
  position: relative;
  width: 100%;
  height: 100%;
}
.preview__close {
  position: fixed;
  top: 2rem;
  right: 2rem;
  width: 6rem;
  height: 6rem;
  border: none;
  background: transparent;
  cursor: pointer;
  z-index: 2001;
  opacity: 0;
  transition: all 0.3s ease;
  mix-blend-mode: difference;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}
.preview__close .icon-close {
  width: 100%;
  height: 100%;
  fill: hsl(90, 100%, 50%);
  transition: transform 0.3s ease;
}
.preview__close:hover {
  transform: scale(1.1);
}
.preview__close:hover .icon-close {
  transform: rotate(90deg);
}
.preview__transition-image {
  position: fixed;
  object-fit: cover;
  z-index: 1001;
  will-change: transform, width, height;
  transform-origin: center center;
  filter: brightness(1.1);
}

.preview--open {
  display: block;
}
.preview--open .preview__close {
  opacity: 1;
}
.preview--open .preview__background {
  opacity: 1;
}

@media (max-width: 768px) {
  .gallery__nav--prev {
    left: 1rem;
  }
  .gallery__nav--next {
    right: 1rem;
  }
  .gallery__nav .gallery__nav-label {
    font-size: 1rem;
  }
  .icon {
    width: 30px;
    height: 30px;
  }
}
.about {
  touch-action: none;
  /* Prevents default touch actions */
  -webkit-overflow-scrolling: touch;
  /* Enables smooth scrolling on iOS */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  color: #384f03;
  overflow: hidden;
  font-weight: 300;
  font-family: "Montserrat";
}
.about__scroll__text {
  position: fixed;
  bottom: 1rem;
  left: 50vw;
  transform: translateX(-50%);
  font-size: 1.5rem;
  color: #80ff00;
  text-transform: uppercase;
  letter-spacing: 0.2em;
  font-weight: 300;
  opacity: 0.8;
  white-space: nowrap;
  z-index: 1;
}
@media (max-width: 767px) {
  .about__scroll__text {
    font-size: 1.8rem;
  }
}
.about__wrapper {
  position: relative;
  width: 100%;
  height: 100vh;
}
.about__first {
  display: flex;
  width: 100%;
  height: 100vh;
  position: relative;
}
.about__first__left {
  position: relative;
  height: 100%;
  flex: 1;
  isolation: isolate;
}
.about__first__left::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to right, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.2));
  z-index: 1;
}
@media (max-width: 1023px) {
  .about__first__left::after {
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.8));
  }
}
@media (max-width: 1023px) {
  .about__first__left {
    width: 100%;
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
  }
}
@media (min-width: 1025px) {
  .about__first__left {
    flex: none;
  }
}
.about__first__image {
  position: absolute;
  height: 100%;
}
.about__first__image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: 50% 0%;
}
@media (max-width: 1023px) {
  .about__first__image {
    width: 100%;
    height: 100vh;
  }
}
.about__first__content {
  position: relative;
  z-index: 2;
  padding: 6rem;
  max-width: 60rem;
  color: #FFFFFF;
  font-weight: 300;
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp 1s ease forwards;
  animation-delay: 0.5s;
}
@media (max-width: 1023px) {
  .about__first__content {
    padding: 2.5rem;
    height: 100vh;
    max-width: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    padding-bottom: 18vh;
  }
}
.about__first__title {
  font-size: 7.2rem;
  line-height: 1.1;
  margin-bottom: 3.2rem;
  font-weight: 400;
  font-family: "blowbrush";
}
.about__first__title span {
  display: inline-block;
  position: relative;
  color: #80ff00;
  transition: color 0.3s ease;
}
.about__first__title span::after {
  content: "";
  position: absolute;
  bottom: -5px;
  left: 0;
  width: 100%;
  height: 2px;
  background: #80ff00;
  transform: scaleX(0);
  transition: transform 0.3s ease;
  transform-origin: right;
}
.about__first__title span:hover::after {
  transform: scaleX(1);
  transform-origin: left;
}
@media (max-width: 1023px) {
  .about__first__title {
    font-size: 8rem;
    margin-bottom: 2.4rem;
  }
  .about__first__title span {
    font-size: 9rem;
    line-height: 1;
    display: block;
    margin-top: 1rem;
  }
}
.about__first__description {
  font-size: 2.4rem;
  line-height: 1.5;
  opacity: 0;
  max-width: 52rem;
  letter-spacing: 0.01em;
  font-weight: 300;
  white-space: pre-wrap;
  margin-top: 2rem;
}
@media (max-width: 1023px) {
  .about__first__description {
    font-size: 2.8rem;
    line-height: 1.4;
    margin-top: 0;
    font-weight: 300;
    max-width: 100%;
    letter-spacing: 0;
  }
}
.about__first__right {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  padding: 6rem;
  background: #252323;
  color: #FFFFFF;
  overflow: hidden;
  transform: translateY(100%);
  will-change: transform;
}
.about__first__right h2 {
  margin-bottom: 4rem;
  margin-top: 10rem;
  color: #80ff00;
  font-family: "blowbrush";
}
@media (min-width: 1025px) {
  .about__first__right {
    position: relative;
    transform: none;
  }
}
.about__services {
  display: flex;
  flex-direction: column;
  gap: 6rem;
}
.about__service {
  max-width: 44rem;
  transition: transform 0.3s ease;
}
@media (max-width: 1023px) {
  .about__service {
    max-width: unset;
  }
}
.about__service:hover {
  transform: translateX(10px);
}
.about__service:hover .about__service__title {
  color: #80ff00;
}
.about__service:hover .about__service__number {
  color: #80ff00;
}
.about__service__number {
  color: rgba(255, 255, 255, 0.6);
  font-size: 1.4rem;
  display: block;
  margin-bottom: 1rem;
  font-weight: 400;
  letter-spacing: 0.05em;
  transition: color 0.3s ease;
}
.about__service__description {
  color: rgba(255, 255, 255, 0.8);
}
.about__recognition {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  padding: 6rem;
  background: #252323;
  color: #FFFFFF;
  overflow: hidden;
  transform: translateY(100%);
  will-change: transform;
  isolation: isolate;
}
.about__recognition::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
}
.about__recognition__title {
  margin-bottom: 6rem;
  position: relative;
  color: #80ff00;
}
@media (min-width: 1025px) {
  .about__recognition__title {
    margin-top: 25rem !important;
  }
}
.about__recognition__content {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 6rem;
  position: relative;
}
.about__recognition__subtitle {
  color: #FFFFFF;
}
.about__recognition__subtitle:nth-of-type(2) {
  margin-top: 4rem;
}
@media (max-width: 1023px) {
  .about__recognition__subtitle:nth-of-type(2) {
    margin-top: 8rem;
  }
}
.about__recognition__list {
  display: flex;
  flex-direction: column;
  gap: 4rem;
}
.about__recognition__item {
  display: flex;
  gap: 2rem;
  padding-bottom: 2rem;
  border-bottom: 1px solid rgba(128, 255, 0, 0.2);
  transition: transform 0.3s ease;
}
.about__recognition__item:hover {
  transform: translateX(10px);
}
.about__recognition__item:hover .about__recognition__award,
.about__recognition__item:hover .about__recognition__degree {
  color: #80ff00;
}
.about__recognition__year {
  font-size: 1.4rem;
  opacity: 0.6;
  letter-spacing: 0.05em;
  font-weight: 400;
  color: #FFFFFF;
  transition: color 0.3s ease;
}
.about__recognition__details {
  flex: 1;
}
.about__recognition__award, .about__recognition__degree {
  color: rgba(255, 255, 255, 0.8);
  transition: color 0.3s ease;
}
.about__recognition__position, .about__recognition__school {
  font-size: 1.4rem;
  line-height: 1.6;
  color: rgba(255, 255, 255, 0.6);
  font-weight: 300;
}
@media (max-width: 1023px) {
  .about__recognition__position, .about__recognition__school {
    font-size: 1.5rem;
  }
}
@media (min-width: 1025px) {
  .about__recognition {
    left: 40%;
    width: 60%;
    transform: translateX(100%);
  }
}
.about__social {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  padding: 6rem;
  background: #252323;
  color: #FFFFFF;
  overflow: hidden;
  transform: translateY(100%);
  will-change: transform;
  isolation: isolate;
}
.about__social__title {
  margin-bottom: 6rem;
  position: relative;
  color: #80ff00;
}
@media (min-width: 1025px) {
  .about__social__title {
    margin-top: 34rem !important;
  }
}
.about__social__content {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 4rem;
}
.about__social__item {
  display: flex;
  align-items: center;
  gap: 2rem;
  font-size: 2.2rem;
  color: #FFFFFF;
  text-decoration: none;
  transition: all 0.3s ease;
  font-weight: 400;
  letter-spacing: 0.01em;
  position: relative;
}
.about__social__item::before {
  content: "";
  position: absolute;
  left: -20px;
  top: 50%;
  width: 10px;
  height: 2px;
  background: #80ff00;
  transform: scaleX(0);
  transition: transform 0.3s ease;
}
.about__social__item:hover {
  color: #80ff00;
  transform: translateX(10px);
}
.about__social__item:hover::before {
  transform: scaleX(1);
}
.about__social__item:hover svg {
  stroke: #80ff00;
  transform: scale(1.1);
}
.about__social__item svg {
  width: 3rem;
  height: 3rem;
  stroke-width: 1.5;
  transition: all 0.3s ease;
}
.about__social__item span {
  font-weight: 400;
}
@media (min-width: 1025px) {
  .about__social {
    left: 55%;
    width: 45%;
    transform: translateX(100%);
  }
}
@media (max-width: 767px) {
  .about__recognition {
    padding: 4rem;
  }
  .about__recognition__title {
    font-size: 5.6rem;
  }
  .about__recognition__content {
    grid-template-columns: 1fr;
    gap: 4rem;
  }
  .about__social {
    padding: 4rem;
  }
  .about__social__title {
    font-size: 5.6rem;
  }
  .about__social__item {
    font-size: 2rem;
  }
  .about__social__item span {
    font-size: 2.8rem;
  }
  .about__social__item svg {
    width: 4rem;
    height: 4rem;
    margin-right: 1rem;
  }
}

@keyframes scrollLine {
  0% {
    transform: translateY(-100%);
  }
  50% {
    transform: translateY(100%);
  }
  51% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(-100%);
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translate(-50%, 20px);
  }
  to {
    opacity: 1;
    transform: translate(-50%, 0);
  }
}
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
.home {
  padding-top: 7rem;
  font-family: "blowbrush";
  font-size: 3rem;
  background-color: #f5f5f5;
  color: #444444;
}

.galleries {
  font-family: "blowbrush";
  color: hsl(78, 100%, 15%);
  position: fixed;
  left: 50%;
  transform: translateX(-50%);
  top: 4rem;
  z-index: 2;
  font-size: 6rem;
}

.banner {
  position: absolute;
  z-index: 1;
  margin-top: 10vh;
  width: 100%;
  display: grid;
  justify-items: center;
  height: 100vh;
}
@media (max-width: 767px) {
  .banner {
    margin-top: 18vh;
  }
}

.banner .slider {
  top: 0;
  max-width: 170px;
  aspect-ratio: 4/4;
  transform-style: preserve-3d;
  width: 30vw;
  will-change: transform;
  transform: rotateX("16deg");
}
@media (max-width: 767px) {
  .banner .slider {
    aspect-ratio: 6/4;
  }
}

.banner .slider .gallery__image {
  position: absolute;
  inset: 0 0 0 0;
  width: 100%;
  transform: rotateY(calc(var(--position) * 360 / var(--quantity) * -1deg)) translateZ(min(26vw, 480px));
  transform-style: preserve-3d;
  will-change: transform;
  z-index: 1;
  pointer-events: auto;
}
@media (max-width: 767px) {
  .banner .slider .gallery__image {
    transform: rotateY(calc(var(--position) * 360 / var(--quantity) * -1deg)) translateZ(45vw);
  }
}
.banner .slider .gallery__image a.gallery_link {
  position: absolute;
  inset: 0;
  display: block;
  width: 100%;
  height: 100%;
  z-index: 5;
  pointer-events: auto;
  cursor: pointer;
}
.banner .slider .gallery__image figure {
  margin: 0;
  pointer-events: none;
}
.banner .slider .gallery__image img {
  filter: grayscale(100%);
  width: 100%;
  height: 200px;
  object-fit: cover;
  transition: filter 0.5s ease;
  pointer-events: none;
  z-index: 1;
}
.banner .slider .gallery__image img:hover {
  filter: grayscale(0%);
}
@media (max-width: 767px) {
  .banner .slider .gallery__image img {
    height: 100%;
  }
}

.slider {
  pointer-events: auto;
}

.gallery__details__item {
  opacity: 0;
  position: absolute;
  top: 70vh;
  left: 8rem;
  transition: opacity 0.5s ease;
}
@media (max-width: 767px) {
  .gallery__details__item {
    top: 65vh;
    left: 2rem;
  }
}

.gallery__details__title {
  color: hsl(78, 100%, 15%);
}

.gallery__details__paragraph {
  font-family: "Montserrat";
  margin-top: 2rem;
  max-width: 44rem;
}
@media (max-width: 767px) {
  .gallery__details__paragraph {
    max-width: none;
  }
}

.gallery-indicators {
  position: fixed;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 1rem;
  z-index: 2;
  pointer-events: none;
}

.indicator-dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: hsla(78, 100%, 15%, 0.3);
  transition: background-color 0.3s ease;
}
@media (max-width: 767px) {
  .indicator-dot {
    width: 6px;
    height: 6px;
  }
}

.revealer {
  width: max(200vw, 200vh);
  height: max(200vw, 200vh);
  position: absolute;
  z-index: 10;
  background-color: hsl(90, 100%, 50%);
  display: none;
  justify-content: center;
  align-items: center;
  transform: translate(0, max(200vw, 200vh)) rotate(16deg);
  will-change: transform;
}
.revealer ul {
  list-style: disc;
  padding-left: 20px;
}

.revealer__text {
  will-change: opacity;
  color: black;
  font-size: 7.5rem;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/