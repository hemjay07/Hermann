/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
@charset "UTF-8";
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.gallery__details, .details, .gallery, .overlay, .preloader, .content__move, .content__rotate,
.content__reverse, body, html, .home {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.details, .preloader {
  align-items: center;
  display: flex;
  justify-content: center;
}

.dg.ac {
  z-index: 99999 !important;
}

.gallery__details__paragraph, .about__recognition__award, .about__recognition__degree, .about__service__description {
  font-size: 1.6rem;
  font-weight: 300;
  line-height: 1.5;
}
@media (max-width: 767px) {
  .gallery__details__paragraph, .about__recognition__award, .about__recognition__degree, .about__service__description {
    font-size: 2rem;
  }
}
@media (max-width: 480px) {
  .gallery__details__paragraph, .about__recognition__award, .about__recognition__degree, .about__service__description {
    font-size: 2.8rem;
  }
}

.about__recognition__subtitle, .about__service__title {
  font-family: "Montserrat";
  font-size: 2rem;
  margin-bottom: 2rem;
}
@media (max-width: 767px) {
  .about__recognition__subtitle, .about__service__title {
    font-size: 3rem;
    margin-bottom: 4rem;
  }
}

.about__social__title, .about__recognition__title, .about__first__right h2 {
  font-family: "George X";
  font-size: 5rem;
  line-height: 1;
}

.gallery__details__title {
  font-family: "George X";
  font-size: 8rem;
}

@font-face {
  font-family: "blowbrush";
  src: url(d5e7cdbde66a407b5108.otf) format("opentype"), url(31b0d65ca7795d041afe.ttf) format("truetype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "George X";
  src: url(a4a8eb53627b3d1a4201.woff2) format("woff2"), url(309bcc58a57b38d7fbf6.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(0e6b7bf4aefb74735816.woff2) format("woff2"), url(65915d9417a4a6661e27.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(fa32cf40d8b3cb0a9a0e.woff2) format("woff2"), url(98ccc5d5390b7fe7a79c.woff) format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(c186d81e6e7f1863599b.woff2) format("woff2"), url(03ccdb4fca57bb51c559.woff) format("woff");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(7e687123cd4528224ce5.ttf) format("truetype");
  font-weight: normal;
  font-style: normal;
}
*,
*:after,
*:before {
  box-sizing: border-box;
  user-select: none;
  cursor: none;
  -webkit-tap-highlight-color: transparent;
  /* Prevents tap highlight on iOS */
  -webkit-touch-callout: none;
  /* Prevents callout menu on long-press */
}

html {
  cursor: none;
  font-size: 0.5208333333vw; /* Set base font size by viewport width for standard resolution */
  line-height: 1;
  position: fixed;
  overflow: hidden;
}
@media (max-width: 1023px) {
  html {
    font-size: 0.9765625vw;
    /* Adjust font size for phone screen resolutions */
  }
}
@media (max-width: 767px) {
  html {
    font-size: 1.3020833333vw;
    /* Adjust font size for phone screen resolutions */
  }
}

body {
  cursor: none;
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
}

.content {
  display: flex;
  justify-content: center;
  align-items: center;
}

.content__move {
  overflow: hidden;
}

.cursor-dot {
  width: 5px;
  height: 5px;
  background-color: white;
  mix-blend-mode: difference;
}
.cursor-dot.cursor-scroll {
  width: 8px;
  height: 8px;
  background-color: #80ff00;
  transform: translate(-50%, -50%) rotate(45deg);
  border-bottom: 2px solid #80ff00;
  border-right: 2px solid #80ff00;
}

.cursor-outline {
  width: 35px;
  height: 35px;
  border: 3px solid hsl(78, 100%, 40%);
  transition: all 0.3s ease;
}
.cursor-outline.cursor-scroll {
  width: auto;
  height: auto;
  border: none;
  background: none;
  font-size: 1.2rem;
  color: #80ff00;
  text-transform: uppercase;
  letter-spacing: 0.2em;
  transform: translate(10px, -10px);
}
.cursor-outline.cursor-scroll::before {
  content: "Scroll";
}
.cursor-outline::after {
  content: attr(data-label);
  position: absolute;
  top: -10px;
  left: 50px;
  padding: 5px 10px;
  background-color: hsla(78, 100%, 90%, 0.6);
  color: hsl(78, 100%, 15%);
  font-size: 20px;
  border-radius: 4px;
  white-space: nowrap;
  display: none;
  pointer-events: none;
}

.image-hover.cursor-outline {
  background-color: hsla(78, 100%, 90%, 0.6);
  border: none;
}

.cursor-outline.image-hover::after {
  display: block;
}

.cursor-dot,
.cursor-outline {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  z-index: 999999;
  pointer-events: none;
}

@media (hover: hover) {
  .cursor-dot,
  .cursor-outline {
    display: block;
  }
}
/* Pseudo-element for the label next to the cursor */
/* Show the label when hovering over an image */
a {
  color: inherit;
  outline: none;
  text-decoration: none;
}

button {
  background: none;
  border: none;
  color: inherit;
  cursor: pointer;
  outline: none;
}

canvas {
  pointer-events: none;
  position: relative;
}

[data-animation=title] span,
[data-animation=label] span,
[data-animation=paragraph] span {
  display: inline-block;
  overflow: hidden;
  vertical-align: top;
}

.page-transition {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 3000;
  display: none;
  pointer-events: none;
}
.page-transition__layer {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  transform: translate3d(100%, 0, 0);
  pointer-events: none;
}
.page-transition__layer:nth-child(1) {
  background: hsl(90, 100%, 50%);
  z-index: 3001;
}
.page-transition__layer:nth-child(2) {
  background: hsl(200, 100%, 50%);
  z-index: 3002;
}
.page-transition__layer:nth-child(3) {
  background: hsl(45, 100%, 50%);
  z-index: 3003;
}
.page-transition.is-animating {
  display: block;
}
.page-transition.is-animating-next .page-transition__layer {
  animation: layer-slide-next-1 1.5s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards;
}
.page-transition.is-animating-next .page-transition__layer:nth-child(2) {
  animation-name: layer-slide-next-2;
}
.page-transition.is-animating-next .page-transition__layer:nth-child(3) {
  animation-name: layer-slide-next-3;
}

@keyframes layer-slide-next-1 {
  0% {
    transform: translate3d(100%, 0, 0);
  }
  25%, 75% {
    transform: translate3d(0, 0, 0);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  100% {
    transform: translate3d(-100%, 0, 0);
  }
}
@keyframes layer-slide-next-2 {
  0%, 12.5% {
    transform: translate3d(100%, 0, 0);
  }
  37.5%, 62.5% {
    transform: translate3d(0, 0, 0);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  87.5%, 100% {
    transform: translate3d(-100%, 0, 0);
  }
}
@keyframes layer-slide-next-3 {
  0%, 25% {
    transform: translate3d(100%, 0, 0);
    animation-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1);
  }
  75%, 100% {
    transform: translate3d(-100%, 0, 0);
  }
}
.page-transition.is-animating-prev .page-transition__layer {
  animation: layer-slide-prev-1 1.5s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards;
}
.page-transition.is-animating-prev .page-transition__layer:nth-child(2) {
  animation-name: layer-slide-prev-2;
}
.page-transition.is-animating-prev .page-transition__layer:nth-child(3) {
  animation-name: layer-slide-prev-3;
}

@keyframes layer-slide-prev-1 {
  0% {
    transform: translate3d(-100%, 0, 0);
  }
  25%, 75% {
    transform: translate3d(0, 0, 0);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  100% {
    transform: translate3d(100%, 0, 0);
  }
}
@keyframes layer-slide-prev-2 {
  0%, 12.5% {
    transform: translate3d(-100%, 0, 0);
  }
  37.5%, 62.5% {
    transform: translate3d(0, 0, 0);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  87.5%, 100% {
    transform: translate3d(100%, 0, 0);
  }
}
@keyframes layer-slide-prev-3 {
  0%, 25% {
    transform: translate3d(-100%, 0, 0);
    animation-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1);
  }
  75%, 100% {
    transform: translate3d(100%, 0, 0);
  }
}
.preloader {
  display: flex;
  flex-direction: column;
  gap: 3rem;
  background-color: black;
  color: hsl(78, 100%, 45%);
  z-index: 3;
}

.overlay {
  background-color: hsla(0, 0%, 0%, 0.75);
  z-index: 4;
}

.preloader__text {
  font-family: "blowbrush";
  opacity: 0;
  font-size: 6.5rem;
  max-width: 66rem;
  z-index: 677;
  text-shadow: 0 0 50px hsla(0, 0%, 0%, 0.4);
}

.preloader__number {
  font-size: 2.5rem;
  font-weight: 900;
  z-index: 677;
}

.preloader__animation {
  opacity: 0;
}

.frame {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  opacity: 0; /* Start with frames hidden */
  transition: opacity 0.3s ease-in-out; /* Smooth transition between frames */
}
.frame img {
  position: absolute;
  background: rgba(255, 255, 255, 0.208);
  opacity: 1;
  height: 100%;
}

.frame1 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame1 .img1 {
    left: 20vw;
  }
}

.frame1 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame1 .img2 {
    right: 20vw;
  }
}

.frame2 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame2 .img1 {
    left: 20vw;
  }
}

.frame2 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame2 .img2 {
    right: 20vw;
  }
}

.frame3 .img1 {
  top: 50%;
  transform: translateY(-50%);
  left: 50vw;
  width: 500px;
  height: 500px;
}

.frame3 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame3 .img2 {
    right: 20vw;
  }
}

.frame4 .img1 {
  top: 0;
  right: 50vw;
  width: 400px;
  height: 400px;
  z-index: 6;
}
@media (max-width: 767px) {
  .frame4 .img1 {
    right: 20vw;
  }
}

.frame4 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame4 .img2 {
    right: 20vw;
  }
}

.frame4 .img3 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame4 .img3 {
    left: 20vw;
  }
}

.frame5 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame5 .img1 {
    left: 20vw;
  }
}

.frame5 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame5 .img2 {
    right: 20vw;
  }
}

.frame6 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame6 .img1 {
    left: 20vw;
  }
}

.frame6 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame6 .img2 {
    right: 20vw;
  }
}

.frame6 .img3 {
  bottom: 0;
  left: 50vw;
  height: 60%;
}
@media (max-width: 767px) {
  .frame6 .img3 {
    left: 20vw;
  }
}

.frame7 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame7 .img1 {
    left: 20vw;
  }
}

.frame7 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame7 .img2 {
    right: 20vw;
  }
}

.frame7 .img3 {
  bottom: 20px;
  left: 50vw;
  height: 60%;
}
@media (max-width: 767px) {
  .frame7 .img3 {
    left: 20vw;
  }
}

.frame7 .img4 {
  top: 40px;
  right: 50vw;
  height: 550px;
  width: 500px;
}
@media (max-width: 767px) {
  .frame7 .img4 {
    right: 20vw;
  }
}

.frame8 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame8 .img1 {
    left: 20vw;
  }
}

.frame8 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame8 .img2 {
    right: 20vw;
  }
}

.frame8 .img3 {
  top: 40px;
  right: 50vw;
  height: 550px;
  width: 500px;
}
@media (max-width: 767px) {
  .frame8 .img3 {
    right: 20vw;
  }
}

.frame9 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame9 .img1 {
    left: 20vw;
  }
}

.frame9 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame9 .img2 {
    right: 20vw;
  }
}

.frame10 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame10 .img1 {
    left: 20vw;
  }
}

.frame10 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame10 .img2 {
    right: 20vw;
  }
}

.frame11 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame11 .img1 {
    left: 20vw;
  }
}

.frame11 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame11 .img2 {
    right: 20vw;
  }
}

.frame12 .img1 {
  top: 0;
  left: 50vw;
}
@media (max-width: 767px) {
  .frame12 .img1 {
    left: 20vw;
  }
}

.frame12 .img2 {
  top: 0;
  right: 50vw;
}
@media (max-width: 767px) {
  .frame12 .img2 {
    right: 20vw;
  }
}

.frame12 .img3 {
  top: 0;
  right: 50vw;
  height: 550px;
  width: 500px;
}
@media (max-width: 767px) {
  .frame12 .img3 {
    right: 20vw;
  }
}

.frame12 .img4 {
  bottom: 0;
  left: 50vw;
  height: 550px;
  width: 500px;
}
@media (max-width: 767px) {
  .frame12 .img4 {
    left: 20vw;
  }
}

@keyframes switchFrames {
  0% {
    opacity: 1;
  } /* Frame is visible */
  8.33% {
    opacity: 1;
  } /* Maintain visibility */
  8.34% {
    opacity: 0;
  } /* Start fading out */
  100% {
    opacity: 0;
  } /* Remain hidden */
}
.frame1 {
  animation: switchFrames 6s infinite ease-in-out;
}

.frame2 {
  animation: switchFrames 6s infinite ease-in-out;
  animation-delay: 0.5s;
}

.frame3 {
  animation: switchFrames 6s infinite ease-in-out;
  animation-delay: 1s;
}

.frame4 {
  animation: switchFrames 6s infinite ease-in-out;
  animation-delay: 1.5s;
}

.frame5 {
  animation: switchFrames 6s infinite ease-in-out;
  animation-delay: 2s;
}

.frame6 {
  animation: switchFrames 6s infinite ease-in-out;
  animation-delay: 2.5s;
}

.frame7 {
  animation: switchFrames 6s infinite ease-in-out;
  animation-delay: 3s;
}

.frame8 {
  animation: switchFrames 6s infinite ease-in-out;
  animation-delay: 3.5s;
}

.frame9 {
  animation: switchFrames 6s infinite ease-in-out;
  animation-delay: 4s;
}

.frame10 {
  animation: switchFrames 6s infinite ease-in-out;
  animation-delay: 4.5s;
}

.frame11 {
  animation: switchFrames 6s infinite ease-in-out;
  animation-delay: 5s;
}

.frame12 {
  animation: switchFrames 6s infinite ease-in-out;
  animation-delay: 5.5s;
}

.navigation {
  position: fixed;
  top: 0;
  right: 0;
  width: auto;
  height: 100vh;
  z-index: 2;
}

.navigation__overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.2);
  opacity: 0;
  pointer-events: none;
  z-index: 3;
  transition: opacity 0.3s ease;
}
.navigation__overlay.is-active {
  opacity: 1;
  pointer-events: all !important;
}
@media screen and (max-width: 768px) {
  .navigation__overlay {
    display: none;
  }
}

.navigation__button {
  position: fixed;
  top: 4rem;
  right: 4rem;
  width: 7rem;
  height: 7rem;
  border: none;
  background: none;
  padding: 0;
  cursor: pointer;
  z-index: 5;
}

.navigation__button-circle {
  position: relative;
  width: 100%;
  height: 100%;
}
.navigation__button-circle::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: hsl(90, 100%, 50%);
  border-radius: 50%;
  transform: scale(0);
  transform-origin: center;
  transition: transform 0.6s cubic-bezier(0.7, 0, 0.2, 1);
  box-shadow: 0 0 20px rgba(145, 255, 0, 0.2);
}
.navigation__button:hover .navigation__button-circle::before, .navigation__button.is-active .navigation__button-circle::before {
  transform: scale(1);
}
.navigation__button-circle svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.navigation__button-circle svg circle {
  fill: hsl(78, 100%, 15%);
  transition: fill 0.3s ease;
}
.navigation__button:hover .navigation__button-circle svg circle, .navigation__button.is-active .navigation__button-circle svg circle {
  fill: transparent;
}

.navigation__button-icon {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 2.5rem;
  height: 2.25rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  z-index: 1;
}
.navigation__button-icon span {
  position: relative;
  width: 100%;
  height: 3px;
  background-color: #fff;
  transform-origin: center;
  transition: transform 0.3s ease, width 0.3s ease, opacity 0.3s ease;
}
.navigation__button-icon span:nth-child(2) {
  width: 70%;
  margin-left: auto;
}
.navigation__button-icon span:first-child {
  transform-origin: center;
}
.navigation__button-icon span:last-child {
  transform-origin: center;
}
.navigation__button:hover .navigation__button-icon span {
  width: 100%;
}

.navigation__menu-wrapper {
  position: fixed;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
  max-width: 40vw;
  pointer-events: none;
  z-index: 4;
  visibility: hidden;
  overflow: hidden;
}
@media screen and (max-width: 768px) {
  .navigation__menu-wrapper {
    max-width: 100%;
  }
}

.navigation__menu-background {
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
  background-color: hsl(78, 100%, 15%);
  transform-origin: right center;
  transform: scaleX(0);
  pointer-events: all;
  background-image: linear-gradient(0deg, rgba(255, 255, 255, 0.03) 1px, transparent 1px), linear-gradient(90deg, rgba(255, 255, 255, 0.03) 1px, transparent 1px);
  background-size: 20px 20px;
  background-position: center center;
}

.navigation__menu {
  position: relative;
  z-index: 1;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: all;
}
.navigation__menu::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.navigation__menu-list {
  list-style: none;
  padding: 0;
  margin: 0;
  text-align: left;
}

.navigation__menu-list-item {
  margin: 4rem 0;
  opacity: 0;
  transform: translateY(2rem);
  position: relative;
  padding-left: 3rem;
  font-size: calc(clamp(3.25em, 5vw, 4em) * 0.5);
}
.navigation__menu-list-item::before {
  content: "•";
  position: absolute;
  left: 0;
  color: white;
  line-height: 1;
  opacity: 0.5;
  top: 15%;
  font-size: calc(clamp(3.25em, 5vw, 4em) * 0.5);
  transition: opacity 0.3s ease;
}
@media (hover: hover) {
  .navigation__menu-list-item:hover::before {
    opacity: 0.8;
  }
}
.navigation__menu-list-item a {
  display: inline-block;
  color: white;
  text-decoration: none;
  font-size: clamp(3.25em, 5vw, 4em);
  font-weight: 300;
  font-family: "George X";
  line-height: 1;
  transition: all 0.3s ease;
  letter-spacing: -0.02em;
}
@media (hover: hover) {
  .navigation__menu-list-item a:hover {
    opacity: 0.8;
    transform: translateX(10px);
    letter-spacing: 0;
  }
}

.gallery {
  overflow-y: auto;
  position: fixed;
  width: 100%;
  background: hsl(0, 3%, 14%);
  color: "#37384C";
  -ms-overflow-style: none;
  scrollbar-width: none;
}
.gallery::-webkit-scrollbar {
  display: none;
}
.gallery.no-scroll {
  overflow: hidden;
}
.gallery__content {
  position: relative;
  z-index: 1;
  width: 100%;
  height: 100%;
}
.gallery__navigation {
  position: fixed;
  z-index: 2000;
  top: 50%;
  transform: translateY(-50%);
  width: 100%;
  pointer-events: none;
}
.gallery__nav {
  position: absolute;
  pointer-events: auto;
  border: none;
  color: white;
  cursor: pointer;
  transition: all 0.3s ease;
  mix-blend-mode: difference;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  gap: 1rem;
  background: transparent;
  padding: 1.5rem;
}
.gallery__nav::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 120%;
  height: 120%;
  background: hsla(0, 0%, 0%, 0.4);
  border-radius: 8px;
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}
.gallery__nav:hover {
  transform: scale(1.5);
}
.gallery__nav:hover::before {
  opacity: 1;
}
.gallery__nav:hover .icon {
  stroke: hsl(90, 100%, 50%);
  transform: scale(1.1);
  mix-blend-mode: difference;
}
.gallery__nav:hover .gallery__nav-label {
  opacity: 1;
  transform: translateY(0);
  mix-blend-mode: difference;
}
.gallery__nav--prev {
  left: 2rem;
}
.gallery__nav--next {
  right: 2rem;
}
.gallery__nav--next .icon {
  transform: rotate(180deg);
}
.gallery__nav--next:hover .icon {
  transform: rotate(180deg) scale(1.1);
}
.gallery__nav .gallery__nav-label {
  font-size: 1.5rem;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  color: hsl(90, 100%, 50%);
  opacity: 0;
  transform: translateY(10px);
  transition: all 0.3s ease;
  text-align: center;
  white-space: nowrap;
  pointer-events: none;
  font-family: "Suisse BP";
  mix-blend-mode: difference;
}

.hidden {
  display: none;
}

.icon {
  width: 40px;
  height: 40px;
  fill: none;
  stroke: hsl(90, 100%, 50%);
  stroke-width: 6;
  transition: all 0.3s ease;
  mix-blend-mode: difference;
}

.grid {
  --gap: clamp(1rem, 5vmin, 2rem);
  --columns: 150px;
  gap: var(--gap);
  columns: var(--columns);
  width: 96%;
  max-width: 1400px;
  margin: 5rem auto;
  position: relative;
  z-index: 1;
}
@media (min-width: 768px) {
  .grid {
    --columns: 300px;
  }
}

.grid_item {
  break-inside: avoid;
  margin-bottom: var(--gap);
  position: relative;
  cursor: pointer;
  overflow: hidden;
  transform-origin: center center;
}
.grid_item img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  filter: grayscale(100%);
  transition: filter 0.4s ease, transform 0.4s ease;
}
.grid_item img:hover {
  filter: grayscale(0);
  transform: scale(1.03);
}

.preview {
  position: fixed;
  overflow: hidden;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: none;
  z-index: 1000;
}
.preview__background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: hsl(0, 3%, 14%);
  opacity: 0;
  transition: opacity 0.3s ease;
}
.preview__content {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.preview__image-container {
  position: relative;
  width: 100%;
  height: 100%;
}
.preview__close {
  position: fixed;
  top: 2rem;
  right: 2rem;
  width: 6rem;
  height: 6rem;
  border: none;
  background: transparent;
  cursor: pointer;
  z-index: 2001;
  opacity: 0;
  transition: all 0.3s ease;
  mix-blend-mode: difference;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}
.preview__close .icon-close {
  width: 100%;
  height: 100%;
  fill: hsl(90, 100%, 50%);
  transition: transform 0.3s ease;
}
.preview__close:hover {
  transform: scale(1.1);
}
.preview__close:hover .icon-close {
  transform: rotate(90deg);
}
.preview__transition-image {
  position: fixed;
  object-fit: cover;
  z-index: 1001;
  transform-origin: center center;
  filter: brightness(1.1);
}

.preview--open {
  display: block;
}
.preview--open .preview__close {
  opacity: 1;
}
.preview--open .preview__background {
  opacity: 1;
}

@media (max-width: 768px) {
  .gallery__nav--prev {
    left: 1rem;
  }
  .gallery__nav--next {
    right: 1rem;
  }
  .gallery__nav .gallery__nav-label {
    font-size: 1rem;
  }
  .icon {
    width: 30px;
    height: 30px;
  }
}
.preview__loader {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 9999;
}

.spinner {
  width: 100px;
  height: 100px;
  border: 4px solid rgba(255, 255, 255, 0.3);
  border-top-color: white;
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.about {
  touch-action: none;
  /* Prevents default touch actions */
  -webkit-overflow-scrolling: touch;
  /* Enables smooth scrolling on iOS */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  color: #384f03;
  overflow: hidden;
  font-weight: 300;
  font-family: "Montserrat";
}
.about__scroll__text {
  position: fixed;
  bottom: 1rem;
  left: 50vw;
  transform: translateX(-50%);
  font-size: 1.5rem;
  color: #80ff00;
  text-transform: uppercase;
  letter-spacing: 0.2em;
  font-weight: 300;
  opacity: 0.8;
  white-space: nowrap;
  z-index: 1;
}
@media (max-width: 767px) {
  .about__scroll__text {
    font-size: 1.8rem;
  }
}
.about__wrapper {
  position: relative;
  width: 100%;
  height: 100vh;
}
.about__first {
  display: flex;
  width: 100%;
  height: 100vh;
  position: relative;
}
.about__first__left {
  position: relative;
  height: 100%;
  flex: 1;
  isolation: isolate;
}
.about__first__left::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to right, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.2));
  z-index: 1;
}
@media (max-width: 1023px) {
  .about__first__left::after {
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.8));
  }
}
@media (max-width: 1023px) {
  .about__first__left {
    width: 100%;
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
  }
}
@media (min-width: 1025px) {
  .about__first__left {
    flex: none;
  }
}
.about__first__image {
  position: absolute;
  height: 100%;
}
.about__first__image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: 50% 0%;
}
@media (max-width: 1023px) {
  .about__first__image {
    width: 100%;
    height: 100vh;
  }
}
.about__first__content {
  position: relative;
  z-index: 2;
  padding: 6rem;
  max-width: 60rem;
  color: #FFFFFF;
  font-weight: 300;
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp 1s ease forwards;
  animation-delay: 0.5s;
}
@media (max-width: 1023px) {
  .about__first__content {
    padding: 2.5rem;
    height: 100vh;
    max-width: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    padding-bottom: 18vh;
  }
}
.about__first__title {
  font-size: 7.2rem;
  line-height: 1.1;
  margin-bottom: 3.2rem;
  font-weight: 400;
  font-family: "blowbrush";
}
.about__first__title span {
  display: inline-block;
  position: relative;
  color: #80ff00;
  transition: color 0.3s ease;
}
.about__first__title span::after {
  content: "";
  position: absolute;
  bottom: -5px;
  left: 0;
  width: 100%;
  height: 2px;
  background: #80ff00;
  transform: scaleX(0);
  transition: transform 0.3s ease;
  transform-origin: right;
}
.about__first__title span:hover::after {
  transform: scaleX(1);
  transform-origin: left;
}
@media (max-width: 1023px) {
  .about__first__title {
    font-size: 8rem;
    margin-bottom: 2.4rem;
  }
  .about__first__title span {
    font-size: 9rem;
    line-height: 1;
    display: block;
    margin-top: 1rem;
  }
}
.about__first__description {
  font-size: 2.4rem;
  line-height: 1.5;
  opacity: 0;
  max-width: 52rem;
  letter-spacing: 0.01em;
  font-weight: 300;
  white-space: pre-wrap;
  margin-top: 2rem;
}
@media (max-width: 1023px) {
  .about__first__description {
    font-size: 2.8rem;
    line-height: 1.4;
    margin-top: 0;
    font-weight: 300;
    max-width: 100%;
    letter-spacing: 0;
  }
}
.about__first__right {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  padding: 6rem;
  background: #252323;
  color: #FFFFFF;
  overflow: hidden;
  transform: translateY(100%);
}
.about__first__right h2 {
  margin-bottom: 4rem;
  margin-top: 10rem;
  color: #80ff00;
  font-family: "blowbrush";
}
@media (max-width: 1023px) {
  .about__first__right h2:first-of-type {
    margin-bottom: 8rem;
  }
}
@media (min-width: 1025px) {
  .about__first__right {
    position: relative;
    transform: none;
  }
}
.about__services {
  display: flex;
  flex-direction: column;
  gap: 6rem;
}
.about__service {
  max-width: 44rem;
  transition: transform 0.3s ease;
}
@media (max-width: 1023px) {
  .about__service {
    max-width: unset;
  }
}
.about__service:hover {
  transform: translateX(10px);
}
.about__service:hover .about__service__title {
  color: #80ff00;
}
.about__service:hover .about__service__number {
  color: #80ff00;
}
.about__service__number {
  color: rgba(255, 255, 255, 0.6);
  font-size: 1.4rem;
  display: block;
  margin-bottom: 1rem;
  font-weight: 400;
  letter-spacing: 0.05em;
  transition: color 0.3s ease;
}
.about__service__description {
  color: rgba(255, 255, 255, 0.8);
}
.about__recognition {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  padding: 6rem;
  background: #252323;
  color: #FFFFFF;
  overflow: hidden;
  transform: translateY(100%);
  isolation: isolate;
}
.about__recognition::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
}
.about__recognition__title {
  margin-bottom: 6rem;
  position: relative;
  color: #80ff00;
}
@media (min-width: 1025px) {
  .about__recognition__title {
    margin-top: 25rem !important;
  }
}
.about__recognition__content {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 6rem;
  position: relative;
}
.about__recognition__subtitle {
  color: #FFFFFF;
}
.about__recognition__subtitle:nth-of-type(2) {
  margin-top: 4rem;
}
@media (max-width: 1023px) {
  .about__recognition__subtitle:nth-of-type(2) {
    margin-top: 8rem;
  }
}
.about__recognition__list {
  display: flex;
  flex-direction: column;
  gap: 4rem;
}
.about__recognition__item {
  display: flex;
  gap: 2rem;
  padding-bottom: 2rem;
  border-bottom: 1px solid rgba(128, 255, 0, 0.2);
  transition: transform 0.3s ease;
}
.about__recognition__item:hover {
  transform: translateX(10px);
}
.about__recognition__item:hover .about__recognition__award,
.about__recognition__item:hover .about__recognition__degree {
  color: #80ff00;
}
.about__recognition__year {
  font-size: 1.4rem;
  opacity: 0.6;
  letter-spacing: 0.05em;
  font-weight: 400;
  color: #FFFFFF;
  transition: color 0.3s ease;
}
.about__recognition__details {
  flex: 1;
}
.about__recognition__award, .about__recognition__degree {
  color: rgba(255, 255, 255, 0.8);
  transition: color 0.3s ease;
}
.about__recognition__position, .about__recognition__school {
  font-size: 1.4rem;
  line-height: 1.6;
  color: rgba(255, 255, 255, 0.6);
  font-weight: 300;
}
@media (max-width: 1023px) {
  .about__recognition__position, .about__recognition__school {
    font-size: 1.5rem;
  }
}
@media (min-width: 1025px) {
  .about__recognition {
    left: 40%;
    width: 60%;
    transform: translateX(100%);
  }
}
.about__social {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  padding: 6rem;
  background: #252323;
  color: #FFFFFF;
  overflow: hidden;
  transform: translateY(100%);
  isolation: isolate;
}
.about__social__title {
  margin-bottom: 6rem;
  position: relative;
  color: #80ff00;
}
@media (min-width: 1025px) {
  .about__social__title {
    margin-top: 34rem !important;
  }
}
.about__social__content {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 4rem;
}
.about__social__item {
  display: flex;
  align-items: center;
  gap: 2rem;
  font-size: 2.2rem;
  color: #FFFFFF;
  text-decoration: none;
  transition: all 0.3s ease;
  font-weight: 400;
  letter-spacing: 0.01em;
  position: relative;
}
.about__social__item::before {
  content: "";
  position: absolute;
  left: -20px;
  top: 50%;
  width: 10px;
  height: 2px;
  background: #80ff00;
  transform: scaleX(0);
  transition: transform 0.3s ease;
}
.about__social__item:hover {
  color: #80ff00;
  transform: translateX(10px);
}
.about__social__item:hover::before {
  transform: scaleX(1);
}
.about__social__item:hover svg {
  stroke: #80ff00;
  transform: scale(1.1);
}
.about__social__item svg {
  width: 3rem;
  height: 3rem;
  stroke-width: 1.5;
  transition: all 0.3s ease;
}
.about__social__item span {
  font-weight: 400;
}
@media (min-width: 1025px) {
  .about__social {
    left: 55%;
    width: 45%;
    transform: translateX(100%);
  }
}
@media (max-width: 767px) {
  .about__recognition {
    padding: 4rem;
  }
  .about__recognition__title {
    font-size: 5.6rem;
  }
  .about__recognition__content {
    grid-template-columns: 1fr;
    gap: 4rem;
  }
  .about__social {
    padding: 4rem;
  }
  .about__social__title {
    font-size: 5.6rem;
  }
  .about__social__item {
    font-size: 2rem;
  }
  .about__social__item span {
    font-size: 2.8rem;
  }
  .about__social__item svg {
    width: 4rem;
    height: 4rem;
    margin-right: 1rem;
  }
}

@keyframes scrollLine {
  0% {
    transform: translateY(-100%);
  }
  50% {
    transform: translateY(100%);
  }
  51% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(-100%);
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translate(-50%, 20px);
  }
  to {
    opacity: 1;
    transform: translate(-50%, 0);
  }
}
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
.home {
  padding-top: 7rem;
  font-family: "blowbrush";
  font-size: 3rem;
  background-color: #f5f5f5;
  color: #444444;
}

.galleries {
  font-family: "blowbrush";
  color: hsl(78, 100%, 15%);
  position: fixed;
  left: 50%;
  transform: translateX(-50%);
  top: 4rem;
  z-index: 2;
  font-size: 6rem;
}

.pinned-art {
  position: fixed;
  top: 10vh;
  left: -20px;
  width: 180px;
  perspective: 1000px;
  z-index: 2;
  transform-style: preserve-3d;
  transform: rotate(27deg);
}
.pinned-art .pin {
  position: absolute;
  width: 40px;
  height: 40px;
  top: -10px;
  left: -10px;
  z-index: 5;
  transform: rotate(-25deg);
  filter: drop-shadow(2px 4px 2px rgba(0, 0, 0, 0.2));
}
.pinned-art .new-art-text {
  position: absolute;
  top: -6.5rem;
  left: -1.5rem;
  transform: translateX(6rem) rotate(-26deg);
  font-family: cursive;
  font-size: 2.5rem;
  color: hsl(78, 100%, 15%);
  z-index: 4;
}
.pinned-art .artwork {
  position: relative;
  width: 120px;
  height: 100%;
  transform-origin: top left;
  transition: transform 0.3s ease;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  background: white;
  padding: 8px;
}
.pinned-art .artwork:hover {
  transform: rotate(5deg);
}
.pinned-art .artwork img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.pinned-art .artwork::after {
  content: "";
  position: absolute;
  top: 0;
  left: 90px;
  width: 10px;
  height: 10px;
  background: radial-gradient(circle at center, rgba(0, 0, 0, 0.2), transparent 70%);
}
@media (max-width: 767px) {
  .pinned-art {
    display: none;
  }
}

.banner {
  position: absolute;
  z-index: 1;
  margin-top: 10vh;
  width: 100%;
  display: grid;
  justify-items: center;
  height: 100vh;
}
@media (max-width: 767px) {
  .banner {
    margin-top: 18vh;
  }
}

.banner .slider {
  top: 0;
  max-width: 170px;
  aspect-ratio: 4/4;
  transform-style: preserve-3d;
  width: 30vw;
  transform: rotateX("16deg");
}
@media (max-width: 767px) {
  .banner .slider {
    aspect-ratio: 6/4;
  }
}

.banner .slider .gallery__image {
  position: absolute;
  inset: 0 0 0 0;
  width: 100%;
  transform: rotateY(calc(var(--position) * 360 / var(--quantity) * -1deg)) translateZ(min(26vw, 480px));
  transform-style: preserve-3d;
  z-index: 1;
  pointer-events: auto;
}
@media (max-width: 767px) {
  .banner .slider .gallery__image {
    transform: rotateY(calc(var(--position) * 360 / var(--quantity) * -1deg)) translateZ(45vw);
  }
}
.banner .slider .gallery__image a.gallery_link {
  position: absolute;
  inset: 0;
  display: block;
  width: 100%;
  height: 100%;
  z-index: 5;
  pointer-events: auto;
}
.banner .slider .gallery__image figure {
  width: 100%;
  height: 100%;
  margin: 0;
  pointer-events: none;
}
.banner .slider .gallery__image img {
  filter: grayscale(100%);
  width: 100%;
  height: 200px;
  object-fit: cover;
  transition: filter 0.5s ease;
  pointer-events: none;
  z-index: 1;
}
.banner .slider .gallery__image img:hover {
  filter: grayscale(0%);
}
@media (max-width: 767px) {
  .banner .slider .gallery__image img {
    height: unset;
  }
}

.slider {
  pointer-events: auto;
}

.gallery__details__item {
  opacity: 0;
  position: absolute;
  top: 70vh;
  left: 8rem;
  transition: opacity 0.5s ease;
}
@media (max-width: 767px) {
  .gallery__details__item {
    top: 65vh;
    left: 2rem;
  }
}

.gallery__details__title {
  color: hsl(78, 100%, 15%);
}

.gallery__details__paragraph {
  font-family: "Montserrat";
  margin-top: 2rem;
  max-width: 44rem;
}
@media (max-width: 767px) {
  .gallery__details__paragraph {
    max-width: none;
  }
}

.gallery-indicators {
  position: fixed;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 1rem;
  z-index: 2;
  pointer-events: none;
}

.indicator-dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: hsla(78, 100%, 15%, 0.3);
  transition: background-color 0.3s ease;
}
@media (max-width: 767px) {
  .indicator-dot {
    width: 6px;
    height: 6px;
  }
}

.revealer {
  width: max(200vw, 200vh);
  height: max(200vw, 200vh);
  position: absolute;
  z-index: 10;
  background-color: hsl(90, 100%, 50%);
  display: none;
  justify-content: center;
  align-items: center;
  transform: translate(0, max(200vw, 200vh)) rotate(16deg);
}
.revealer ul {
  list-style: disc;
  padding-left: 20px;
}

.revealer__text {
  color: black;
  font-size: 7.5rem;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jc3MiLCJtYXBwaW5ncyI6Ijs7O0FBQUEsZ0JBQWdCO0FDQWhCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFpRkU7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FERUY7O0FDQ0E7Ozs7Ozs7Ozs7O0VBV0U7QURFRjs7QUNDQTtFQUNFO0FERUY7O0FDQ0E7O0VBRUU7QURFRjs7QUNDQTs7RUFFRTtBREVGOztBQ0NBOzs7O0VBSUU7RUFDQTtBREVGOztBQ0NBO0VBQ0U7RUFDQTtBREVGOztBRWpJQTs7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FGcUlGOztBRWxJQTtFQUNFO0VBQ0E7RUFDQTtBRnFJRjs7QUdoSkE7RUFDRTtBSG1KRjs7QUlwSUE7RUFDRTtFQUNBO0VBQ0E7QUp1SUY7QUs2YUk7RUR2akJKO0lBTUE7RUp3SUU7QUFDRjtBSXZJSTtFQVJKO0lBUW1DO0VKMklqQztBQUNGOztBTXBLQTtFQUNFLHlCQ1FnQjtFRFBoQjtFQUNBO0FOdUtGO0FLNlpJO0VDdmtCSjtJQU1JO0lBQ0E7RU53S0Y7QUFDRjs7QU01SkE7RUFDRSx1QkNmYztFRGdCZDtFQUNBO0FOK0pGOztBTTVKQTtFQUNFLHVCQ3JCYztFRHNCZDtBTitKRjs7QVEzTEE7RUFDRSx3QkRPZTtFQ05mO0VBRUE7RUFDQTtBUjZMRjtBUTFMQTtFQUNFLHVCREhjO0VDSWQ7RUFFQTtFQUNBO0VBQ0E7QVIyTEY7QVF4TEE7RUFDRSx3QkRYZTtFQ1lmO0VBRUE7RUFDQTtFQUNBO0FSeUxGO0FRdExBO0VBQ0Usd0JEcEJlO0VDcUJmO0VBRUE7RUFDQTtFQUNBO0FSdUxGO0FRcExBO0VBQ0Usd0JEN0JlO0VDOEJmO0VBRUE7RUFDQTtFQUNBO0FScUxGO0FRbExBO0VBQ0UseUJEcENnQjtFQ3FDaEI7RUFDQTtFQUNBO0FSb0xGO0FTcE9BOzs7RUFHRTtFQUNBO0VBQ0E7RUFDQTtFQUNFO0VBQ0E7RUFDQTtBVHNPSjs7QVNuT0E7RUFNRTtFQUVBLDJCQUVHO0VBQ0g7RUFDQTtFQUNBO0FUOE5GO0FLZ1ZJO0VJM2pCSjtJQWdCTztJQUNBO0VUK05MO0FBQ0Y7QUswVUk7RUkzakJKO0lBb0JNO0lBQ0E7RVRpT0o7QUFDRjs7QVM5TkE7RUFFRTtFQUdJO0VBQ0E7RUFDQTtFQUNKO0FUOE5GOztBUzVOQTtFQUNNO0VBQ0U7RUFDQTtBVCtOUjs7QVNwTkE7RUFFRTtBVHNORjs7QVNqTkE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBVG9ORjtBU2xORTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBVG9OSjs7QVNoTkE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBVG1ORjtBU2pORTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBVG1OSjtBU2pOSTtFQUNFO0FUbU5OO0FTL01FO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FUaU5KOztBUzdNQTtFQUNFO0VBQ0E7QVRnTkY7O0FTN01BO0VBQ0U7QVRnTkY7O0FTN01BOztFQUVFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVRnTkY7O0FTN01BO0VBRUU7O0lBRUU7RVQrTUY7QUFDRjtBUzVNQTtBQUVBO0FBRUE7RUFDRTtFQUNBO0VBQ0E7QVQ0TUY7O0FTek1BO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBVDRNRjs7QVMxTUE7RUFDRTtFQUNBO0FUNk1GOztBU3pMRTs7O0VBQ0U7RUFDQTtFQUNBO0FUOExKOztBU3hMQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVQyTEY7QVN6TEU7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFFQTtBVDBMSjtBU3hMSTtFQUVvQjtFQUNWO0FUeUxkO0FTdExJO0VBRW9CO0VBQ1I7QVR1TGhCO0FTcExJO0VBRW9CO0VBQ1I7QVRxTGhCO0FTaExFO0VBQ0U7QVRrTEo7QVMvS0U7RUFDRTtBVGlMSjtBUy9LSTtFQUNFO0FUaUxOO0FTOUtJO0VBQ0U7QVRnTE47O0FTMUtBO0VBQ0U7SUFDRTtFVDZLRjtFUzFLQTtJQUVFO0lBQ0E7RVQyS0Y7RVN4S0E7SUFDRTtFVDBLRjtBQUNGO0FTdktBO0VBRUU7SUFFRTtFVHVLRjtFU3BLQTtJQUVFO0lBQ0E7RVRxS0Y7RVNsS0E7SUFFRTtFVG1LRjtBQUNGO0FTaEtBO0VBRUU7SUFFRTtJQUNBO0VUZ0tGO0VTN0pBO0lBRUU7RVQ4SkY7QUFDRjtBUzFKQTtFQUNFO0FUNEpGO0FTMUpFO0VBQ0U7QVQ0Sko7QVN6SkU7RUFDRTtBVDJKSjs7QVN2SkE7RUFDRTtJQUNFO0VUMEpGO0VTdkpBO0lBRUU7SUFDQTtFVHdKRjtFU3JKQTtJQUNFO0VUdUpGO0FBQ0Y7QVNwSkE7RUFFRTtJQUVFO0VUb0pGO0VTakpBO0lBRUU7SUFDQTtFVGtKRjtFUy9JQTtJQUVFO0VUZ0pGO0FBQ0Y7QVM3SUE7RUFFRTtJQUVFO0lBQ0E7RVQ2SUY7RVMxSUE7SUFFRTtFVDJJRjtBQUNGO0FVeGZBO0VBR0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FWd2ZGOztBVXJmQTtFQUVFO0VBQ0E7QVZ1ZkY7O0FVcGZBO0VBQ0Usd0JIVmU7RUdXakI7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBVnVmRjs7QVVwZkE7RUFDRTtFQUNBO0VBQ0E7QVZ1ZkY7O0FVamZBO0VBQ0E7QVZvZkE7O0FVaGZBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVZtZkY7QVUvZUc7RUFDRDtFQUNBO0VBQ0E7RUFDQTtBVmlmRjs7QVUzZUE7RUFDRTtFQUNBO0FWOGVGO0FLMEJJO0VLMWdCSjtJQUlJO0VWZ2ZGO0FBQ0Y7O0FVN2VBO0VBQ0U7RUFDQTtBVmdmRjtBS2dCSTtFS2xnQko7SUFJSTtFVmtmRjtBQUNGOztBVS9lQTtFQUNFO0VBQ0E7QVZrZkY7QUtNSTtFSzFmSjtJQUlJO0VWb2ZGO0FBQ0Y7O0FVbGZBO0VBQ0U7RUFDQTtBVnFmRjtBS0pJO0VLbmZKO0lBR0k7RVZ3ZkY7QUFDRjs7QVVyZkE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FWd2ZGOztBVXJmQTtFQUNFO0VBQ0E7QVZ3ZkY7QUt0Qkk7RUtwZUo7SUFJSTtFVjBmRjtBQUNGOztBVXhmQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVYyZkY7QUtuQ0k7RUs3ZEo7SUFPSTtFVjZmRjtBQUNGOztBVTFmQTtFQUNFO0VBQ0E7QVY2ZkY7QUs3Q0k7RUtsZEo7SUFHSTtFVmdnQkY7QUFDRjs7QVU5ZkE7RUFDRTtFQUNBO0FWaWdCRjtBS3ZESTtFSzVjSjtJQUdJO0VWb2dCRjtBQUNGOztBVWpnQkE7RUFDRTtFQUNBO0FWb2dCRjtBS2pFSTtFS3JjSjtJQUdJO0VWdWdCRjtBQUNGOztBVXBnQkE7RUFDRTtFQUNBO0FWdWdCRjtBSzNFSTtFSzliSjtJQUlJO0VWeWdCRjtBQUNGOztBVXZnQkE7RUFDRTtFQUNBO0FWMGdCRjtBS3JGSTtFS3ZiSjtJQUlJO0VWNGdCRjtBQUNGOztBVXpnQkE7RUFDRTtFQUNBO0FWNGdCRjtBSy9GSTtFSy9hSjtJQUlJO0VWOGdCRjtBQUNGOztBVTVnQkE7RUFDRTtFQUNBO0VBQ0E7QVYrZ0JGO0FLMUdJO0VLeGFKO0lBS0k7RVZpaEJGO0FBQ0Y7O0FVOWdCQTtFQUNFO0VBQ0E7QVZpaEJGO0FLcEhJO0VLL1pKO0lBSUk7RVZtaEJGO0FBQ0Y7O0FVaGhCQTtFQUNFO0VBQ0E7QVZtaEJGO0FLOUhJO0VLdlpKO0lBSUk7RVZxaEJGO0FBQ0Y7O0FVbmhCQTtFQUNFO0VBQ0E7RUFDQTtBVnNoQkY7QUt6SUk7RUtoWko7SUFLSTtFVndoQkY7QUFDRjs7QVV0aEJBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7QVZ5aEJGO0FLckpJO0VLeFlKO0lBTUk7RVYyaEJGO0FBQ0Y7O0FVemhCQTtFQUNFO0VBQ0E7QVY0aEJGO0FLL0pJO0VLL1hKO0lBSUk7RVY4aEJGO0FBQ0Y7O0FVM2hCQTtFQUNFO0VBQ0E7QVY4aEJGO0FLektJO0VLdlhKO0lBSUk7RVZnaUJGO0FBQ0Y7O0FVOWhCQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0FWaWlCRjtBS3JMSTtFS2hYSjtJQU1JO0VWbWlCRjtBQUNGOztBVWhpQkE7RUFDRTtFQUNBO0FWbWlCRjtBSy9MSTtFS3RXSjtJQUlJO0VWcWlCRjtBQUNGOztBVWxpQkE7RUFDRTtFQUNBO0FWcWlCRjtBS3pNSTtFSzlWSjtJQUlJO0VWdWlCRjtBQUNGOztBVXJpQkE7RUFDRTtFQUNBO0FWd2lCRjtBS25OSTtFS3ZWSjtJQUlJO0VWMGlCRjtBQUNGOztBVXZpQkE7RUFDRTtFQUNBO0FWMGlCRjtBSzdOSTtFSy9VSjtJQUlJO0VWNGlCRjtBQUNGOztBVXppQkE7RUFDRTtFQUNBO0FWNGlCRjtBS3ZPSTtFS3ZVSjtJQUlJO0VWOGlCRjtBQUNGOztBVTNpQkE7RUFDRTtFQUNBO0FWOGlCRjtBS2pQSTtFSy9USjtJQUlJO0VWZ2pCRjtBQUNGOztBVTlpQkE7RUFDRTtFQUNBO0FWaWpCRjtBSzNQSTtFS3hUSjtJQUlJO0VWbWpCRjtBQUNGOztBVWhqQkE7RUFDRTtFQUNBO0FWbWpCRjtBS3JRSTtFS2hUSjtJQUlJO0VWcWpCRjtBQUNGOztBVW5qQkE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBVnNqQkY7QUtqUkk7RUt6U0o7SUFLSTtFVnlqQkY7QUFDRjs7QVV2akJBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7QVYwakJGO0FLN1JJO0VLalNKO0lBS0k7RVY2akJGO0FBQ0Y7O0FVM2pCQTtFQUNFO0lBQ0U7RVY4akJGLEVVN2pCRTtFQUNGO0lBQ0U7RVY4akJGLEVVN2pCRTtFQUNGO0lBQ0U7RVY4akJGLEVVN2pCRTtFQUNGO0lBQ0U7RVY4akJGLEVVN2pCRTtBVjhqQko7QVUzakJBO0VBQ0U7QVY2akJGOztBVTNqQkE7RUFDRTtFQUNBO0FWOGpCRjs7QVU1akJBO0VBQ0U7RUFDQTtBVitqQkY7O0FVN2pCQTtFQUNFO0VBQ0E7QVZna0JGOztBVTlqQkE7RUFDRTtFQUNBO0FWaWtCRjs7QVUvakJBO0VBQ0U7RUFDQTtBVmtrQkY7O0FVaGtCQTtFQUNFO0VBQ0E7QVZta0JGOztBVWprQkE7RUFDRTtFQUNBO0FWb2tCRjs7QVVsa0JBO0VBQ0U7RUFDQTtBVnFrQkY7O0FVbmtCQTtFQUNFO0VBQ0E7QVZza0JGOztBVXBrQkE7RUFDRTtFQUNBO0FWdWtCRjs7QVVya0JBO0VBQ0U7RUFDQTtBVndrQkY7O0FXbDdCQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBWHE3QkY7O0FXbDdCQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FYcTdCRjtBV243QkU7RUFDRTtFQUNBO0FYcTdCSjtBV2w3QkU7RUFqQkY7SUFrQkk7RVhxN0JGO0FBQ0Y7O0FXbDdCQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FYcTdCRjs7QVdsN0JBO0VBQ0U7RUFDQTtFQUNBO0FYcTdCRjtBV243QkU7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVhxN0JKO0FXbDdCRTtFQUVFO0FYbTdCSjtBV2g3QkU7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FYazdCSjtBV2g3Qkk7RUFDRTtFQUNBO0FYazdCTjtBVzU2Qkk7RUFDRTtBWDg2Qk47O0FXejZCQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FYNDZCRjtBVzE2QkU7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVg0NkJKO0FXMTZCSTtFQUNFO0VBQ0E7QVg0NkJOO0FXejZCSTtFQUNFO0FYMjZCTjtBV3g2Qkk7RUFDRTtBWDA2Qk47QVd0NkJFO0VBQ0U7QVh3NkJKOztBV3A2QkE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBWHU2QkY7QVdyNkJFO0VBWkY7SUFhSTtFWHc2QkY7QUFDRjs7QVdyNkJBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBRUE7RUFFQTtFQUNBO0FYczZCRjs7QVduNkJBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVhzNkJGO0FXcDZCRTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUlBO0FYbTZCSjs7QVcvNUJBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7QVhrNkJGOztBVy81QkE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVhrNkJGO0FXaDZCRTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBWGs2Qko7QVcvNUJDO0VBQ0U7SUFDRTtFWGk2Qkg7QUFDRjtBVzc1QkU7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0EsdUJKNU5ZO0VJNk5aO0VBQ0E7RUFDQTtBWCs1Qko7QVc1NUJNO0VBQ0U7SUFDRTtJQUNBO0lBQ0E7RVg4NUJSO0FBQ0Y7O0FZM29DQTtFQUVJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FaNm9DSjtBWTNvQ0k7RUFDSTtBWjZvQ1I7QVkxb0NJO0VBQ0k7QVo0b0NSO0FZem9DSTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FaMm9DUjtBWXhvQ0k7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVowb0NSO0FZdm9DSTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVp5b0NSO0FZdm9DUTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBWnlvQ1o7QVl0b0NRO0VBQ0k7QVp3b0NaO0FZdG9DWTtFQUNJO0Fad29DaEI7QVlyb0NZO0VBQ0k7RUFDQTtFQUNBO0FadW9DaEI7QVlwb0NZO0VBQ0k7RUFDQTtFQUNBO0Fac29DaEI7QVlsb0NRO0VBQ0k7QVpvb0NaO0FZam9DUTtFQUNJO0FabW9DWjtBWWpvQ1k7RUFDSTtBWm1vQ2hCO0FZaG9DWTtFQUNJO0Faa29DaEI7QVk5bkNRO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQSx3Qkx6R0s7RUswR0w7QVpnb0NaOztBWTNuQ0E7RUFDSTtBWjhuQ0o7O0FZM25DQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FaOG5DSjs7QVkzbkNBO0VBQ0k7RUFDQTtFQUVBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FaNm5DSjtBWTNuQ0k7RUFaSjtJQWFRO0VaOG5DTjtBQUNGOztBWTNuQ0E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVo4bkNKO0FZM25DSTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVo2bkNSO0FZM25DUTtFQUNJO0VBQ0E7QVo2bkNaOztBWXhtQ0E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FaMm1DSjtBWXptQ0k7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FaMm1DUjtBWXhtQ0k7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVowbUNSO0FZdm1DSTtFQUNJO0VBQ0E7RUFDQTtBWnltQ1I7QVl0bUNJO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVp3bUNSO0FZcm1DUTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FadW1DWjtBWXBtQ1E7RUFDSTtBWnNtQ1o7QVlwbUNZO0VBQ0k7QVpzbUNoQjtBWWptQ0k7RUFDSTtFQUNBO0VBQ0E7RUFFQTtFQUNBO0Faa21DUjs7QVk5bENBO0VBQ0k7QVppbUNKO0FZL2xDSTtFQUNJO0FaaW1DUjtBWTlsQ0k7RUFDSTtBWmdtQ1I7O0FZM2xDQTtFQUdZO0lBQ0k7RVo0bENkO0VZemxDVTtJQUNJO0VaMmxDZDtFWXhsQ1U7SUFDSTtFWjBsQ2Q7RVlybENFO0lBQ0k7SUFDQTtFWnVsQ047QUFDRjtBWWxsQ0E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0Fab2xDSjs7QVlqbENBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0Fab2xDSjs7QVlqbENBO0VBQ0k7SUFDSTtFWm9sQ047RVlsbENFO0lBQ0k7RVpvbENOO0FBQ0Y7QWE5NUNBO0VBQ0U7RUFDRTtFQUNBO0VBQ0E7RUFDRjtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0UseUJOSmM7QVBvNkNsQjtBYTk1Q0k7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWJnNkNSO0FLcDNCSTtFUXhqQkE7SUFjSTtFYms2Q047QUFDRjtBYS81Q0U7RUFDRTtFQUNBO0VBQ0E7QWJpNkNKO0FhejVDRTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0FiMjVDSjtBYXo1Q0k7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBYjI1Q047QWF6NUNNO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFJQTtBYnc1Q1I7QUtwNUJJO0VRL2dCRTtJQWF1QztFYjA1QzNDO0FBQ0Y7QUt6NUJJO0VRcmhCQTtJQXlCdUM7SUFDbkM7SUFDQTtJQUNBO0lBQ0E7RWJ5NUNOO0FBQ0Y7QUtsNkJJO0VRcmhCQTtJQWdDK0M7RWIyNUNqRDtBQUNGO0FheDVDSTtFQUNFO0VBQ0E7QWIwNUNOO0FheDVDTTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0FiMDVDUjtBS2o3Qkk7RVFqZkE7SUFXK0M7SUFDM0M7RWIyNUNOO0FBQ0Y7QWF4NUNJO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFFQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWJ5NUNOO0FLbjhCSTtFUWplQTtJQWF1QztJQUNuQztJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtFYjI1Q047QUFDRjtBYXg1Q0k7RUFDRTtFQUNBO0VBQ0E7RUFFQTtFQUVFLHdCTjdIUztBUHFoRGpCO0FhcDVDTTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0FiczVDUjtBYXA1Q1E7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBYnM1Q1Y7QWFsNUNVO0VBQ0U7RUFDQTtBYm81Q1o7QUs1K0JJO0VRemNBO0lBc0N1QztJQUNuQztFYm01Q047RWFqNUNNO0lBQ0U7SUFDQTtJQUNBO0lBQ0E7RWJtNUNSO0FBQ0Y7QWEvNENJO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFFQTtFQUNBO0VBQ0E7RUFDQTtBYmc1Q047QUtsZ0NJO0VRdlpBO0lBV3VDO0lBQ25DO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7RWJrNUNOO0FBQ0Y7QWEvNENJO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWJpNUNOO0FhNTRDTTtFQUVFO0VBQ0E7RUFDQTtFQUNFLHdCTmhOTztBUDZsRGpCO0FLOWhDSTtFUTNXSjtJQUdFO0ViMDRDQTtBQUNGO0FLbmlDSTtFUW5ZQTtJQWlDK0M7SUFDM0M7RWJ5NENOO0FBQ0Y7QWFyNENFO0VBQ0U7RUFDQTtFQUNBO0FidTRDSjtBYXA0Q0U7RUFDRTtFQUNBO0FiczRDSjtBS2xqQ0k7RVF0VkY7SUFJTTtFYnc0Q047QUFDRjtBYXQ0Q0k7RUFDRTtBYnc0Q047QWF0NENNO0VBQ0U7QWJ3NENSO0FhcjRDTTtFQUNFO0FidTRDUjtBYWo0Q0k7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBYm00Q047QWE1M0NJO0VBRUU7QWI2M0NOO0FhdjNDRTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBRUE7QWJ3M0NKO0FhdDNDSTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQU1BO0FibTNDTjtBYWgzQ0k7RUFFRTtFQUNBO0VBRUE7QWJnM0NOO0FLdm1DSTtFUTlRQTtJQVVJO0ViKzJDTjtBQUNGO0FhNzJDSTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0FiKzJDTjtBYTUyQ0k7RUFFRTtBYjYyQ047QWExMkNNO0VBQ0U7QWI0MkNSO0FLeG5DSTtFUXJQRTtJQUlRO0ViNjJDWjtBQUNGO0FhejJDSTtFQUNFO0VBQ0E7RUFDQTtBYjIyQ047QWF4MkNJO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBYjAyQ047QWF4MkNNO0VBQ0U7QWIwMkNSO0FheDJDUTs7RUFFRTtBYjAyQ1Y7QWFyMkNJO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FidTJDTjtBYXAyQ0k7RUFDRTtBYnMyQ047QWFuMkNJO0VBR0k7RUFFRjtBYmsyQ047QWEvMUNJO0VBRUU7RUFDQTtFQUNBO0VBQ0E7QWJnMkNOO0FLcnFDSTtFUWhNQTtJQVFRO0ViaTJDVjtBQUNGO0FLMXFDSTtFUTNTRjtJQXdIK0M7SUFDM0M7SUFDQTtFYmkyQ0o7QUFDRjtBYTExQ0U7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUVBO0FiMjFDSjtBYXoxQ0k7RUFFVTtFQUNSO0VBR0E7QWJ3MUNOO0FLbnNDSTtFUTNKQTtJQVF1QztFYjAxQ3pDO0FBQ0Y7QWF2MUNJO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7QWJ5MUNOO0FhdDFDSTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FidzFDTjtBYXQxQ007RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWJ3MUNSO0FhcjFDTTtFQUNFO0VBQ0E7QWJ1MUNSO0FhcjFDUTtFQUNFO0FidTFDVjtBYXAxQ1E7RUFDRTtFQUNBO0FiczFDVjtBYWwxQ007RUFDRTtFQUNBO0VBQ0E7RUFDQTtBYm8xQ1I7QWEvMENNO0VBQ0U7QWJpMUNSO0FLenZDSTtFUXpLRjtJQXFGK0M7SUFDM0M7SUFDQTtFYmkxQ0o7QUFDRjtBS2h3Q0k7RVE1RUE7SUFDRTtFYiswQ0o7RWE3MENJO0lBQ0U7RWIrMENOO0VhNTBDSTtJQUNFO0lBQ0E7RWI4MENOO0VhMTBDRTtJQUNFO0ViNDBDSjtFYTEwQ0k7SUFDRTtFYjQwQ047RWF6MENJO0lBQ0U7RWIyMENOO0VhMTBDQTtJQUNJO0ViNDBDSjtFYTEwQ007SUFDRTtJQUNBO0lBQ0E7RWI0MENSO0FBQ0Y7O0FhbDBDQTtFQUNFO0lBQ0U7RWJxMENGO0VhbDBDQTtJQUNFO0VibzBDRjtFYWowQ0E7SUFDRTtFYm0wQ0Y7RWFoMENBO0lBQ0U7RWJrMENGO0FBQ0Y7QWEvekNBO0VBQ0U7SUFDRTtJQUNBO0ViaTBDRjtFYTl6Q0E7SUFDRTtJQUNBO0ViZzBDRjtBQUNGO0FhN3pDQTtFQUNFO0lBQ0U7SUFDQTtFYit6Q0Y7RWE1ekNBO0lBQ0U7SUFDQTtFYjh6Q0Y7QUFDRjtBY3Y0REE7RUFFRTtFQUNBLHdCUEtlO0VPSmY7RUFDQTtFQUNBO0FkdzRERjs7QWNyNERBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBZHc0REY7O0FjcjREQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBRUE7RUFDQTtFQUNBO0VBQ0E7QWR1NERGO0FjcjRERTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWR1NERKO0FjcDRESTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWRzNEROO0FjbjRERTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWRxNERKO0FjbjRESTtFQUNFO0FkcTRETjtBY2w0REk7RUFDRTtFQUNBO0VBQ0E7QWRvNEROO0FjajRESTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FkbTRETjtBSzU0Q0k7RVNuakJKO0lBaUVJO0VkazRERjtBQUNGOztBYzczREE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBZGc0REY7QUszNUNJO0VTNWVKO0lBVUk7RWRpNERGO0FBQ0Y7O0FjOTNEQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFFQTtBZGc0REY7QUt6NkNJO0VTOWRKO0lBVUk7RWRpNERGO0FBQ0Y7O0FjOTNEQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFFQTtFQUNBO0FkZzRERjtBS3g3Q0k7RVNoZEo7SUFXSTtFZGk0REY7QUFDRjtBYy8zREU7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBZGk0REo7QWM5M0RFO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7QWRnNERKO0FjNzNERTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FkKzNESjtBYzczREk7RUFDRTtBZCszRE47QUt4OUNJO0VTamJGO0lBY0k7RWQrM0RKO0FBQ0Y7O0FjMzNEQTtFQUNFO0FkODNERjs7QWN2M0RBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBZDAzREY7QUt6K0NJO0VTdFpKO0lBUUk7SUFDQTtFZDIzREY7QUFDRjs7QWN4M0RBO0VBQ0U7QWQyM0RGOztBY3YzREE7RUFDRSx5QlAzTGdCO0VPNExoQjtFQUVBO0FkeTNERjtBS3ovQ0k7RVNwWUo7SUFPSTtFZDAzREY7QUFDRjs7QWN2M0RBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBZDAzREY7O0FjdjNEQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWQwM0RGO0FLamhESTtFUzlXSjtJQVFJO0lBQ0E7RWQyM0RGO0FBQ0Y7O0FjeDNEQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBZDIzREY7QWN4M0RFO0VBQ0U7RUFDQTtBZDAzREo7O0FjdDNEQTtFQUVFO0VBQ0E7QWR3M0RGLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZXJtYW5uLy4vc3R5bGVzL2luZGV4LnNjc3MiLCJ3ZWJwYWNrOi8vaGVybWFubi8uL3N0eWxlcy9iYXNlL3Jlc2V0LnNjc3MiLCJ3ZWJwYWNrOi8vaGVybWFubi8uL3N0eWxlcy91dGlscy9taXhpbnMuc2NzcyIsIndlYnBhY2s6Ly9oZXJtYW5uLy4vc3R5bGVzL3V0aWxzL3ZlbmRvcnMuc2NzcyIsIndlYnBhY2s6Ly9oZXJtYW5uLy4vc3R5bGVzL3NoYXJlZC9kZXNjcmlwdGlvbnMuc2NzcyIsIndlYnBhY2s6Ly9oZXJtYW5uLy4vbm9kZV9tb2R1bGVzL2luY2x1ZGUtbWVkaWEvZGlzdC9faW5jbHVkZS1tZWRpYS5zY3NzIiwid2VicGFjazovL2hlcm1hbm4vLi9zdHlsZXMvc2hhcmVkL3RpdGxlcy5zY3NzIiwid2VicGFjazovL2hlcm1hbm4vLi9zdHlsZXMvdXRpbHMvdmFyaWFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vaGVybWFubi8uL3N0eWxlcy9iYXNlL2ZvbnRzLnNjc3MiLCJ3ZWJwYWNrOi8vaGVybWFubi8uL3N0eWxlcy9iYXNlL2Jhc2Uuc2NzcyIsIndlYnBhY2s6Ly9oZXJtYW5uLy4vc3R5bGVzL2NvbXBvbmVudHMvcHJlbG9hZGVyLnNjc3MiLCJ3ZWJwYWNrOi8vaGVybWFubi8uL3N0eWxlcy9sYXlvdXQvbmF2aWdhdGlvbi5zY3NzIiwid2VicGFjazovL2hlcm1hbm4vLi9zdHlsZXMvcGFnZXMvZ2FsbGVyeS9nYWxsZXJ5LnNjc3MiLCJ3ZWJwYWNrOi8vaGVybWFubi8uL3N0eWxlcy9wYWdlcy9hYm91dC9hYm91dC5zY3NzIiwid2VicGFjazovL2hlcm1hbm4vLi9zdHlsZXMvcGFnZXMvaG9tZS9ob21lLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuaHRtbCxcbmJvZHksXG5kaXYsXG5zcGFuLFxuYXBwbGV0LFxub2JqZWN0LFxuaWZyYW1lLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxucCxcbmJsb2NrcXVvdGUsXG5wcmUsXG5hLFxuYWJicixcbmFjcm9ueW0sXG5hZGRyZXNzLFxuYmlnLFxuY2l0ZSxcbmNvZGUsXG5kZWwsXG5kZm4sXG5lbSxcbmltZyxcbmlucyxcbmtiZCxcbnEsXG5zLFxuc2FtcCxcbnNtYWxsLFxuc3RyaWtlLFxuc3Ryb25nLFxuc3ViLFxuc3VwLFxudHQsXG52YXIsXG5iLFxudSxcbmksXG5jZW50ZXIsXG5kbCxcbmR0LFxuZGQsXG5vbCxcbnVsLFxubGksXG5maWVsZHNldCxcbmZvcm0sXG5sYWJlbCxcbmxlZ2VuZCxcbnRhYmxlLFxuY2FwdGlvbixcbnRib2R5LFxudGZvb3QsXG50aGVhZCxcbnRyLFxudGgsXG50ZCxcbmFydGljbGUsXG5hc2lkZSxcbmNhbnZhcyxcbmRldGFpbHMsXG5lbWJlZCxcbmZpZ3VyZSxcbmZpZ2NhcHRpb24sXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxub3V0cHV0LFxucnVieSxcbnNlY3Rpb24sXG5zdW1tYXJ5LFxudGltZSxcbm1hcmssXG5hdWRpbyxcbnZpZGVvIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udDogaW5oZXJpdDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1lbnUsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmJvZHkge1xuICBsaW5lLWhlaWdodDogMTtcbn1cblxub2wsXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmJsb2NrcXVvdGUsXG5xIHtcbiAgcXVvdGVzOiBub25lO1xufVxuXG5ibG9ja3F1b3RlOmJlZm9yZSxcbmJsb2NrcXVvdGU6YWZ0ZXIsXG5xOmJlZm9yZSxcbnE6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBjb250ZW50OiBub25lO1xufVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG4uZ2FsbGVyeV9fZGV0YWlscywgLmRldGFpbHMsIC5nYWxsZXJ5LCAub3ZlcmxheSwgLnByZWxvYWRlciwgLmNvbnRlbnRfX21vdmUsIC5jb250ZW50X19yb3RhdGUsXG4uY29udGVudF9fcmV2ZXJzZSwgYm9keSwgaHRtbCwgLmhvbWUge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmRldGFpbHMsIC5wcmVsb2FkZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmRnLmFjIHtcbiAgei1pbmRleDogOTk5OTkgIWltcG9ydGFudDtcbn1cblxuLmdhbGxlcnlfX2RldGFpbHNfX3BhcmFncmFwaCwgLmFib3V0X19yZWNvZ25pdGlvbl9fYXdhcmQsIC5hYm91dF9fcmVjb2duaXRpb25fX2RlZ3JlZSwgLmFib3V0X19zZXJ2aWNlX19kZXNjcmlwdGlvbiB7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xuICBmb250LXdlaWdodDogMzAwO1xuICBsaW5lLWhlaWdodDogMS41O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5nYWxsZXJ5X19kZXRhaWxzX19wYXJhZ3JhcGgsIC5hYm91dF9fcmVjb2duaXRpb25fX2F3YXJkLCAuYWJvdXRfX3JlY29nbml0aW9uX19kZWdyZWUsIC5hYm91dF9fc2VydmljZV9fZGVzY3JpcHRpb24ge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gIC5nYWxsZXJ5X19kZXRhaWxzX19wYXJhZ3JhcGgsIC5hYm91dF9fcmVjb2duaXRpb25fX2F3YXJkLCAuYWJvdXRfX3JlY29nbml0aW9uX19kZWdyZWUsIC5hYm91dF9fc2VydmljZV9fZGVzY3JpcHRpb24ge1xuICAgIGZvbnQtc2l6ZTogMi44cmVtO1xuICB9XG59XG5cbi5hYm91dF9fcmVjb2duaXRpb25fX3N1YnRpdGxlLCAuYWJvdXRfX3NlcnZpY2VfX3RpdGxlIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBmb250LXNpemU6IDJyZW07XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmFib3V0X19yZWNvZ25pdGlvbl9fc3VidGl0bGUsIC5hYm91dF9fc2VydmljZV9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICBtYXJnaW4tYm90dG9tOiA0cmVtO1xuICB9XG59XG5cbi5hYm91dF9fc29jaWFsX190aXRsZSwgLmFib3V0X19yZWNvZ25pdGlvbl9fdGl0bGUsIC5hYm91dF9fZmlyc3RfX3JpZ2h0IGgyIHtcbiAgZm9udC1mYW1pbHk6IFwiR2VvcmdlIFhcIjtcbiAgZm9udC1zaXplOiA1cmVtO1xuICBsaW5lLWhlaWdodDogMTtcbn1cblxuLmdhbGxlcnlfX2RldGFpbHNfX3RpdGxlIHtcbiAgZm9udC1mYW1pbHk6IFwiR2VvcmdlIFhcIjtcbiAgZm9udC1zaXplOiA4cmVtO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiYmxvd2JydXNoXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvYmxvd2JydXNoLm90ZlwiKSBmb3JtYXQoXCJvcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvYmxvd2JydXNoLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkdlb3JnZSBYXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvZ2VvcmdlLXgtcmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvZ2VvcmdlLXgtcmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlN1aXNzZSBCUFwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL3N1aXNzZS1icC1yZWd1bGFyLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9zdWlzc2UtYnAtcmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlN1aXNzZSBCUFwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL3N1aXNzZS1icC1saWdodC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvc3Vpc3NlLWJwLWxpZ2h0LndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiU3Vpc3NlIEJQXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvc3Vpc3NlLWJwLXVsdHJhLWxpZ2h0LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9zdWlzc2UtYnAtdWx0cmEtbGlnaHQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogMjAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvbW9udHNlcnJhdC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbiosXG4qOmFmdGVyLFxuKjpiZWZvcmUge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgY3Vyc29yOiBub25lO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiBQcmV2ZW50cyB0YXAgaGlnaGxpZ2h0IG9uIGlPUyAqL1xuICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmU7XG4gIC8qIFByZXZlbnRzIGNhbGxvdXQgbWVudSBvbiBsb25nLXByZXNzICovXG59XG5cbmh0bWwge1xuICBjdXJzb3I6IG5vbmU7XG4gIGZvbnQtc2l6ZTogMC41MjA4MzMzMzMzdnc7IC8qIFNldCBiYXNlIGZvbnQgc2l6ZSBieSB2aWV3cG9ydCB3aWR0aCBmb3Igc3RhbmRhcmQgcmVzb2x1dGlvbiAqL1xuICBsaW5lLWhlaWdodDogMTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICBodG1sIHtcbiAgICBmb250LXNpemU6IDAuOTc2NTYyNXZ3O1xuICAgIC8qIEFkanVzdCBmb250IHNpemUgZm9yIHBob25lIHNjcmVlbiByZXNvbHV0aW9ucyAqL1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAxLjMwMjA4MzMzMzN2dztcbiAgICAvKiBBZGp1c3QgZm9udCBzaXplIGZvciBwaG9uZSBzY3JlZW4gcmVzb2x1dGlvbnMgKi9cbiAgfVxufVxuXG5ib2R5IHtcbiAgY3Vyc29yOiBub25lO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IGZpeGVkO1xufVxuXG4uY29udGVudCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uY29udGVudF9fbW92ZSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5jdXJzb3ItZG90IHtcbiAgd2lkdGg6IDVweDtcbiAgaGVpZ2h0OiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBtaXgtYmxlbmQtbW9kZTogZGlmZmVyZW5jZTtcbn1cbi5jdXJzb3ItZG90LmN1cnNvci1zY3JvbGwge1xuICB3aWR0aDogOHB4O1xuICBoZWlnaHQ6IDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzgwZmYwMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKDQ1ZGVnKTtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICM4MGZmMDA7XG4gIGJvcmRlci1yaWdodDogMnB4IHNvbGlkICM4MGZmMDA7XG59XG5cbi5jdXJzb3Itb3V0bGluZSB7XG4gIHdpZHRoOiAzNXB4O1xuICBoZWlnaHQ6IDM1cHg7XG4gIGJvcmRlcjogM3B4IHNvbGlkIGhzbCg3OCwgMTAwJSwgNDAlKTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbn1cbi5jdXJzb3Itb3V0bGluZS5jdXJzb3Itc2Nyb2xsIHtcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogYXV0bztcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBmb250LXNpemU6IDEuMnJlbTtcbiAgY29sb3I6ICM4MGZmMDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxldHRlci1zcGFjaW5nOiAwLjJlbTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTBweCwgLTEwcHgpO1xufVxuLmN1cnNvci1vdXRsaW5lLmN1cnNvci1zY3JvbGw6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiU2Nyb2xsXCI7XG59XG4uY3Vyc29yLW91dGxpbmU6OmFmdGVyIHtcbiAgY29udGVudDogYXR0cihkYXRhLWxhYmVsKTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IC0xMHB4O1xuICBsZWZ0OiA1MHB4O1xuICBwYWRkaW5nOiA1cHggMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogaHNsYSg3OCwgMTAwJSwgOTAlLCAwLjYpO1xuICBjb2xvcjogaHNsKDc4LCAxMDAlLCAxNSUpO1xuICBmb250LXNpemU6IDIwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbi5pbWFnZS1ob3Zlci5jdXJzb3Itb3V0bGluZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGhzbGEoNzgsIDEwMCUsIDkwJSwgMC42KTtcbiAgYm9yZGVyOiBub25lO1xufVxuXG4uY3Vyc29yLW91dGxpbmUuaW1hZ2UtaG92ZXI6OmFmdGVyIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5jdXJzb3ItZG90LFxuLmN1cnNvci1vdXRsaW5lIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHotaW5kZXg6IDk5OTk5OTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbkBtZWRpYSAoaG92ZXI6IGhvdmVyKSB7XG4gIC5jdXJzb3ItZG90LFxuICAuY3Vyc29yLW91dGxpbmUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG4vKiBQc2V1ZG8tZWxlbWVudCBmb3IgdGhlIGxhYmVsIG5leHQgdG8gdGhlIGN1cnNvciAqL1xuLyogU2hvdyB0aGUgbGFiZWwgd2hlbiBob3ZlcmluZyBvdmVyIGFuIGltYWdlICovXG5hIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvdXRsaW5lOiBub25lO1xufVxuXG5jYW52YXMge1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5bZGF0YS1hbmltYXRpb249dGl0bGVdIHNwYW4sXG5bZGF0YS1hbmltYXRpb249bGFiZWxdIHNwYW4sXG5bZGF0YS1hbmltYXRpb249cGFyYWdyYXBoXSBzcGFuIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuXG4ucGFnZS10cmFuc2l0aW9uIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDMwMDA7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuLnBhZ2UtdHJhbnNpdGlvbl9fbGF5ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgxMDAlLCAwLCAwKTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG4ucGFnZS10cmFuc2l0aW9uX19sYXllcjpudGgtY2hpbGQoMSkge1xuICBiYWNrZ3JvdW5kOiBoc2woOTAsIDEwMCUsIDUwJSk7XG4gIHotaW5kZXg6IDMwMDE7XG59XG4ucGFnZS10cmFuc2l0aW9uX19sYXllcjpudGgtY2hpbGQoMikge1xuICBiYWNrZ3JvdW5kOiBoc2woMjAwLCAxMDAlLCA1MCUpO1xuICB6LWluZGV4OiAzMDAyO1xufVxuLnBhZ2UtdHJhbnNpdGlvbl9fbGF5ZXI6bnRoLWNoaWxkKDMpIHtcbiAgYmFja2dyb3VuZDogaHNsKDQ1LCAxMDAlLCA1MCUpO1xuICB6LWluZGV4OiAzMDAzO1xufVxuLnBhZ2UtdHJhbnNpdGlvbi5pcy1hbmltYXRpbmcge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5wYWdlLXRyYW5zaXRpb24uaXMtYW5pbWF0aW5nLW5leHQgLnBhZ2UtdHJhbnNpdGlvbl9fbGF5ZXIge1xuICBhbmltYXRpb246IGxheWVyLXNsaWRlLW5leHQtMSAxLjVzIGN1YmljLWJlemllcigwLjU1LCAwLjA1NSwgMC42NzUsIDAuMTkpIGZvcndhcmRzO1xufVxuLnBhZ2UtdHJhbnNpdGlvbi5pcy1hbmltYXRpbmctbmV4dCAucGFnZS10cmFuc2l0aW9uX19sYXllcjpudGgtY2hpbGQoMikge1xuICBhbmltYXRpb24tbmFtZTogbGF5ZXItc2xpZGUtbmV4dC0yO1xufVxuLnBhZ2UtdHJhbnNpdGlvbi5pcy1hbmltYXRpbmctbmV4dCAucGFnZS10cmFuc2l0aW9uX19sYXllcjpudGgtY2hpbGQoMykge1xuICBhbmltYXRpb24tbmFtZTogbGF5ZXItc2xpZGUtbmV4dC0zO1xufVxuXG5Aa2V5ZnJhbWVzIGxheWVyLXNsaWRlLW5leHQtMSB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICB9XG4gIDI1JSwgNzUlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjIxNSwgMC42MSwgMC4zNTUsIDEpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMCUsIDAsIDApO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGxheWVyLXNsaWRlLW5leHQtMiB7XG4gIDAlLCAxMi41JSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgxMDAlLCAwLCAwKTtcbiAgfVxuICAzNy41JSwgNjIuNSUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMjE1LCAwLjYxLCAwLjM1NSwgMSk7XG4gIH1cbiAgODcuNSUsIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMCUsIDAsIDApO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGxheWVyLXNsaWRlLW5leHQtMyB7XG4gIDAlLCAyNSUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMTAwJSwgMCwgMCk7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEpO1xuICB9XG4gIDc1JSwgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCk7XG4gIH1cbn1cbi5wYWdlLXRyYW5zaXRpb24uaXMtYW5pbWF0aW5nLXByZXYgLnBhZ2UtdHJhbnNpdGlvbl9fbGF5ZXIge1xuICBhbmltYXRpb246IGxheWVyLXNsaWRlLXByZXYtMSAxLjVzIGN1YmljLWJlemllcigwLjU1LCAwLjA1NSwgMC42NzUsIDAuMTkpIGZvcndhcmRzO1xufVxuLnBhZ2UtdHJhbnNpdGlvbi5pcy1hbmltYXRpbmctcHJldiAucGFnZS10cmFuc2l0aW9uX19sYXllcjpudGgtY2hpbGQoMikge1xuICBhbmltYXRpb24tbmFtZTogbGF5ZXItc2xpZGUtcHJldi0yO1xufVxuLnBhZ2UtdHJhbnNpdGlvbi5pcy1hbmltYXRpbmctcHJldiAucGFnZS10cmFuc2l0aW9uX19sYXllcjpudGgtY2hpbGQoMykge1xuICBhbmltYXRpb24tbmFtZTogbGF5ZXItc2xpZGUtcHJldi0zO1xufVxuXG5Aa2V5ZnJhbWVzIGxheWVyLXNsaWRlLXByZXYtMSB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDAlLCAwLCAwKTtcbiAgfVxuICAyNSUsIDc1JSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC4yMTUsIDAuNjEsIDAuMzU1LCAxKTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGxheWVyLXNsaWRlLXByZXYtMiB7XG4gIDAlLCAxMi41JSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCk7XG4gIH1cbiAgMzcuNSUsIDYyLjUlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjIxNSwgMC42MSwgMC4zNTUsIDEpO1xuICB9XG4gIDg3LjUlLCAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGxheWVyLXNsaWRlLXByZXYtMyB7XG4gIDAlLCAyNSUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMCUsIDAsIDApO1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxKTtcbiAgfVxuICA3NSUsIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMTAwJSwgMCwgMCk7XG4gIH1cbn1cbi5wcmVsb2FkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IDNyZW07XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICBjb2xvcjogaHNsKDc4LCAxMDAlLCA0NSUpO1xuICB6LWluZGV4OiAzO1xufVxuXG4ub3ZlcmxheSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGhzbGEoMCwgMCUsIDAlLCAwLjc1KTtcbiAgei1pbmRleDogNDtcbn1cblxuLnByZWxvYWRlcl9fdGV4dCB7XG4gIGZvbnQtZmFtaWx5OiBcImJsb3dicnVzaFwiO1xuICBvcGFjaXR5OiAwO1xuICBmb250LXNpemU6IDYuNXJlbTtcbiAgbWF4LXdpZHRoOiA2NnJlbTtcbiAgei1pbmRleDogNjc3O1xuICB0ZXh0LXNoYWRvdzogMCAwIDUwcHggaHNsYSgwLCAwJSwgMCUsIDAuNCk7XG59XG5cbi5wcmVsb2FkZXJfX251bWJlciB7XG4gIGZvbnQtc2l6ZTogMi41cmVtO1xuICBmb250LXdlaWdodDogOTAwO1xuICB6LWluZGV4OiA2Nzc7XG59XG5cbi5wcmVsb2FkZXJfX2FuaW1hdGlvbiB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5mcmFtZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBvcGFjaXR5OiAwOyAvKiBTdGFydCB3aXRoIGZyYW1lcyBoaWRkZW4gKi9cbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2UtaW4tb3V0OyAvKiBTbW9vdGggdHJhbnNpdGlvbiBiZXR3ZWVuIGZyYW1lcyAqL1xufVxuLmZyYW1lIGltZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIwOCk7XG4gIG9wYWNpdHk6IDE7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmZyYW1lMSAuaW1nMSB7XG4gIHRvcDogMDtcbiAgbGVmdDogNTB2dztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuZnJhbWUxIC5pbWcxIHtcbiAgICBsZWZ0OiAyMHZ3O1xuICB9XG59XG5cbi5mcmFtZTEgLmltZzIge1xuICB0b3A6IDA7XG4gIHJpZ2h0OiA1MHZ3O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5mcmFtZTEgLmltZzIge1xuICAgIHJpZ2h0OiAyMHZ3O1xuICB9XG59XG5cbi5mcmFtZTIgLmltZzEge1xuICB0b3A6IDA7XG4gIGxlZnQ6IDUwdnc7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmZyYW1lMiAuaW1nMSB7XG4gICAgbGVmdDogMjB2dztcbiAgfVxufVxuXG4uZnJhbWUyIC5pbWcyIHtcbiAgdG9wOiAwO1xuICByaWdodDogNTB2dztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuZnJhbWUyIC5pbWcyIHtcbiAgICByaWdodDogMjB2dztcbiAgfVxufVxuXG4uZnJhbWUzIC5pbWcxIHtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgbGVmdDogNTB2dztcbiAgd2lkdGg6IDUwMHB4O1xuICBoZWlnaHQ6IDUwMHB4O1xufVxuXG4uZnJhbWUzIC5pbWcyIHtcbiAgdG9wOiAwO1xuICByaWdodDogNTB2dztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuZnJhbWUzIC5pbWcyIHtcbiAgICByaWdodDogMjB2dztcbiAgfVxufVxuXG4uZnJhbWU0IC5pbWcxIHtcbiAgdG9wOiAwO1xuICByaWdodDogNTB2dztcbiAgd2lkdGg6IDQwMHB4O1xuICBoZWlnaHQ6IDQwMHB4O1xuICB6LWluZGV4OiA2O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5mcmFtZTQgLmltZzEge1xuICAgIHJpZ2h0OiAyMHZ3O1xuICB9XG59XG5cbi5mcmFtZTQgLmltZzIge1xuICB0b3A6IDA7XG4gIHJpZ2h0OiA1MHZ3O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5mcmFtZTQgLmltZzIge1xuICAgIHJpZ2h0OiAyMHZ3O1xuICB9XG59XG5cbi5mcmFtZTQgLmltZzMge1xuICB0b3A6IDA7XG4gIGxlZnQ6IDUwdnc7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmZyYW1lNCAuaW1nMyB7XG4gICAgbGVmdDogMjB2dztcbiAgfVxufVxuXG4uZnJhbWU1IC5pbWcxIHtcbiAgdG9wOiAwO1xuICBsZWZ0OiA1MHZ3O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5mcmFtZTUgLmltZzEge1xuICAgIGxlZnQ6IDIwdnc7XG4gIH1cbn1cblxuLmZyYW1lNSAuaW1nMiB7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDUwdnc7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmZyYW1lNSAuaW1nMiB7XG4gICAgcmlnaHQ6IDIwdnc7XG4gIH1cbn1cblxuLmZyYW1lNiAuaW1nMSB7XG4gIHRvcDogMDtcbiAgbGVmdDogNTB2dztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuZnJhbWU2IC5pbWcxIHtcbiAgICBsZWZ0OiAyMHZ3O1xuICB9XG59XG5cbi5mcmFtZTYgLmltZzIge1xuICB0b3A6IDA7XG4gIHJpZ2h0OiA1MHZ3O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5mcmFtZTYgLmltZzIge1xuICAgIHJpZ2h0OiAyMHZ3O1xuICB9XG59XG5cbi5mcmFtZTYgLmltZzMge1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDUwdnc7XG4gIGhlaWdodDogNjAlO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5mcmFtZTYgLmltZzMge1xuICAgIGxlZnQ6IDIwdnc7XG4gIH1cbn1cblxuLmZyYW1lNyAuaW1nMSB7XG4gIHRvcDogMDtcbiAgbGVmdDogNTB2dztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuZnJhbWU3IC5pbWcxIHtcbiAgICBsZWZ0OiAyMHZ3O1xuICB9XG59XG5cbi5mcmFtZTcgLmltZzIge1xuICB0b3A6IDA7XG4gIHJpZ2h0OiA1MHZ3O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5mcmFtZTcgLmltZzIge1xuICAgIHJpZ2h0OiAyMHZ3O1xuICB9XG59XG5cbi5mcmFtZTcgLmltZzMge1xuICBib3R0b206IDIwcHg7XG4gIGxlZnQ6IDUwdnc7XG4gIGhlaWdodDogNjAlO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5mcmFtZTcgLmltZzMge1xuICAgIGxlZnQ6IDIwdnc7XG4gIH1cbn1cblxuLmZyYW1lNyAuaW1nNCB7XG4gIHRvcDogNDBweDtcbiAgcmlnaHQ6IDUwdnc7XG4gIGhlaWdodDogNTUwcHg7XG4gIHdpZHRoOiA1MDBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuZnJhbWU3IC5pbWc0IHtcbiAgICByaWdodDogMjB2dztcbiAgfVxufVxuXG4uZnJhbWU4IC5pbWcxIHtcbiAgdG9wOiAwO1xuICBsZWZ0OiA1MHZ3O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5mcmFtZTggLmltZzEge1xuICAgIGxlZnQ6IDIwdnc7XG4gIH1cbn1cblxuLmZyYW1lOCAuaW1nMiB7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDUwdnc7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmZyYW1lOCAuaW1nMiB7XG4gICAgcmlnaHQ6IDIwdnc7XG4gIH1cbn1cblxuLmZyYW1lOCAuaW1nMyB7XG4gIHRvcDogNDBweDtcbiAgcmlnaHQ6IDUwdnc7XG4gIGhlaWdodDogNTUwcHg7XG4gIHdpZHRoOiA1MDBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuZnJhbWU4IC5pbWczIHtcbiAgICByaWdodDogMjB2dztcbiAgfVxufVxuXG4uZnJhbWU5IC5pbWcxIHtcbiAgdG9wOiAwO1xuICBsZWZ0OiA1MHZ3O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5mcmFtZTkgLmltZzEge1xuICAgIGxlZnQ6IDIwdnc7XG4gIH1cbn1cblxuLmZyYW1lOSAuaW1nMiB7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDUwdnc7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmZyYW1lOSAuaW1nMiB7XG4gICAgcmlnaHQ6IDIwdnc7XG4gIH1cbn1cblxuLmZyYW1lMTAgLmltZzEge1xuICB0b3A6IDA7XG4gIGxlZnQ6IDUwdnc7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmZyYW1lMTAgLmltZzEge1xuICAgIGxlZnQ6IDIwdnc7XG4gIH1cbn1cblxuLmZyYW1lMTAgLmltZzIge1xuICB0b3A6IDA7XG4gIHJpZ2h0OiA1MHZ3O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5mcmFtZTEwIC5pbWcyIHtcbiAgICByaWdodDogMjB2dztcbiAgfVxufVxuXG4uZnJhbWUxMSAuaW1nMSB7XG4gIHRvcDogMDtcbiAgbGVmdDogNTB2dztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuZnJhbWUxMSAuaW1nMSB7XG4gICAgbGVmdDogMjB2dztcbiAgfVxufVxuXG4uZnJhbWUxMSAuaW1nMiB7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDUwdnc7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmZyYW1lMTEgLmltZzIge1xuICAgIHJpZ2h0OiAyMHZ3O1xuICB9XG59XG5cbi5mcmFtZTEyIC5pbWcxIHtcbiAgdG9wOiAwO1xuICBsZWZ0OiA1MHZ3O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5mcmFtZTEyIC5pbWcxIHtcbiAgICBsZWZ0OiAyMHZ3O1xuICB9XG59XG5cbi5mcmFtZTEyIC5pbWcyIHtcbiAgdG9wOiAwO1xuICByaWdodDogNTB2dztcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuZnJhbWUxMiAuaW1nMiB7XG4gICAgcmlnaHQ6IDIwdnc7XG4gIH1cbn1cblxuLmZyYW1lMTIgLmltZzMge1xuICB0b3A6IDA7XG4gIHJpZ2h0OiA1MHZ3O1xuICBoZWlnaHQ6IDU1MHB4O1xuICB3aWR0aDogNTAwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmZyYW1lMTIgLmltZzMge1xuICAgIHJpZ2h0OiAyMHZ3O1xuICB9XG59XG5cbi5mcmFtZTEyIC5pbWc0IHtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiA1MHZ3O1xuICBoZWlnaHQ6IDU1MHB4O1xuICB3aWR0aDogNTAwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmZyYW1lMTIgLmltZzQge1xuICAgIGxlZnQ6IDIwdnc7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBzd2l0Y2hGcmFtZXMge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfSAvKiBGcmFtZSBpcyB2aXNpYmxlICovXG4gIDguMzMlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9IC8qIE1haW50YWluIHZpc2liaWxpdHkgKi9cbiAgOC4zNCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH0gLyogU3RhcnQgZmFkaW5nIG91dCAqL1xuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9IC8qIFJlbWFpbiBoaWRkZW4gKi9cbn1cbi5mcmFtZTEge1xuICBhbmltYXRpb246IHN3aXRjaEZyYW1lcyA2cyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbn1cblxuLmZyYW1lMiB7XG4gIGFuaW1hdGlvbjogc3dpdGNoRnJhbWVzIDZzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICBhbmltYXRpb24tZGVsYXk6IDAuNXM7XG59XG5cbi5mcmFtZTMge1xuICBhbmltYXRpb246IHN3aXRjaEZyYW1lcyA2cyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgYW5pbWF0aW9uLWRlbGF5OiAxcztcbn1cblxuLmZyYW1lNCB7XG4gIGFuaW1hdGlvbjogc3dpdGNoRnJhbWVzIDZzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICBhbmltYXRpb24tZGVsYXk6IDEuNXM7XG59XG5cbi5mcmFtZTUge1xuICBhbmltYXRpb246IHN3aXRjaEZyYW1lcyA2cyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgYW5pbWF0aW9uLWRlbGF5OiAycztcbn1cblxuLmZyYW1lNiB7XG4gIGFuaW1hdGlvbjogc3dpdGNoRnJhbWVzIDZzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICBhbmltYXRpb24tZGVsYXk6IDIuNXM7XG59XG5cbi5mcmFtZTcge1xuICBhbmltYXRpb246IHN3aXRjaEZyYW1lcyA2cyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgYW5pbWF0aW9uLWRlbGF5OiAzcztcbn1cblxuLmZyYW1lOCB7XG4gIGFuaW1hdGlvbjogc3dpdGNoRnJhbWVzIDZzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICBhbmltYXRpb24tZGVsYXk6IDMuNXM7XG59XG5cbi5mcmFtZTkge1xuICBhbmltYXRpb246IHN3aXRjaEZyYW1lcyA2cyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgYW5pbWF0aW9uLWRlbGF5OiA0cztcbn1cblxuLmZyYW1lMTAge1xuICBhbmltYXRpb246IHN3aXRjaEZyYW1lcyA2cyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgYW5pbWF0aW9uLWRlbGF5OiA0LjVzO1xufVxuXG4uZnJhbWUxMSB7XG4gIGFuaW1hdGlvbjogc3dpdGNoRnJhbWVzIDZzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICBhbmltYXRpb24tZGVsYXk6IDVzO1xufVxuXG4uZnJhbWUxMiB7XG4gIGFuaW1hdGlvbjogc3dpdGNoRnJhbWVzIDZzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICBhbmltYXRpb24tZGVsYXk6IDUuNXM7XG59XG5cbi5uYXZpZ2F0aW9uIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgei1pbmRleDogMjtcbn1cblxuLm5hdmlnYXRpb25fX292ZXJsYXkge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIG9wYWNpdHk6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB6LWluZGV4OiAzO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZTtcbn1cbi5uYXZpZ2F0aW9uX19vdmVybGF5LmlzLWFjdGl2ZSB7XG4gIG9wYWNpdHk6IDE7XG4gIHBvaW50ZXItZXZlbnRzOiBhbGwgIWltcG9ydGFudDtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5uYXZpZ2F0aW9uX19vdmVybGF5IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5uYXZpZ2F0aW9uX19idXR0b24ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogNHJlbTtcbiAgcmlnaHQ6IDRyZW07XG4gIHdpZHRoOiA3cmVtO1xuICBoZWlnaHQ6IDdyZW07XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB6LWluZGV4OiA1O1xufVxuXG4ubmF2aWdhdGlvbl9fYnV0dG9uLWNpcmNsZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cbi5uYXZpZ2F0aW9uX19idXR0b24tY2lyY2xlOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogaHNsKDkwLCAxMDAlLCA1MCUpO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHRyYW5zZm9ybTogc2NhbGUoMCk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlcjtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNnMgY3ViaWMtYmV6aWVyKDAuNywgMCwgMC4yLCAxKTtcbiAgYm94LXNoYWRvdzogMCAwIDIwcHggcmdiYSgxNDUsIDI1NSwgMCwgMC4yKTtcbn1cbi5uYXZpZ2F0aW9uX19idXR0b246aG92ZXIgLm5hdmlnYXRpb25fX2J1dHRvbi1jaXJjbGU6OmJlZm9yZSwgLm5hdmlnYXRpb25fX2J1dHRvbi5pcy1hY3RpdmUgLm5hdmlnYXRpb25fX2J1dHRvbi1jaXJjbGU6OmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSk7XG59XG4ubmF2aWdhdGlvbl9fYnV0dG9uLWNpcmNsZSBzdmcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cbi5uYXZpZ2F0aW9uX19idXR0b24tY2lyY2xlIHN2ZyBjaXJjbGUge1xuICBmaWxsOiBoc2woNzgsIDEwMCUsIDE1JSk7XG4gIHRyYW5zaXRpb246IGZpbGwgMC4zcyBlYXNlO1xufVxuLm5hdmlnYXRpb25fX2J1dHRvbjpob3ZlciAubmF2aWdhdGlvbl9fYnV0dG9uLWNpcmNsZSBzdmcgY2lyY2xlLCAubmF2aWdhdGlvbl9fYnV0dG9uLmlzLWFjdGl2ZSAubmF2aWdhdGlvbl9fYnV0dG9uLWNpcmNsZSBzdmcgY2lyY2xlIHtcbiAgZmlsbDogdHJhbnNwYXJlbnQ7XG59XG5cbi5uYXZpZ2F0aW9uX19idXR0b24taWNvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHdpZHRoOiAyLjVyZW07XG4gIGhlaWdodDogMi4yNXJlbTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB6LWluZGV4OiAxO1xufVxuLm5hdmlnYXRpb25fX2J1dHRvbi1pY29uIHNwYW4ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDNweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlLCB3aWR0aCAwLjNzIGVhc2UsIG9wYWNpdHkgMC4zcyBlYXNlO1xufVxuLm5hdmlnYXRpb25fX2J1dHRvbi1pY29uIHNwYW46bnRoLWNoaWxkKDIpIHtcbiAgd2lkdGg6IDcwJTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG59XG4ubmF2aWdhdGlvbl9fYnV0dG9uLWljb24gc3BhbjpmaXJzdC1jaGlsZCB7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlcjtcbn1cbi5uYXZpZ2F0aW9uX19idXR0b24taWNvbiBzcGFuOmxhc3QtY2hpbGQge1xuICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXI7XG59XG4ubmF2aWdhdGlvbl9fYnV0dG9uOmhvdmVyIC5uYXZpZ2F0aW9uX19idXR0b24taWNvbiBzcGFuIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5uYXZpZ2F0aW9uX19tZW51LXdyYXBwZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1heC13aWR0aDogNDB2dztcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHotaW5kZXg6IDQ7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5uYXZpZ2F0aW9uX19tZW51LXdyYXBwZXIge1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxufVxuXG4ubmF2aWdhdGlvbl9fbWVudS1iYWNrZ3JvdW5kIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBoc2woNzgsIDEwMCUsIDE1JSk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0IGNlbnRlcjtcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XG4gIHBvaW50ZXItZXZlbnRzOiBhbGw7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgwZGVnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDMpIDFweCwgdHJhbnNwYXJlbnQgMXB4KSwgbGluZWFyLWdyYWRpZW50KDkwZGVnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDMpIDFweCwgdHJhbnNwYXJlbnQgMXB4KTtcbiAgYmFja2dyb3VuZC1zaXplOiAyMHB4IDIwcHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG59XG5cbi5uYXZpZ2F0aW9uX19tZW51IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwb2ludGVyLWV2ZW50czogYWxsO1xufVxuLm5hdmlnYXRpb25fX21lbnU6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4ubmF2aWdhdGlvbl9fbWVudS1saXN0IHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4ubmF2aWdhdGlvbl9fbWVudS1saXN0LWl0ZW0ge1xuICBtYXJnaW46IDRyZW0gMDtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDJyZW0pO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctbGVmdDogM3JlbTtcbiAgZm9udC1zaXplOiBjYWxjKGNsYW1wKDMuMjVlbSwgNXZ3LCA0ZW0pICogMC41KTtcbn1cbi5uYXZpZ2F0aW9uX19tZW51LWxpc3QtaXRlbTo6YmVmb3JlIHtcbiAgY29udGVudDogXCLigKJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICBjb2xvcjogd2hpdGU7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBvcGFjaXR5OiAwLjU7XG4gIHRvcDogMTUlO1xuICBmb250LXNpemU6IGNhbGMoY2xhbXAoMy4yNWVtLCA1dncsIDRlbSkgKiAwLjUpO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZTtcbn1cbkBtZWRpYSAoaG92ZXI6IGhvdmVyKSB7XG4gIC5uYXZpZ2F0aW9uX19tZW51LWxpc3QtaXRlbTpob3Zlcjo6YmVmb3JlIHtcbiAgICBvcGFjaXR5OiAwLjg7XG4gIH1cbn1cbi5uYXZpZ2F0aW9uX19tZW51LWxpc3QtaXRlbSBhIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgZm9udC1zaXplOiBjbGFtcCgzLjI1ZW0sIDV2dywgNGVtKTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1mYW1pbHk6IFwiR2VvcmdlIFhcIjtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGxldHRlci1zcGFjaW5nOiAtMC4wMmVtO1xufVxuQG1lZGlhIChob3ZlcjogaG92ZXIpIHtcbiAgLm5hdmlnYXRpb25fX21lbnUtbGlzdC1pdGVtIGE6aG92ZXIge1xuICAgIG9wYWNpdHk6IDAuODtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTBweCk7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIH1cbn1cblxuLmdhbGxlcnkge1xuICBvdmVyZmxvdy15OiBhdXRvO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kOiBoc2woMCwgMyUsIDE0JSk7XG4gIGNvbG9yOiBcIiMzNzM4NENcIjtcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xuICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7XG59XG4uZ2FsbGVyeTo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmdhbGxlcnkubm8tc2Nyb2xsIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5nYWxsZXJ5X19jb250ZW50IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuLmdhbGxlcnlfX25hdmlnYXRpb24ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDIwMDA7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIHdpZHRoOiAxMDAlO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cbi5nYWxsZXJ5X19uYXYge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBtaXgtYmxlbmQtbW9kZTogZGlmZmVyZW5jZTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGdhcDogMXJlbTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIHBhZGRpbmc6IDEuNXJlbTtcbn1cbi5nYWxsZXJ5X19uYXY6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHdpZHRoOiAxMjAlO1xuICBoZWlnaHQ6IDEyMCU7XG4gIGJhY2tncm91bmQ6IGhzbGEoMCwgMCUsIDAlLCAwLjQpO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xuICB6LWluZGV4OiAtMTtcbn1cbi5nYWxsZXJ5X19uYXY6aG92ZXIge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuNSk7XG59XG4uZ2FsbGVyeV9fbmF2OmhvdmVyOjpiZWZvcmUge1xuICBvcGFjaXR5OiAxO1xufVxuLmdhbGxlcnlfX25hdjpob3ZlciAuaWNvbiB7XG4gIHN0cm9rZTogaHNsKDkwLCAxMDAlLCA1MCUpO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gIG1peC1ibGVuZC1tb2RlOiBkaWZmZXJlbmNlO1xufVxuLmdhbGxlcnlfX25hdjpob3ZlciAuZ2FsbGVyeV9fbmF2LWxhYmVsIHtcbiAgb3BhY2l0eTogMTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICBtaXgtYmxlbmQtbW9kZTogZGlmZmVyZW5jZTtcbn1cbi5nYWxsZXJ5X19uYXYtLXByZXYge1xuICBsZWZ0OiAycmVtO1xufVxuLmdhbGxlcnlfX25hdi0tbmV4dCB7XG4gIHJpZ2h0OiAycmVtO1xufVxuLmdhbGxlcnlfX25hdi0tbmV4dCAuaWNvbiB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG59XG4uZ2FsbGVyeV9fbmF2LS1uZXh0OmhvdmVyIC5pY29uIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKSBzY2FsZSgxLjEpO1xufVxuLmdhbGxlcnlfX25hdiAuZ2FsbGVyeV9fbmF2LWxhYmVsIHtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxldHRlci1zcGFjaW5nOiAwLjFlbTtcbiAgY29sb3I6IGhzbCg5MCwgMTAwJSwgNTAlKTtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwcHgpO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBmb250LWZhbWlseTogXCJTdWlzc2UgQlBcIjtcbiAgbWl4LWJsZW5kLW1vZGU6IGRpZmZlcmVuY2U7XG59XG5cbi5oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uaWNvbiB7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIGZpbGw6IG5vbmU7XG4gIHN0cm9rZTogaHNsKDkwLCAxMDAlLCA1MCUpO1xuICBzdHJva2Utd2lkdGg6IDY7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIG1peC1ibGVuZC1tb2RlOiBkaWZmZXJlbmNlO1xufVxuXG4uZ3JpZCB7XG4gIC0tZ2FwOiBjbGFtcCgxcmVtLCA1dm1pbiwgMnJlbSk7XG4gIC0tY29sdW1uczogMTUwcHg7XG4gIGdhcDogdmFyKC0tZ2FwKTtcbiAgY29sdW1uczogdmFyKC0tY29sdW1ucyk7XG4gIHdpZHRoOiA5NiU7XG4gIG1heC13aWR0aDogMTQwMHB4O1xuICBtYXJnaW46IDVyZW0gYXV0bztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5ncmlkIHtcbiAgICAtLWNvbHVtbnM6IDMwMHB4O1xuICB9XG59XG5cbi5ncmlkX2l0ZW0ge1xuICBicmVhay1pbnNpZGU6IGF2b2lkO1xuICBtYXJnaW4tYm90dG9tOiB2YXIoLS1nYXApO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGNlbnRlcjtcbn1cbi5ncmlkX2l0ZW0gaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGZpbHRlcjogZ3JheXNjYWxlKDEwMCUpO1xuICB0cmFuc2l0aW9uOiBmaWx0ZXIgMC40cyBlYXNlLCB0cmFuc2Zvcm0gMC40cyBlYXNlO1xufVxuLmdyaWRfaXRlbSBpbWc6aG92ZXIge1xuICBmaWx0ZXI6IGdyYXlzY2FsZSgwKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjAzKTtcbn1cblxuLnByZXZpZXcge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogbm9uZTtcbiAgei1pbmRleDogMTAwMDtcbn1cbi5wcmV2aWV3X19iYWNrZ3JvdW5kIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6IGhzbCgwLCAzJSwgMTQlKTtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7XG59XG4ucHJldmlld19fY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG4ucHJldmlld19faW1hZ2UtY29udGFpbmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuLnByZXZpZXdfX2Nsb3NlIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDJyZW07XG4gIHJpZ2h0OiAycmVtO1xuICB3aWR0aDogNnJlbTtcbiAgaGVpZ2h0OiA2cmVtO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHotaW5kZXg6IDIwMDE7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIG1peC1ibGVuZC1tb2RlOiBkaWZmZXJlbmNlO1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi5wcmV2aWV3X19jbG9zZSAuaWNvbi1jbG9zZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGZpbGw6IGhzbCg5MCwgMTAwJSwgNTAlKTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTtcbn1cbi5wcmV2aWV3X19jbG9zZTpob3ZlciB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbn1cbi5wcmV2aWV3X19jbG9zZTpob3ZlciAuaWNvbi1jbG9zZSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbn1cbi5wcmV2aWV3X190cmFuc2l0aW9uLWltYWdlIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgei1pbmRleDogMTAwMTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGNlbnRlcjtcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDEuMSk7XG59XG5cbi5wcmV2aWV3LS1vcGVuIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4ucHJldmlldy0tb3BlbiAucHJldmlld19fY2xvc2Uge1xuICBvcGFjaXR5OiAxO1xufVxuLnByZXZpZXctLW9wZW4gLnByZXZpZXdfX2JhY2tncm91bmQge1xuICBvcGFjaXR5OiAxO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmdhbGxlcnlfX25hdi0tcHJldiB7XG4gICAgbGVmdDogMXJlbTtcbiAgfVxuICAuZ2FsbGVyeV9fbmF2LS1uZXh0IHtcbiAgICByaWdodDogMXJlbTtcbiAgfVxuICAuZ2FsbGVyeV9fbmF2IC5nYWxsZXJ5X19uYXYtbGFiZWwge1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgfVxuICAuaWNvbiB7XG4gICAgd2lkdGg6IDMwcHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICB9XG59XG4ucHJldmlld19fbG9hZGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgei1pbmRleDogOTk5OTtcbn1cblxuLnNwaW5uZXIge1xuICB3aWR0aDogMTAwcHg7XG4gIGhlaWdodDogMTAwcHg7XG4gIGJvcmRlcjogNHB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcbiAgYm9yZGVyLXRvcC1jb2xvcjogd2hpdGU7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYW5pbWF0aW9uOiBzcGluIDAuOHMgbGluZWFyIGluZmluaXRlO1xufVxuXG5Aa2V5ZnJhbWVzIHNwaW4ge1xuICBmcm9tIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgfVxuICB0byB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgfVxufVxuLmFib3V0IHtcbiAgdG91Y2gtYWN0aW9uOiBub25lO1xuICAvKiBQcmV2ZW50cyBkZWZhdWx0IHRvdWNoIGFjdGlvbnMgKi9cbiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuICAvKiBFbmFibGVzIHNtb290aCBzY3JvbGxpbmcgb24gaU9TICovXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgY29sb3I6ICMzODRmMDM7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbn1cbi5hYm91dF9fc2Nyb2xsX190ZXh0IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDFyZW07XG4gIGxlZnQ6IDUwdnc7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGNvbG9yOiAjODBmZjAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsZXR0ZXItc3BhY2luZzogMC4yZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIG9wYWNpdHk6IDAuODtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgei1pbmRleDogMTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuYWJvdXRfX3Njcm9sbF9fdGV4dCB7XG4gICAgZm9udC1zaXplOiAxLjhyZW07XG4gIH1cbn1cbi5hYm91dF9fd3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwdmg7XG59XG4uYWJvdXRfX2ZpcnN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwdmg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5hYm91dF9fZmlyc3RfX2xlZnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMTAwJTtcbiAgZmxleDogMTtcbiAgaXNvbGF0aW9uOiBpc29sYXRlO1xufVxuLmFib3V0X19maXJzdF9fbGVmdDo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2JhKDAsIDAsIDAsIDAuNiksIHJnYmEoMCwgMCwgMCwgMC4yKSk7XG4gIHotaW5kZXg6IDE7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5hYm91dF9fZmlyc3RfX2xlZnQ6OmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDAsIDAsIDAsIDAuMyksIHJnYmEoMCwgMCwgMCwgMC44KSk7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgLmFib3V0X19maXJzdF9fbGVmdCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgLmFib3V0X19maXJzdF9fbGVmdCB7XG4gICAgZmxleDogbm9uZTtcbiAgfVxufVxuLmFib3V0X19maXJzdF9faW1hZ2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogMTAwJTtcbn1cbi5hYm91dF9fZmlyc3RfX2ltYWdlIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBvYmplY3QtcG9zaXRpb246IDUwJSAwJTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgLmFib3V0X19maXJzdF9faW1hZ2Uge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwdmg7XG4gIH1cbn1cbi5hYm91dF9fZmlyc3RfX2NvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDI7XG4gIHBhZGRpbmc6IDZyZW07XG4gIG1heC13aWR0aDogNjByZW07XG4gIGNvbG9yOiAjRkZGRkZGO1xuICBmb250LXdlaWdodDogMzAwO1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gIGFuaW1hdGlvbjogZmFkZUluVXAgMXMgZWFzZSBmb3J3YXJkcztcbiAgYW5pbWF0aW9uLWRlbGF5OiAwLjVzO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuYWJvdXRfX2ZpcnN0X19jb250ZW50IHtcbiAgICBwYWRkaW5nOiAyLjVyZW07XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgcGFkZGluZy1ib3R0b206IDE4dmg7XG4gIH1cbn1cbi5hYm91dF9fZmlyc3RfX3RpdGxlIHtcbiAgZm9udC1zaXplOiA3LjJyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjE7XG4gIG1hcmdpbi1ib3R0b206IDMuMnJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1mYW1pbHk6IFwiYmxvd2JydXNoXCI7XG59XG4uYWJvdXRfX2ZpcnN0X190aXRsZSBzcGFuIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGNvbG9yOiAjODBmZjAwO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2U7XG59XG4uYWJvdXRfX2ZpcnN0X190aXRsZSBzcGFuOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAtNXB4O1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAycHg7XG4gIGJhY2tncm91bmQ6ICM4MGZmMDA7XG4gIHRyYW5zZm9ybTogc2NhbGVYKDApO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodDtcbn1cbi5hYm91dF9fZmlyc3RfX3RpdGxlIHNwYW46aG92ZXI6OmFmdGVyIHtcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMSk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQ7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5hYm91dF9fZmlyc3RfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDhyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMi40cmVtO1xuICB9XG4gIC5hYm91dF9fZmlyc3RfX3RpdGxlIHNwYW4ge1xuICAgIGZvbnQtc2l6ZTogOXJlbTtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICB9XG59XG4uYWJvdXRfX2ZpcnN0X19kZXNjcmlwdGlvbiB7XG4gIGZvbnQtc2l6ZTogMi40cmVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBvcGFjaXR5OiAwO1xuICBtYXgtd2lkdGg6IDUycmVtO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICBmb250LXdlaWdodDogMzAwO1xuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG4gIG1hcmdpbi10b3A6IDJyZW07XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5hYm91dF9fZmlyc3RfX2Rlc2NyaXB0aW9uIHtcbiAgICBmb250LXNpemU6IDIuOHJlbTtcbiAgICBsaW5lLWhlaWdodDogMS40O1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIH1cbn1cbi5hYm91dF9fZmlyc3RfX3JpZ2h0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBwYWRkaW5nOiA2cmVtO1xuICBiYWNrZ3JvdW5kOiAjMjUyMzIzO1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMCUpO1xufVxuLmFib3V0X19maXJzdF9fcmlnaHQgaDIge1xuICBtYXJnaW4tYm90dG9tOiA0cmVtO1xuICBtYXJnaW4tdG9wOiAxMHJlbTtcbiAgY29sb3I6ICM4MGZmMDA7XG4gIGZvbnQtZmFtaWx5OiBcImJsb3dicnVzaFwiO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuYWJvdXRfX2ZpcnN0X19yaWdodCBoMjpmaXJzdC1vZi10eXBlIHtcbiAgICBtYXJnaW4tYm90dG9tOiA4cmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gIC5hYm91dF9fZmlyc3RfX3JpZ2h0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdHJhbnNmb3JtOiBub25lO1xuICB9XG59XG4uYWJvdXRfX3NlcnZpY2VzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZ2FwOiA2cmVtO1xufVxuLmFib3V0X19zZXJ2aWNlIHtcbiAgbWF4LXdpZHRoOiA0NHJlbTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgLmFib3V0X19zZXJ2aWNlIHtcbiAgICBtYXgtd2lkdGg6IHVuc2V0O1xuICB9XG59XG4uYWJvdXRfX3NlcnZpY2U6aG92ZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTBweCk7XG59XG4uYWJvdXRfX3NlcnZpY2U6aG92ZXIgLmFib3V0X19zZXJ2aWNlX190aXRsZSB7XG4gIGNvbG9yOiAjODBmZjAwO1xufVxuLmFib3V0X19zZXJ2aWNlOmhvdmVyIC5hYm91dF9fc2VydmljZV9fbnVtYmVyIHtcbiAgY29sb3I6ICM4MGZmMDA7XG59XG4uYWJvdXRfX3NlcnZpY2VfX251bWJlciB7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDVlbTtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlO1xufVxuLmFib3V0X19zZXJ2aWNlX19kZXNjcmlwdGlvbiB7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG59XG4uYWJvdXRfX3JlY29nbml0aW9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBwYWRkaW5nOiA2cmVtO1xuICBiYWNrZ3JvdW5kOiAjMjUyMzIzO1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMCUpO1xuICBpc29sYXRpb246IGlzb2xhdGU7XG59XG4uYWJvdXRfX3JlY29nbml0aW9uOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgei1pbmRleDogLTE7XG59XG4uYWJvdXRfX3JlY29nbml0aW9uX190aXRsZSB7XG4gIG1hcmdpbi1ib3R0b206IDZyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY29sb3I6ICM4MGZmMDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gIC5hYm91dF9fcmVjb2duaXRpb25fX3RpdGxlIHtcbiAgICBtYXJnaW4tdG9wOiAyNXJlbSAhaW1wb3J0YW50O1xuICB9XG59XG4uYWJvdXRfX3JlY29nbml0aW9uX19jb250ZW50IHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbiAgZ2FwOiA2cmVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uYWJvdXRfX3JlY29nbml0aW9uX19zdWJ0aXRsZSB7XG4gIGNvbG9yOiAjRkZGRkZGO1xufVxuLmFib3V0X19yZWNvZ25pdGlvbl9fc3VidGl0bGU6bnRoLW9mLXR5cGUoMikge1xuICBtYXJnaW4tdG9wOiA0cmVtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuYWJvdXRfX3JlY29nbml0aW9uX19zdWJ0aXRsZTpudGgtb2YtdHlwZSgyKSB7XG4gICAgbWFyZ2luLXRvcDogOHJlbTtcbiAgfVxufVxuLmFib3V0X19yZWNvZ25pdGlvbl9fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGdhcDogNHJlbTtcbn1cbi5hYm91dF9fcmVjb2duaXRpb25fX2l0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDJyZW07XG4gIHBhZGRpbmctYm90dG9tOiAycmVtO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgxMjgsIDI1NSwgMCwgMC4yKTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTtcbn1cbi5hYm91dF9fcmVjb2duaXRpb25fX2l0ZW06aG92ZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTBweCk7XG59XG4uYWJvdXRfX3JlY29nbml0aW9uX19pdGVtOmhvdmVyIC5hYm91dF9fcmVjb2duaXRpb25fX2F3YXJkLFxuLmFib3V0X19yZWNvZ25pdGlvbl9faXRlbTpob3ZlciAuYWJvdXRfX3JlY29nbml0aW9uX19kZWdyZWUge1xuICBjb2xvcjogIzgwZmYwMDtcbn1cbi5hYm91dF9fcmVjb2duaXRpb25fX3llYXIge1xuICBmb250LXNpemU6IDEuNHJlbTtcbiAgb3BhY2l0eTogMC42O1xuICBsZXR0ZXItc3BhY2luZzogMC4wNWVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlO1xufVxuLmFib3V0X19yZWNvZ25pdGlvbl9fZGV0YWlscyB7XG4gIGZsZXg6IDE7XG59XG4uYWJvdXRfX3JlY29nbml0aW9uX19hd2FyZCwgLmFib3V0X19yZWNvZ25pdGlvbl9fZGVncmVlIHtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlO1xufVxuLmFib3V0X19yZWNvZ25pdGlvbl9fcG9zaXRpb24sIC5hYm91dF9fcmVjb2duaXRpb25fX3NjaG9vbCB7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBsaW5lLWhlaWdodDogMS42O1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpO1xuICBmb250LXdlaWdodDogMzAwO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuYWJvdXRfX3JlY29nbml0aW9uX19wb3NpdGlvbiwgLmFib3V0X19yZWNvZ25pdGlvbl9fc2Nob29sIHtcbiAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjVweCkge1xuICAuYWJvdXRfX3JlY29nbml0aW9uIHtcbiAgICBsZWZ0OiA0MCU7XG4gICAgd2lkdGg6IDYwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XG4gIH1cbn1cbi5hYm91dF9fc29jaWFsIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBwYWRkaW5nOiA2cmVtO1xuICBiYWNrZ3JvdW5kOiAjMjUyMzIzO1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMCUpO1xuICBpc29sYXRpb246IGlzb2xhdGU7XG59XG4uYWJvdXRfX3NvY2lhbF9fdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiA2cmVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGNvbG9yOiAjODBmZjAwO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjVweCkge1xuICAuYWJvdXRfX3NvY2lhbF9fdGl0bGUge1xuICAgIG1hcmdpbi10b3A6IDM0cmVtICFpbXBvcnRhbnQ7XG4gIH1cbn1cbi5hYm91dF9fc29jaWFsX19jb250ZW50IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IDRyZW07XG59XG4uYWJvdXRfX3NvY2lhbF9faXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMnJlbTtcbiAgZm9udC1zaXplOiAyLjJyZW07XG4gIGNvbG9yOiAjRkZGRkZGO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAxZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5hYm91dF9fc29jaWFsX19pdGVtOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC0yMHB4O1xuICB0b3A6IDUwJTtcbiAgd2lkdGg6IDEwcHg7XG4gIGhlaWdodDogMnB4O1xuICBiYWNrZ3JvdW5kOiAjODBmZjAwO1xuICB0cmFuc2Zvcm06IHNjYWxlWCgwKTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTtcbn1cbi5hYm91dF9fc29jaWFsX19pdGVtOmhvdmVyIHtcbiAgY29sb3I6ICM4MGZmMDA7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMHB4KTtcbn1cbi5hYm91dF9fc29jaWFsX19pdGVtOmhvdmVyOjpiZWZvcmUge1xuICB0cmFuc2Zvcm06IHNjYWxlWCgxKTtcbn1cbi5hYm91dF9fc29jaWFsX19pdGVtOmhvdmVyIHN2ZyB7XG4gIHN0cm9rZTogIzgwZmYwMDtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xufVxuLmFib3V0X19zb2NpYWxfX2l0ZW0gc3ZnIHtcbiAgd2lkdGg6IDNyZW07XG4gIGhlaWdodDogM3JlbTtcbiAgc3Ryb2tlLXdpZHRoOiAxLjU7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG4uYWJvdXRfX3NvY2lhbF9faXRlbSBzcGFuIHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgLmFib3V0X19zb2NpYWwge1xuICAgIGxlZnQ6IDU1JTtcbiAgICB3aWR0aDogNDUlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5hYm91dF9fcmVjb2duaXRpb24ge1xuICAgIHBhZGRpbmc6IDRyZW07XG4gIH1cbiAgLmFib3V0X19yZWNvZ25pdGlvbl9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNS42cmVtO1xuICB9XG4gIC5hYm91dF9fcmVjb2duaXRpb25fX2NvbnRlbnQge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgIGdhcDogNHJlbTtcbiAgfVxuICAuYWJvdXRfX3NvY2lhbCB7XG4gICAgcGFkZGluZzogNHJlbTtcbiAgfVxuICAuYWJvdXRfX3NvY2lhbF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNS42cmVtO1xuICB9XG4gIC5hYm91dF9fc29jaWFsX19pdGVtIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbiAgLmFib3V0X19zb2NpYWxfX2l0ZW0gc3BhbiB7XG4gICAgZm9udC1zaXplOiAyLjhyZW07XG4gIH1cbiAgLmFib3V0X19zb2NpYWxfX2l0ZW0gc3ZnIHtcbiAgICB3aWR0aDogNHJlbTtcbiAgICBoZWlnaHQ6IDRyZW07XG4gICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgc2Nyb2xsTGluZSB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMCUpO1xuICB9XG4gIDUxJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMjBweCk7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCk7XG4gIH1cbn1cbkBrZXlmcmFtZXMgZmFkZUluVXAge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTtcbiAgfVxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gIH1cbn1cbi5ob21lIHtcbiAgcGFkZGluZy10b3A6IDdyZW07XG4gIGZvbnQtZmFtaWx5OiBcImJsb3dicnVzaFwiO1xuICBmb250LXNpemU6IDNyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG4gIGNvbG9yOiAjNDQ0NDQ0O1xufVxuXG4uZ2FsbGVyaWVzIHtcbiAgZm9udC1mYW1pbHk6IFwiYmxvd2JydXNoXCI7XG4gIGNvbG9yOiBoc2woNzgsIDEwMCUsIDE1JSk7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIHRvcDogNHJlbTtcbiAgei1pbmRleDogMjtcbiAgZm9udC1zaXplOiA2cmVtO1xufVxuXG4ucGlubmVkLWFydCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAxMHZoO1xuICBsZWZ0OiAtMjBweDtcbiAgd2lkdGg6IDE4MHB4O1xuICBwZXJzcGVjdGl2ZTogMTAwMHB4O1xuICB6LWluZGV4OiAyO1xuICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgyN2RlZyk7XG59XG4ucGlubmVkLWFydCAucGluIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICB0b3A6IC0xMHB4O1xuICBsZWZ0OiAtMTBweDtcbiAgei1pbmRleDogNTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTI1ZGVnKTtcbiAgZmlsdGVyOiBkcm9wLXNoYWRvdygycHggNHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMikpO1xufVxuLnBpbm5lZC1hcnQgLm5ldy1hcnQtdGV4dCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtNi41cmVtO1xuICBsZWZ0OiAtMS41cmVtO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNnJlbSkgcm90YXRlKC0yNmRlZyk7XG4gIGZvbnQtZmFtaWx5OiBjdXJzaXZlO1xuICBmb250LXNpemU6IDIuNXJlbTtcbiAgY29sb3I6IGhzbCg3OCwgMTAwJSwgMTUlKTtcbiAgei1pbmRleDogNDtcbn1cbi5waW5uZWQtYXJ0IC5hcnR3b3JrIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTIwcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogdG9wIGxlZnQ7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2U7XG4gIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBwYWRkaW5nOiA4cHg7XG59XG4ucGlubmVkLWFydCAuYXJ0d29yazpob3ZlciB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDVkZWcpO1xufVxuLnBpbm5lZC1hcnQgLmFydHdvcmsgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG4ucGlubmVkLWFydCAuYXJ0d29yazo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogOTBweDtcbiAgd2lkdGg6IDEwcHg7XG4gIGhlaWdodDogMTBweDtcbiAgYmFja2dyb3VuZDogcmFkaWFsLWdyYWRpZW50KGNpcmNsZSBhdCBjZW50ZXIsIHJnYmEoMCwgMCwgMCwgMC4yKSwgdHJhbnNwYXJlbnQgNzAlKTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAucGlubmVkLWFydCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4uYmFubmVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAxO1xuICBtYXJnaW4tdG9wOiAxMHZoO1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZ3JpZDtcbiAganVzdGlmeS1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDEwMHZoO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5iYW5uZXIge1xuICAgIG1hcmdpbi10b3A6IDE4dmg7XG4gIH1cbn1cblxuLmJhbm5lciAuc2xpZGVyIHtcbiAgdG9wOiAwO1xuICBtYXgtd2lkdGg6IDE3MHB4O1xuICBhc3BlY3QtcmF0aW86IDQvNDtcbiAgdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcbiAgd2lkdGg6IDMwdnc7XG4gIHRyYW5zZm9ybTogcm90YXRlWChcIjE2ZGVnXCIpO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5iYW5uZXIgLnNsaWRlciB7XG4gICAgYXNwZWN0LXJhdGlvOiA2LzQ7XG4gIH1cbn1cblxuLmJhbm5lciAuc2xpZGVyIC5nYWxsZXJ5X19pbWFnZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaW5zZXQ6IDAgMCAwIDA7XG4gIHdpZHRoOiAxMDAlO1xuICB0cmFuc2Zvcm06IHJvdGF0ZVkoY2FsYyh2YXIoLS1wb3NpdGlvbikgKiAzNjAgLyB2YXIoLS1xdWFudGl0eSkgKiAtMWRlZykpIHRyYW5zbGF0ZVoobWluKDI2dncsIDQ4MHB4KSk7XG4gIHRyYW5zZm9ybS1zdHlsZTogcHJlc2VydmUtM2Q7XG4gIHotaW5kZXg6IDE7XG4gIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5iYW5uZXIgLnNsaWRlciAuZ2FsbGVyeV9faW1hZ2Uge1xuICAgIHRyYW5zZm9ybTogcm90YXRlWShjYWxjKHZhcigtLXBvc2l0aW9uKSAqIDM2MCAvIHZhcigtLXF1YW50aXR5KSAqIC0xZGVnKSkgdHJhbnNsYXRlWig0NXZ3KTtcbiAgfVxufVxuLmJhbm5lciAuc2xpZGVyIC5nYWxsZXJ5X19pbWFnZSBhLmdhbGxlcnlfbGluayB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaW5zZXQ6IDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB6LWluZGV4OiA1O1xuICBwb2ludGVyLWV2ZW50czogYXV0bztcbn1cbi5iYW5uZXIgLnNsaWRlciAuZ2FsbGVyeV9faW1hZ2UgZmlndXJlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiAwO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cbi5iYW5uZXIgLnNsaWRlciAuZ2FsbGVyeV9faW1hZ2UgaW1nIHtcbiAgZmlsdGVyOiBncmF5c2NhbGUoMTAwJSk7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDIwMHB4O1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgdHJhbnNpdGlvbjogZmlsdGVyIDAuNXMgZWFzZTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHotaW5kZXg6IDE7XG59XG4uYmFubmVyIC5zbGlkZXIgLmdhbGxlcnlfX2ltYWdlIGltZzpob3ZlciB7XG4gIGZpbHRlcjogZ3JheXNjYWxlKDAlKTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuYmFubmVyIC5zbGlkZXIgLmdhbGxlcnlfX2ltYWdlIGltZyB7XG4gICAgaGVpZ2h0OiB1bnNldDtcbiAgfVxufVxuXG4uc2xpZGVyIHtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG59XG5cbi5nYWxsZXJ5X19kZXRhaWxzX19pdGVtIHtcbiAgb3BhY2l0eTogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDcwdmg7XG4gIGxlZnQ6IDhyZW07XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC41cyBlYXNlO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5nYWxsZXJ5X19kZXRhaWxzX19pdGVtIHtcbiAgICB0b3A6IDY1dmg7XG4gICAgbGVmdDogMnJlbTtcbiAgfVxufVxuXG4uZ2FsbGVyeV9fZGV0YWlsc19fdGl0bGUge1xuICBjb2xvcjogaHNsKDc4LCAxMDAlLCAxNSUpO1xufVxuXG4uZ2FsbGVyeV9fZGV0YWlsc19fcGFyYWdyYXBoIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBtYXJnaW4tdG9wOiAycmVtO1xuICBtYXgtd2lkdGg6IDQ0cmVtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5nYWxsZXJ5X19kZXRhaWxzX19wYXJhZ3JhcGgge1xuICAgIG1heC13aWR0aDogbm9uZTtcbiAgfVxufVxuXG4uZ2FsbGVyeS1pbmRpY2F0b3JzIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDJyZW07XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDFyZW07XG4gIHotaW5kZXg6IDI7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4uaW5kaWNhdG9yLWRvdCB7XG4gIHdpZHRoOiA4cHg7XG4gIGhlaWdodDogOHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQ6IGhzbGEoNzgsIDEwMCUsIDE1JSwgMC4zKTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmluZGljYXRvci1kb3Qge1xuICAgIHdpZHRoOiA2cHg7XG4gICAgaGVpZ2h0OiA2cHg7XG4gIH1cbn1cblxuLnJldmVhbGVyIHtcbiAgd2lkdGg6IG1heCgyMDB2dywgMjAwdmgpO1xuICBoZWlnaHQ6IG1heCgyMDB2dywgMjAwdmgpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDEwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBoc2woOTAsIDEwMCUsIDUwJSk7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCBtYXgoMjAwdncsIDIwMHZoKSkgcm90YXRlKDE2ZGVnKTtcbn1cbi5yZXZlYWxlciB1bCB7XG4gIGxpc3Qtc3R5bGU6IGRpc2M7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbn1cblxuLnJldmVhbGVyX190ZXh0IHtcbiAgY29sb3I6IGJsYWNrO1xuICBmb250LXNpemU6IDcuNXJlbTtcbn0iLCJodG1sLFxuYm9keSxcbmRpdixcbnNwYW4sXG5hcHBsZXQsXG5vYmplY3QsXG5pZnJhbWUsXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wLFxuYmxvY2txdW90ZSxcbnByZSxcbmEsXG5hYmJyLFxuYWNyb255bSxcbmFkZHJlc3MsXG5iaWcsXG5jaXRlLFxuY29kZSxcbmRlbCxcbmRmbixcbmVtLFxuaW1nLFxuaW5zLFxua2JkLFxucSxcbnMsXG5zYW1wLFxuc21hbGwsXG5zdHJpa2UsXG5zdHJvbmcsXG5zdWIsXG5zdXAsXG50dCxcbnZhcixcbmIsXG51LFxuaSxcbmNlbnRlcixcbmRsLFxuZHQsXG5kZCxcbm9sLFxudWwsXG5saSxcbmZpZWxkc2V0LFxuZm9ybSxcbmxhYmVsLFxubGVnZW5kLFxudGFibGUsXG5jYXB0aW9uLFxudGJvZHksXG50Zm9vdCxcbnRoZWFkLFxudHIsXG50aCxcbnRkLFxuYXJ0aWNsZSxcbmFzaWRlLFxuY2FudmFzLFxuZGV0YWlscyxcbmVtYmVkLFxuZmlndXJlLFxuZmlnY2FwdGlvbixcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1lbnUsXG5uYXYsXG5vdXRwdXQsXG5ydWJ5LFxuc2VjdGlvbixcbnN1bW1hcnksXG50aW1lLFxubWFyayxcbmF1ZGlvLFxudmlkZW8ge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250OiBpbmhlcml0O1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWVudSxcbm5hdixcbnNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxuXG5vbCxcbnVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYmxvY2txdW90ZSxcbnEge1xuICBxdW90ZXM6IG5vbmU7XG59XG5cbmJsb2NrcXVvdGU6YmVmb3JlLFxuYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLFxucTphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGNvbnRlbnQ6IG5vbmU7XG59XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG4iLCIlY292ZXIge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbn1cblxuJWNlbnRlciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuIiwiLmRnLmFjIHtcbiAgei1pbmRleDogOTk5OTkgIWltcG9ydGFudDtcbn1cbiIsIiVkZXNjcmlwdGlvbi0xMiB7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc8cGhvbmUnKSB7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICB9XG59XG5cbiVkZXNjcmlwdGlvbi0xNCB7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc8cGhvbmUnKSB7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICB9XG59XG5cbiVkZXNjcmlwdGlvbi0xNiB7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xuICBmb250LXdlaWdodDogMzAwO1xuICBsaW5lLWhlaWdodDogMS41O1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc8cGhvbmUnKSB7XG5mb250LXNpemU6IDJyZW07ICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHsgICAgZm9udC1zaXplOiAyLjhyZW07XG5cbiAgICB9XG59XG4iLCIvLyAgICAgXyAgICAgICAgICAgIF8gICAgICAgICAgIF8gICAgICAgICAgICAgICAgICAgICAgICAgICBfIF9cbi8vICAgIChfKSAgICAgICAgICB8IHwgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgICAgfCAoXylcbi8vICAgICBfIF8gX18gICBfX198IHxfICAgXyAgX198IHwgX19fICAgXyBfXyBfX18gICBfX18gIF9ffCB8XyAgX18gX1xuLy8gICAgfCB8ICdfIFxcIC8gX198IHwgfCB8IHwvIF9gIHwvIF8gXFwgfCAnXyBgIF8gXFwgLyBfIFxcLyBfYCB8IHwvIF9gIHxcbi8vICAgIHwgfCB8IHwgfCAoX198IHwgfF98IHwgKF98IHwgIF9fLyB8IHwgfCB8IHwgfCAgX18vIChffCB8IHwgKF98IHxcbi8vICAgIHxffF98IHxffFxcX19ffF98XFxfXyxffFxcX18sX3xcXF9fX3wgfF98IHxffCB8X3xcXF9fX3xcXF9fLF98X3xcXF9fLF98XG4vL1xuLy8gICAgICBTaW1wbGUsIGVsZWdhbnQgYW5kIG1haW50YWluYWJsZSBtZWRpYSBxdWVyaWVzIGluIFNhc3Ncbi8vICAgICAgICAgICAgICAgICAgICAgICAgdjIuMC4wXG4vL1xuLy8gICAgICAgIGh0dHBzOi8vZWR1YXJkb2JvdWNhcy5naXRodWIuaW8vaW5jbHVkZS1tZWRpYVxuLy9cbi8vICAgICAgICAgQXV0aG9yczogRWR1YXJkbyBCb3VjYXMgKEBlZHVhcmRvYm91Y2FzKVxuLy8gICAgICAgICAgICAgICAgICBLaXR0eSBHaXJhdWRlbCAoQGtpdHR5Z2lyYXVkZWwpXG4vL1xuLy8gICAgICBUaGlzIHByb2plY3QgaXMgbGljZW5zZWQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBNSVQgbGljZW5zZVxuQGNoYXJzZXQgXCJVVEYtOFwiO1xuXG4vLy8vXG4vLy8gaW5jbHVkZS1tZWRpYSBsaWJyYXJ5IHB1YmxpYyBjb25maWd1cmF0aW9uXG4vLy8gQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8vXG5AdXNlICdzYXNzOm1hdGgnO1xuQHVzZSAnc2FzczptYXAnO1xuQHVzZSAnc2FzczpsaXN0JztcbkB1c2UgJ3Nhc3M6c3RyaW5nJztcbkB1c2UgJ3Nhc3M6bWV0YSc7XG5cbi8vL1xuLy8vIENyZWF0ZXMgYSBsaXN0IG9mIGdsb2JhbCBicmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzaW5nbGUgYnJlYWtwb2ludCB3aXRoIHRoZSBsYWJlbCBgcGhvbmVgXG4vLy8gICRicmVha3BvaW50czogKCdwaG9uZSc6IDMyMHB4KTtcbi8vL1xuJGJyZWFrcG9pbnRzOiAoXG4gICdwaG9uZSc6IDMyMHB4LFxuICAndGFibGV0JzogNzY4cHgsXG4gICdkZXNrdG9wJzogMTAyNHB4LFxuKSAhZGVmYXVsdDtcblxuLy8vXG4vLy8gQ3JlYXRlcyBhIGxpc3Qgb2Ygc3RhdGljIGV4cHJlc3Npb25zIG9yIG1lZGlhIHR5cGVzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHNpbmdsZSBtZWRpYSB0eXBlIChzY3JlZW4pXG4vLy8gICRtZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nOiAnc2NyZWVuJyk7XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHN0YXRpYyBleHByZXNzaW9uIHdpdGggbG9naWNhbCBkaXNqdW5jdGlvbiAoT1Igb3BlcmF0b3IpXG4vLy8gICRtZWRpYS1leHByZXNzaW9uczogKFxuLy8vICAgICdyZXRpbmEyeCc6ICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpJ1xuLy8vICApO1xuLy8vXG4kbWVkaWEtZXhwcmVzc2lvbnM6IChcbiAgJ3NjcmVlbic6ICdzY3JlZW4nLFxuICAncHJpbnQnOiAncHJpbnQnLFxuICAnaGFuZGhlbGQnOiAnaGFuZGhlbGQnLFxuICAnbGFuZHNjYXBlJzogJyhvcmllbnRhdGlvbjogbGFuZHNjYXBlKScsXG4gICdwb3J0cmFpdCc6ICcob3JpZW50YXRpb246IHBvcnRyYWl0KScsXG4gICdyZXRpbmEyeCc6XG4gICAgJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSksIChtaW4tcmVzb2x1dGlvbjogMmRwcHgpJyxcbiAgJ3JldGluYTN4JzpcbiAgICAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMyksIChtaW4tcmVzb2x1dGlvbjogMzUwZHBpKSwgKG1pbi1yZXNvbHV0aW9uOiAzZHBweCknLFxuKSAhZGVmYXVsdDtcblxuLy8vXG4vLy8gRGVmaW5lcyBhIG51bWJlciB0byBiZSBhZGRlZCBvciBzdWJ0cmFjdGVkIGZyb20gZWFjaCB1bml0IHdoZW4gZGVjbGFyaW5nIGJyZWFrcG9pbnRzIHdpdGggZXhjbHVzaXZlIGludGVydmFsc1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciBwaXhlbHMgaXMgZGVmaW5lZCBhcyBgMWAgYnkgZGVmYXVsdFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPjEyOHB4Jykge31cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIEBtZWRpYSAobWluLXdpZHRoOiAxMjlweCkge31cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgZW1zIGlzIGRlZmluZWQgYXMgYDAuMDFgIGJ5IGRlZmF1bHRcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz4yMGVtJykge31cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIEBtZWRpYSAobWluLXdpZHRoOiAyMC4wMWVtKSB7fVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciByZW1zIGlzIGRlZmluZWQgYXMgYDAuMWAgYnkgZGVmYXVsdCwgdG8gYmUgdXNlZCB3aXRoIGBmb250LXNpemU6IDYyLjUlO2Bcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz4yLjByZW0nKSB7fVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IDIuMXJlbSkge31cbi8vL1xuJHVuaXQtaW50ZXJ2YWxzOiAoXG4gICdweCc6IDEsXG4gICdlbSc6IDAuMDEsXG4gICdyZW0nOiAwLjEsXG4gICcnOiAwLFxuKSAhZGVmYXVsdDtcblxuLy8vXG4vLy8gRGVmaW5lcyB3aGV0aGVyIHN1cHBvcnQgZm9yIG1lZGlhIHF1ZXJpZXMgaXMgYXZhaWxhYmxlLCB1c2VmdWwgZm9yIGNyZWF0aW5nIHNlcGFyYXRlIHN0eWxlc2hlZXRzXG4vLy8gZm9yIGJyb3dzZXJzIHRoYXQgZG9uJ3Qgc3VwcG9ydCBtZWRpYSBxdWVyaWVzLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIERpc2FibGVzIHN1cHBvcnQgZm9yIG1lZGlhIHF1ZXJpZXNcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgLmZvbyB7XG4vLy8gICAgY29sb3I6IHRvbWF0bztcbi8vLyAgfVxuLy8vXG4kaW0tbWVkaWEtc3VwcG9ydDogdHJ1ZSAhZGVmYXVsdDtcblxuLy8vXG4vLy8gU2VsZWN0cyB3aGljaCBicmVha3BvaW50IHRvIGVtdWxhdGUgd2hlbiBzdXBwb3J0IGZvciBtZWRpYSBxdWVyaWVzIGlzIGRpc2FibGVkLiBNZWRpYSBxdWVyaWVzIHRoYXQgc3RhcnQgYXQgb3Jcbi8vLyBpbnRlcmNlcHQgdGhlIGJyZWFrcG9pbnQgd2lsbCBiZSBkaXNwbGF5ZWQsIGFueSBvdGhlcnMgd2lsbCBiZSBpZ25vcmVkLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBzaG93IGJlY2F1c2UgaXQgaW50ZXJjZXB0cyB0aGUgc3RhdGljIGJyZWFrcG9pbnRcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgLmZvbyB7XG4vLy8gICAgY29sb3I6IHRvbWF0bztcbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBOT1Qgc2hvdyBiZWNhdXNlIGl0IGRvZXMgbm90IGludGVyY2VwdCB0aGUgZGVza3RvcCBicmVha3BvaW50XG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICd0YWJsZXQnO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj1kZXNrdG9wJykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBObyBvdXRwdXQgKi9cbi8vL1xuJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJyAhZGVmYXVsdDtcblxuLy8vXG4vLy8gU2VsZWN0cyB3aGljaCBtZWRpYSBleHByZXNzaW9ucyBhcmUgYWxsb3dlZCBpbiBhbiBleHByZXNzaW9uIGZvciBpdCB0byBiZSB1c2VkIHdoZW4gbWVkaWEgcXVlcmllc1xuLy8vIGFyZSBub3Qgc3VwcG9ydGVkLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBzaG93IGJlY2F1c2UgaXQgaW50ZXJjZXB0cyB0aGUgc3RhdGljIGJyZWFrcG9pbnQgYW5kIGNvbnRhaW5zIG9ubHkgYWNjZXB0ZWQgbWVkaWEgZXhwcmVzc2lvbnNcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnO1xuLy8vICAkaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJyk7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcsICdzY3JlZW4nKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gICAuZm9vIHtcbi8vLyAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgTk9UIHNob3cgYmVjYXVzZSBpdCBpbnRlcmNlcHRzIHRoZSBzdGF0aWMgYnJlYWtwb2ludCBidXQgY29udGFpbnMgYSBtZWRpYSBleHByZXNzaW9uIHRoYXQgaXMgbm90IGFjY2VwdGVkXG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJztcbi8vLyAgJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbicpO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnLCAncmV0aW5hMngnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIE5vIG91dHB1dCAqL1xuLy8vXG4kaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJywgJ3BvcnRyYWl0JywgJ2xhbmRzY2FwZScpICFkZWZhdWx0O1xuXG4vLy8vXG4vLy8gQ3Jvc3MtZW5naW5lIGxvZ2dpbmcgZW5naW5lXG4vLy8gQGF1dGhvciBLaXR0eSBHaXJhdWRlbFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vL1xuXG4vLy9cbi8vLyBMb2cgYSBtZXNzYWdlIGVpdGhlciB3aXRoIGBAZXJyb3JgIGlmIHN1cHBvcnRlZFxuLy8vIGVsc2Ugd2l0aCBgQHdhcm5gLCB1c2luZyBgZmVhdHVyZS1leGlzdHMoJ2F0LWVycm9yJylgXG4vLy8gdG8gZGV0ZWN0IHN1cHBvcnQuXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG1lc3NhZ2UgLSBNZXNzYWdlIHRvIGxvZ1xuLy8vXG5AZnVuY3Rpb24gaW0tbG9nKCRtZXNzYWdlKSB7XG4gIEBpZiBtZXRhLmZlYXR1cmUtZXhpc3RzKCdhdC1lcnJvcicpIHtcbiAgICBAZXJyb3IgJG1lc3NhZ2U7XG4gIH0gQGVsc2Uge1xuICAgIEB3YXJuICRtZXNzYWdlO1xuICAgICRfOiBub29wKCk7XG4gIH1cblxuICBAcmV0dXJuICRtZXNzYWdlO1xufVxuXG4vLy9cbi8vLyBXcmFwcGVyIG1peGluIGZvciB0aGUgbG9nIGZ1bmN0aW9uIHNvIGl0IGNhbiBiZSB1c2VkIHdpdGggYSBtb3JlIGZyaWVuZGx5XG4vLy8gQVBJIHRoYW4gYEBpZiBpbS1sb2coJy4uJykge31gIG9yIGAkXzogaW0tbG9nKCcuLicpYC4gQmFzaWNhbGx5LCB1c2UgdGhlIGZ1bmN0aW9uXG4vLy8gd2l0aGluIGZ1bmN0aW9ucyBiZWNhdXNlIGl0IGlzIG5vdCBwb3NzaWJsZSB0byBpbmNsdWRlIGEgbWl4aW4gaW4gYSBmdW5jdGlvblxuLy8vIGFuZCB1c2UgdGhlIG1peGluIGV2ZXJ5d2hlcmUgZWxzZSBiZWNhdXNlIGl0J3MgbXVjaCBtb3JlIGVsZWdhbnQuXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG1lc3NhZ2UgLSBNZXNzYWdlIHRvIGxvZ1xuLy8vXG5AbWl4aW4gbG9nKCRtZXNzYWdlKSB7XG4gIEBpZiBpbS1sb2coJG1lc3NhZ2UpIHtcbiAgfVxufVxuXG4vLy9cbi8vLyBGdW5jdGlvbiB3aXRoIG5vIGBAcmV0dXJuYCBjYWxsZWQgbmV4dCB0byBgQHdhcm5gIGluIFNhc3MgMy4zXG4vLy8gdG8gdHJpZ2dlciBhIGNvbXBpbGluZyBlcnJvciBhbmQgc3RvcCB0aGUgcHJvY2Vzcy5cbi8vL1xuQGZ1bmN0aW9uIG5vb3AoKSB7XG59XG5cbi8vL1xuLy8vIERldGVybWluZXMgd2hldGhlciBhIGxpc3Qgb2YgY29uZGl0aW9ucyBpcyBpbnRlcmNlcHRlZCBieSB0aGUgc3RhdGljIGJyZWFrcG9pbnQuXG4vLy9cbi8vLyBAcGFyYW0ge0FyZ2xpc3R9ICAgJGNvbmRpdGlvbnMgIC0gTWVkaWEgcXVlcnkgY29uZGl0aW9uc1xuLy8vXG4vLy8gQHJldHVybiB7Qm9vbGVhbn0gLSBSZXR1cm5zIHRydWUgaWYgdGhlIGNvbmRpdGlvbnMgYXJlIGludGVyY2VwdGVkIGJ5IHRoZSBzdGF0aWMgYnJlYWtwb2ludFxuLy8vXG5AZnVuY3Rpb24gaW0taW50ZXJjZXB0cy1zdGF0aWMtYnJlYWtwb2ludCgkY29uZGl0aW9ucy4uLikge1xuICAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZTogbWFwLmdldCgkYnJlYWtwb2ludHMsICRpbS1uby1tZWRpYS1icmVha3BvaW50KTtcblxuICBAaWYgbm90ICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlIHtcbiAgICBAaWYgaW0tbG9nKCdgI3skaW0tbm8tbWVkaWEtYnJlYWtwb2ludH1gIGlzIG5vdCBhIHZhbGlkIGJyZWFrcG9pbnQuJykge1xuICAgIH1cbiAgfVxuXG4gIEBlYWNoICRjb25kaXRpb24gaW4gJGNvbmRpdGlvbnMge1xuICAgIEBpZiBub3QgbWFwLmhhcy1rZXkoJG1lZGlhLWV4cHJlc3Npb25zLCAkY29uZGl0aW9uKSB7XG4gICAgICAkb3BlcmF0b3I6IGdldC1leHByZXNzaW9uLW9wZXJhdG9yKCRjb25kaXRpb24pO1xuICAgICAgJHByZWZpeDogZ2V0LWV4cHJlc3Npb24tcHJlZml4KCRvcGVyYXRvcik7XG4gICAgICAkdmFsdWU6IGdldC1leHByZXNzaW9uLXZhbHVlKCRjb25kaXRpb24sICRvcGVyYXRvcik7XG5cbiAgICAgIEBpZiAoJHByZWZpeCA9PSAnbWF4JyBhbmQgJHZhbHVlIDw9ICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlKSBvclxuICAgICAgICAoJHByZWZpeCA9PSAnbWluJyBhbmQgJHZhbHVlID4gJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWUpXG4gICAgICB7XG4gICAgICAgIEByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfSBAZWxzZSBpZiBub3QgbGlzdC5pbmRleCgkaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnMsICRjb25kaXRpb24pIHtcbiAgICAgIEByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiB0cnVlO1xufVxuXG4vLy8vXG4vLy8gUGFyc2luZyBlbmdpbmVcbi8vLyBAYXV0aG9yIEtpdHR5IEdpcmF1ZGVsXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8vXG5cbi8vL1xuLy8vIEdldCBvcGVyYXRvciBvZiBhbiBleHByZXNzaW9uXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIGV4dHJhY3Qgb3BlcmF0b3IgZnJvbVxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIEFueSBvZiBgPj1gLCBgPmAsIGA8PWAsIGA8YCwgYOKJpWAsIGDiiaRgXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi1vcGVyYXRvcigkZXhwcmVzc2lvbikge1xuICBAZWFjaCAkb3BlcmF0b3IgaW4gKCc+PScsICc+JywgJzw9JywgJzwnLCAn4omlJywgJ+KJpCcpIHtcbiAgICBAaWYgc3RyaW5nLmluZGV4KCRleHByZXNzaW9uLCAkb3BlcmF0b3IpIHtcbiAgICAgIEByZXR1cm4gJG9wZXJhdG9yO1xuICAgIH1cbiAgfVxuXG4gIC8vIEl0IGlzIG5vdCBwb3NzaWJsZSB0byBpbmNsdWRlIGEgbWl4aW4gaW5zaWRlIGEgZnVuY3Rpb24sIHNvIHdlIGhhdmUgdG9cbiAgLy8gcmVseSBvbiB0aGUgYGltLWxvZyguLilgIGZ1bmN0aW9uIHJhdGhlciB0aGFuIHRoZSBgbG9nKC4uKWAgbWl4aW4uIEJlY2F1c2VcbiAgLy8gZnVuY3Rpb25zIGNhbm5vdCBiZSBjYWxsZWQgYW55d2hlcmUgaW4gU2Fzcywgd2UgbmVlZCB0byBoYWNrIHRoZSBjYWxsIGluXG4gIC8vIGEgZHVtbXkgdmFyaWFibGUsIHN1Y2ggYXMgYCRfYC4gSWYgYW55Ym9keSBldmVyIHJhaXNlIGEgc2NvcGluZyBpc3N1ZSB3aXRoXG4gIC8vIFNhc3MgMy4zLCBjaGFuZ2UgdGhpcyBsaW5lIGluIGBAaWYgaW0tbG9nKC4uKSB7fWAgaW5zdGVhZC5cbiAgJF86IGltLWxvZygnTm8gb3BlcmF0b3IgZm91bmQgaW4gYCN7JGV4cHJlc3Npb259YC4nKTtcbn1cblxuLy8vXG4vLy8gR2V0IGRpbWVuc2lvbiBvZiBhbiBleHByZXNzaW9uLCBiYXNlZCBvbiBhIGZvdW5kIG9wZXJhdG9yXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIGV4dHJhY3QgZGltZW5zaW9uIGZyb21cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG9wZXJhdG9yIC0gT3BlcmF0b3IgZnJvbSBgJGV4cHJlc3Npb25gXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gYHdpZHRoYCBvciBgaGVpZ2h0YCAob3IgcG90ZW50aWFsbHkgYW55dGhpbmcgZWxzZSlcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLWRpbWVuc2lvbigkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKSB7XG4gICRvcGVyYXRvci1pbmRleDogc3RyaW5nLmluZGV4KCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuICAkcGFyc2VkLWRpbWVuc2lvbjogc3RyaW5nLnNsaWNlKCRleHByZXNzaW9uLCAwLCAkb3BlcmF0b3ItaW5kZXggLSAxKTtcbiAgJGRpbWVuc2lvbjogJ3dpZHRoJztcblxuICBAaWYgc3RyaW5nLmxlbmd0aCgkcGFyc2VkLWRpbWVuc2lvbikgPiAwIHtcbiAgICAkZGltZW5zaW9uOiAkcGFyc2VkLWRpbWVuc2lvbjtcbiAgfVxuXG4gIEByZXR1cm4gJGRpbWVuc2lvbjtcbn1cblxuLy8vXG4vLy8gR2V0IGRpbWVuc2lvbiBwcmVmaXggYmFzZWQgb24gYW4gb3BlcmF0b3Jcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkb3BlcmF0b3IgLSBPcGVyYXRvclxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIGBtaW5gIG9yIGBtYXhgXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi1wcmVmaXgoJG9wZXJhdG9yKSB7XG4gIEByZXR1cm4gaWYobGlzdC5pbmRleCgoJzwnLCAnPD0nLCAn4omkJyksICRvcGVyYXRvciksICdtYXgnLCAnbWluJyk7XG59XG5cbi8vL1xuLy8vIEdldCB2YWx1ZSBvZiBhbiBleHByZXNzaW9uLCBiYXNlZCBvbiBhIGZvdW5kIG9wZXJhdG9yXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIGV4dHJhY3QgdmFsdWUgZnJvbVxuLy8vIEBwYXJhbSB7U3RyaW5nfSAkb3BlcmF0b3IgLSBPcGVyYXRvciBmcm9tIGAkZXhwcmVzc2lvbmBcbi8vL1xuLy8vIEByZXR1cm4ge051bWJlcn0gLSBBIG51bWVyaWMgdmFsdWVcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLXZhbHVlKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpIHtcbiAgJG9wZXJhdG9yLWluZGV4OiBzdHJpbmcuaW5kZXgoJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG4gICR2YWx1ZTogc3RyaW5nLnNsaWNlKCRleHByZXNzaW9uLCAkb3BlcmF0b3ItaW5kZXggKyBzdHJpbmcubGVuZ3RoKCRvcGVyYXRvcikpO1xuXG4gIEBpZiBtYXAuaGFzLWtleSgkYnJlYWtwb2ludHMsICR2YWx1ZSkge1xuICAgICR2YWx1ZTogbWFwLmdldCgkYnJlYWtwb2ludHMsICR2YWx1ZSk7XG4gIH0gQGVsc2Uge1xuICAgICR2YWx1ZTogdG8tbnVtYmVyKCR2YWx1ZSk7XG4gIH1cblxuICAkaW50ZXJ2YWw6IG1hcC5nZXQoJHVuaXQtaW50ZXJ2YWxzLCBtYXRoLnVuaXQoJHZhbHVlKSk7XG5cbiAgQGlmIG5vdCAkaW50ZXJ2YWwge1xuICAgIC8vIEl0IGlzIG5vdCBwb3NzaWJsZSB0byBpbmNsdWRlIGEgbWl4aW4gaW5zaWRlIGEgZnVuY3Rpb24sIHNvIHdlIGhhdmUgdG9cbiAgICAvLyByZWx5IG9uIHRoZSBgaW0tbG9nKC4uKWAgZnVuY3Rpb24gcmF0aGVyIHRoYW4gdGhlIGBsb2coLi4pYCBtaXhpbi4gQmVjYXVzZVxuICAgIC8vIGZ1bmN0aW9ucyBjYW5ub3QgYmUgY2FsbGVkIGFueXdoZXJlIGluIFNhc3MsIHdlIG5lZWQgdG8gaGFjayB0aGUgY2FsbCBpblxuICAgIC8vIGEgZHVtbXkgdmFyaWFibGUsIHN1Y2ggYXMgYCRfYC4gSWYgYW55Ym9keSBldmVyIHJhaXNlIGEgc2NvcGluZyBpc3N1ZSB3aXRoXG4gICAgLy8gU2FzcyAzLjMsIGNoYW5nZSB0aGlzIGxpbmUgaW4gYEBpZiBpbS1sb2coLi4pIHt9YCBpbnN0ZWFkLlxuICAgICRfOiBpbS1sb2coJ1Vua25vd24gdW5pdCBgI3ttYXRoLnVuaXQoJHZhbHVlKX1gLicpO1xuICB9XG5cbiAgQGlmICRvcGVyYXRvciA9PSAnPicge1xuICAgICR2YWx1ZTogJHZhbHVlICsgJGludGVydmFsO1xuICB9IEBlbHNlIGlmICRvcGVyYXRvciA9PSAnPCcge1xuICAgICR2YWx1ZTogJHZhbHVlIC0gJGludGVydmFsO1xuICB9XG5cbiAgQHJldHVybiAkdmFsdWU7XG59XG5cbi8vL1xuLy8vIFBhcnNlIGFuIGV4cHJlc3Npb24gdG8gcmV0dXJuIGEgdmFsaWQgbWVkaWEtcXVlcnkgZXhwcmVzc2lvblxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBwYXJzZVxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIFZhbGlkIG1lZGlhIHF1ZXJ5XG4vLy9cbkBmdW5jdGlvbiBwYXJzZS1leHByZXNzaW9uKCRleHByZXNzaW9uKSB7XG4gIC8vIElmIGl0IGlzIHBhcnQgb2YgJG1lZGlhLWV4cHJlc3Npb25zLCBpdCBoYXMgbm8gb3BlcmF0b3JcbiAgLy8gdGhlbiB0aGVyZSBpcyBubyBuZWVkIHRvIGdvIGFueSBmdXJ0aGVyLCBqdXN0IHJldHVybiB0aGUgdmFsdWVcbiAgQGlmIG1hcC5oYXMta2V5KCRtZWRpYS1leHByZXNzaW9ucywgJGV4cHJlc3Npb24pIHtcbiAgICBAcmV0dXJuIG1hcC5nZXQoJG1lZGlhLWV4cHJlc3Npb25zLCAkZXhwcmVzc2lvbik7XG4gIH1cblxuICAkb3BlcmF0b3I6IGdldC1leHByZXNzaW9uLW9wZXJhdG9yKCRleHByZXNzaW9uKTtcbiAgJGRpbWVuc2lvbjogZ2V0LWV4cHJlc3Npb24tZGltZW5zaW9uKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuICAkcHJlZml4OiBnZXQtZXhwcmVzc2lvbi1wcmVmaXgoJG9wZXJhdG9yKTtcbiAgJHZhbHVlOiBnZXQtZXhwcmVzc2lvbi12YWx1ZSgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcblxuICBAcmV0dXJuICcoI3skcHJlZml4fS0jeyRkaW1lbnNpb259OiAjeyR2YWx1ZX0pJztcbn1cblxuLy8vXG4vLy8gU2xpY2UgYCRsaXN0YCBiZXR3ZWVuIGAkc3RhcnRgIGFuZCBgJGVuZGAgaW5kZXhlc1xuLy8vXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy9cbi8vLyBAcGFyYW0ge0xpc3R9ICRsaXN0IC0gTGlzdCB0byBzbGljZVxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkc3RhcnQgWzFdIC0gU3RhcnQgaW5kZXhcbi8vLyBAcGFyYW0ge051bWJlcn0gJGVuZCBbbGVuZ3RoKCRsaXN0KV0gLSBFbmQgaW5kZXhcbi8vL1xuLy8vIEByZXR1cm4ge0xpc3R9IFNsaWNlZCBsaXN0XG4vLy9cbkBmdW5jdGlvbiBzbGljZSgkbGlzdCwgJHN0YXJ0OiAxLCAkZW5kOiBsaXN0Lmxlbmd0aCgkbGlzdCkpIHtcbiAgQGlmIGxpc3QubGVuZ3RoKCRsaXN0KSA8IDEgb3IgJHN0YXJ0ID4gJGVuZCB7XG4gICAgQHJldHVybiAoKTtcbiAgfVxuXG4gICRyZXN1bHQ6ICgpO1xuXG4gIEBmb3IgJGkgZnJvbSAkc3RhcnQgdGhyb3VnaCAkZW5kIHtcbiAgICAkcmVzdWx0OiBsaXN0LmFwcGVuZCgkcmVzdWx0LCBsaXN0Lm50aCgkbGlzdCwgJGkpLCBjb21tYSk7XG4gIH1cblxuICBAcmV0dXJuICRyZXN1bHQ7XG59XG5cbi8vLy9cbi8vLyBTdHJpbmcgdG8gbnVtYmVyIGNvbnZlcnRlclxuLy8vIEBhdXRob3IgS2l0dHkgR2lyYXVkZWxcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLy9cblxuLy8vXG4vLy8gQ2FzdHMgYSBzdHJpbmcgaW50byBhIG51bWJlclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmcgfCBOdW1iZXJ9ICR2YWx1ZSAtIFZhbHVlIHRvIGJlIHBhcnNlZFxuLy8vXG4vLy8gQHJldHVybiB7TnVtYmVyfVxuLy8vXG5cbkBmdW5jdGlvbiB0by1udW1iZXIoJHZhbHVlKSB7XG4gIEBpZiBtZXRhLnR5cGUtb2YoJHZhbHVlKSA9PSAnbnVtYmVyJyB7XG4gICAgQHJldHVybiAkdmFsdWU7XG4gIH0gQGVsc2UgaWYgbWV0YS50eXBlLW9mKCR2YWx1ZSkgIT0gJ3N0cmluZycge1xuICAgICRfOiBpbS1sb2coJ1ZhbHVlIGZvciBgdG8tbnVtYmVyYCBzaG91bGQgYmUgYSBudW1iZXIgb3IgYSBzdHJpbmcuJyk7XG4gIH1cblxuICAkZmlyc3QtY2hhcmFjdGVyOiBzdHJpbmcuc2xpY2UoJHZhbHVlLCAxLCAxKTtcbiAgJHJlc3VsdDogMDtcbiAgJGRpZ2l0czogMDtcbiAgJG1pbnVzOiAoJGZpcnN0LWNoYXJhY3RlciA9PSAnLScpO1xuICAkbnVtYmVyczogKFxuICAgICcwJzogMCxcbiAgICAnMSc6IDEsXG4gICAgJzInOiAyLFxuICAgICczJzogMyxcbiAgICAnNCc6IDQsXG4gICAgJzUnOiA1LFxuICAgICc2JzogNixcbiAgICAnNyc6IDcsXG4gICAgJzgnOiA4LFxuICAgICc5JzogOSxcbiAgKTtcblxuICAvLyBSZW1vdmUgKy8tIHNpZ24gaWYgcHJlc2VudCBhdCBmaXJzdCBjaGFyYWN0ZXJcbiAgQGlmICgkZmlyc3QtY2hhcmFjdGVyID09ICcrJyBvciAkZmlyc3QtY2hhcmFjdGVyID09ICctJykge1xuICAgICR2YWx1ZTogc3RyaW5nLnNsaWNlKCR2YWx1ZSwgMik7XG4gIH1cblxuICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIHN0cmluZy5sZW5ndGgoJHZhbHVlKSB7XG4gICAgJGNoYXJhY3Rlcjogc3RyaW5nLnNsaWNlKCR2YWx1ZSwgJGksICRpKTtcblxuICAgIEBpZiBub3QobGlzdC5pbmRleChtYXAua2V5cygkbnVtYmVycyksICRjaGFyYWN0ZXIpIG9yICRjaGFyYWN0ZXIgPT0gJy4nKSB7XG4gICAgICBAcmV0dXJuIHRvLWxlbmd0aChpZigkbWludXMsIC0kcmVzdWx0LCAkcmVzdWx0KSwgc3RyaW5nLnNsaWNlKCR2YWx1ZSwgJGkpKTtcbiAgICB9XG5cbiAgICBAaWYgJGNoYXJhY3RlciA9PSAnLicge1xuICAgICAgJGRpZ2l0czogMTtcbiAgICB9IEBlbHNlIGlmICRkaWdpdHMgPT0gMCB7XG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICogMTAgKyBtYXAuZ2V0KCRudW1iZXJzLCAkY2hhcmFjdGVyKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRkaWdpdHM6ICRkaWdpdHMgKiAxMDtcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKyBtYXRoLmRpdihtYXAuZ2V0KCRudW1iZXJzLCAkY2hhcmFjdGVyKSwgJGRpZ2l0cyk7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiBpZigkbWludXMsIC0kcmVzdWx0LCAkcmVzdWx0KTtcbn1cblxuLy8vXG4vLy8gQWRkIGAkdW5pdGAgdG8gYCR2YWx1ZWBcbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkdmFsdWUgLSBWYWx1ZSB0byBhZGQgdW5pdCB0b1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkdW5pdCAtIFN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgdW5pdFxuLy8vXG4vLy8gQHJldHVybiB7TnVtYmVyfSAtIGAkdmFsdWVgIGV4cHJlc3NlZCBpbiBgJHVuaXRgXG4vLy9cbkBmdW5jdGlvbiB0by1sZW5ndGgoJHZhbHVlLCAkdW5pdCkge1xuICAkdW5pdHM6IChcbiAgICAncHgnOiAxcHgsXG4gICAgJ2NtJzogMWNtLFxuICAgICdtbSc6IDFtbSxcbiAgICAnJSc6IDElLFxuICAgICdjaCc6IDFjaCxcbiAgICAncGMnOiAxcGMsXG4gICAgJ2luJzogMWluLFxuICAgICdlbSc6IDFlbSxcbiAgICAncmVtJzogMXJlbSxcbiAgICAncHQnOiAxcHQsXG4gICAgJ2V4JzogMWV4LFxuICAgICd2dyc6IDF2dyxcbiAgICAndmgnOiAxdmgsXG4gICAgJ3ZtaW4nOiAxdm1pbixcbiAgICAndm1heCc6IDF2bWF4LFxuICApO1xuXG4gIEBpZiBub3QgbGlzdC5pbmRleChtYXAua2V5cygkdW5pdHMpLCAkdW5pdCkge1xuICAgICRfOiBpbS1sb2coJ0ludmFsaWQgdW5pdCBgI3skdW5pdH1gLicpO1xuICB9XG5cbiAgQHJldHVybiAkdmFsdWUgKiBtYXAuZ2V0KCR1bml0cywgJHVuaXQpO1xufVxuXG4vLy9cbi8vLyBUaGlzIG1peGluIGFpbXMgYXQgcmVkZWZpbmluZyB0aGUgY29uZmlndXJhdGlvbiBqdXN0IGZvciB0aGUgc2NvcGUgb2Zcbi8vLyB0aGUgY2FsbC4gSXQgaXMgaGVscGZ1bCB3aGVuIGhhdmluZyBhIGNvbXBvbmVudCBuZWVkaW5nIGFuIGV4dGVuZGVkXG4vLy8gY29uZmlndXJhdGlvbiBzdWNoIGFzIGN1c3RvbSBicmVha3BvaW50cyAocmVmZXJyZWQgdG8gYXMgdHdlYWtwb2ludHMpXG4vLy8gZm9yIGluc3RhbmNlLlxuLy8vXG4vLy8gQGF1dGhvciBLaXR0eSBHaXJhdWRlbFxuLy8vXG4vLy8gQHBhcmFtIHtNYXB9ICR0d2Vha3BvaW50cyBbKCldIC0gTWFwIG9mIHR3ZWFrcG9pbnRzIHRvIGJlIG1lcmdlZCB3aXRoIGAkYnJlYWtwb2ludHNgXG4vLy8gQHBhcmFtIHtNYXB9ICR0d2Vhay1tZWRpYS1leHByZXNzaW9ucyBbKCldIC0gTWFwIG9mIHR3ZWFrZWQgbWVkaWEgZXhwcmVzc2lvbnMgdG8gYmUgbWVyZ2VkIHdpdGggYCRtZWRpYS1leHByZXNzaW9uYFxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEV4dGVuZCB0aGUgZ2xvYmFsIGJyZWFrcG9pbnRzIHdpdGggYSB0d2Vha3BvaW50XG4vLy8gIEBpbmNsdWRlIG1lZGlhLWNvbnRleHQoKCdjdXN0b20nOiA2NzhweCkpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIEBpbmNsdWRlIG1lZGlhKCc+cGhvbmUnLCAnPD1jdXN0b20nKSB7XG4vLy8gICAgICAgLy8gLi4uXG4vLy8gICAgICB9XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRXh0ZW5kIHRoZSBnbG9iYWwgbWVkaWEgZXhwcmVzc2lvbnMgd2l0aCBhIGN1c3RvbSBvbmVcbi8vLyAgQGluY2x1ZGUgbWVkaWEtY29udGV4dCgkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnM6ICgnYWxsJzogJ2FsbCcpKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBAaW5jbHVkZSBtZWRpYSgnYWxsJywgJz5waG9uZScpIHtcbi8vLyAgICAgICAvLyAuLi5cbi8vLyAgICAgIH1cbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBFeHRlbmQgYm90aCBjb25maWd1cmF0aW9uIG1hcHNcbi8vLyAgQGluY2x1ZGUgbWVkaWEtY29udGV4dCgoJ2N1c3RvbSc6IDY3OHB4KSwgKCdhbGwnOiAnYWxsJykpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIEBpbmNsdWRlIG1lZGlhKCdhbGwnLCAnPnBob25lJywgJzw9Y3VzdG9tJykge1xuLy8vICAgICAgIC8vIC4uLlxuLy8vICAgICAgfVxuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG5AbWl4aW4gbWVkaWEtY29udGV4dCgkdHdlYWtwb2ludHM6ICgpLCAkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnM6ICgpKSB7XG4gIC8vIFNhdmUgZ2xvYmFsIGNvbmZpZ3VyYXRpb25cbiAgJGdsb2JhbC1icmVha3BvaW50czogJGJyZWFrcG9pbnRzO1xuICAkZ2xvYmFsLW1lZGlhLWV4cHJlc3Npb25zOiAkbWVkaWEtZXhwcmVzc2lvbnM7XG5cbiAgLy8gVXBkYXRlIGdsb2JhbCBjb25maWd1cmF0aW9uXG4gICRicmVha3BvaW50czogbWFwLm1lcmdlKCRicmVha3BvaW50cywgJHR3ZWFrcG9pbnRzKSAhZ2xvYmFsO1xuICAkbWVkaWEtZXhwcmVzc2lvbnM6IG1hcC5tZXJnZSgkbWVkaWEtZXhwcmVzc2lvbnMsICR0d2Vhay1tZWRpYS1leHByZXNzaW9ucykgIWdsb2JhbDtcblxuICBAY29udGVudDtcblxuICAvLyBSZXN0b3JlIGdsb2JhbCBjb25maWd1cmF0aW9uXG4gICRicmVha3BvaW50czogJGdsb2JhbC1icmVha3BvaW50cyAhZ2xvYmFsO1xuICAkbWVkaWEtZXhwcmVzc2lvbnM6ICRnbG9iYWwtbWVkaWEtZXhwcmVzc2lvbnMgIWdsb2JhbDtcbn1cblxuLy8vL1xuLy8vIGluY2x1ZGUtbWVkaWEgcHVibGljIGV4cG9zZWQgQVBJXG4vLy8gQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8vXG5cbi8vL1xuLy8vIEdlbmVyYXRlcyBhIG1lZGlhIHF1ZXJ5IGJhc2VkIG9uIGEgbGlzdCBvZiBjb25kaXRpb25zXG4vLy9cbi8vLyBAcGFyYW0ge0FyZ2xpc3R9ICAgJGNvbmRpdGlvbnMgIC0gTWVkaWEgcXVlcnkgY29uZGl0aW9uc1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggYSBzaW5nbGUgc2V0IGJyZWFrcG9pbnRcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz5waG9uZScpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggdHdvIHNldCBicmVha3BvaW50c1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPnBob25lJywgJzw9dGFibGV0JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBjdXN0b20gdmFsdWVzXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PTM1OHB4JywgJzw4NTBweCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggc2V0IGJyZWFrcG9pbnRzIHdpdGggY3VzdG9tIHZhbHVlc1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPmRlc2t0b3AnLCAnPD0xMzUwcHgnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIGEgc3RhdGljIGV4cHJlc3Npb25cbi8vLyAgQGluY2x1ZGUgbWVkaWEoJ3JldGluYTJ4JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gTWl4aW5nIGV2ZXJ5dGhpbmdcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49MzUwcHgnLCAnPHRhYmxldCcsICdyZXRpbmEzeCcpIHsgfVxuLy8vXG5AbWl4aW4gbWVkaWEoJGNvbmRpdGlvbnMuLi4pIHtcbiAgQGlmICgkaW0tbWVkaWEtc3VwcG9ydCBhbmQgbGlzdC5sZW5ndGgoJGNvbmRpdGlvbnMpID09IDApIG9yXG4gICAgKG5vdCAkaW0tbWVkaWEtc3VwcG9ydCBhbmQgaW0taW50ZXJjZXB0cy1zdGF0aWMtYnJlYWtwb2ludCgkY29uZGl0aW9ucy4uLikpXG4gIHtcbiAgICBAY29udGVudDtcbiAgfSBAZWxzZSBpZiAoJGltLW1lZGlhLXN1cHBvcnQgYW5kIGxpc3QubGVuZ3RoKCRjb25kaXRpb25zKSA+IDApIHtcbiAgICBAbWVkaWEgI3tzdHJpbmcudW5xdW90ZShwYXJzZS1leHByZXNzaW9uKGxpc3QubnRoKCRjb25kaXRpb25zLCAxKSkpfSB7XG4gICAgICAvLyBSZWN1cnNpdmUgY2FsbFxuICAgICAgQGluY2x1ZGUgbWVkaWEoc2xpY2UoJGNvbmRpdGlvbnMsIDIpLi4uKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiJXRpdGxlLTIwIHtcbiAgZm9udC1mYW1pbHk6ICRmb250LW1vbnRzZXJyYXQ7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcblxuICBAaW5jbHVkZSBtZWRpYShcIjxwaG9uZVwiKSB7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDRyZW07XG4gIH1cbn1cblxuJXRpdGxlLTMwIHtcbiAgZm9udC1mYW1pbHk6ICRmb250LWdlb3JnZS14O1xuICBmb250LXNpemU6IDNyZW07XG5cbiAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIGZvbnQtc2l6ZTogNS4ycmVtO1xuICB9XG59XG5cbiV0aXRsZS01MCB7XG4gIGZvbnQtZmFtaWx5OiAkZm9udC1nZW9yZ2UteDtcbiAgZm9udC1zaXplOiA1cmVtO1xuICBsaW5lLWhlaWdodDogMTtcbn1cblxuJXRpdGxlLTYwIHtcbiAgZm9udC1mYW1pbHk6ICRmb250LWdlb3JnZS14O1xuICBmb250LXNpemU6IDhyZW07XG59XG5cbiV0aXRsZS0xMDAge1xuICBmb250LWZhbWlseTogJGZvbnQtZ2VvcmdlLXg7XG4gIGZvbnQtc2l6ZTogMTByZW07XG4gIGxpbmUtaGVpZ2h0OiAxO1xuXG4gIEBpbmNsdWRlIG1lZGlhKFwiPHBob25lXCIpIHtcbiAgICBmb250LXNpemU6IDEycmVtO1xuICB9XG59XG5cbiV0aXRsZS0xMjAge1xuICBmb250LWZhbWlseTogJGZvbnQtZ2VvcmdlLXg7XG4gIGZvbnQtc2l6ZTogMTJyZW07XG4gIGxpbmUtaGVpZ2h0OiAwLjgyO1xuXG4gIEBpbmNsdWRlIG1lZGlhKFwiPHBob25lXCIpIHtcbiAgICBmb250LXNpemU6IDE4cmVtO1xuICB9XG59XG5cbiV0aXRsZS0yMDAge1xuICBmb250LWZhbWlseTogJGZvbnQtZ2VvcmdlLXg7XG4gIGZvbnQtc2l6ZTogMjByZW07XG5cbiAgQGluY2x1ZGUgbWVkaWEoXCI8PXBob25lXCIpIHtcbiAgfVxufVxuIiwiLy8gJGNvbG9yLWJyaWdodC1ncmF5OiAjMzczODRjO1xuLy8gJGNvbG9yLWNhZGV0LWJsdWU6ICNiMmI4YzM7XG4vLyAkY29sb3ItY29udGVzc2E6ICNjOTcxNjQ7XG4vLyAkY29sb3ItcXVpY2tzYW5kOiAjYmM5NzhjO1xuLy8gJGNvbG9yLXF1YXJ0ZXItc3BhbmlzaC13aGl0ZTogI2Y5ZjFlNztcblxuJGZvbnQtZ2VvcmdlLXg6IFwiR2VvcmdlIFhcIjtcbiRmb250LXN1aXNzZS1icDogXCJTdWlzc2UgQlBcIjtcbiRmb250LWJsb3dicnVzaDogXCJibG93YnJ1c2hcIjtcbiRmb250LW1vbnRzZXJyYXQ6IFwiTW9udHNlcnJhdFwiO1xuXG4vLyAkZWFzZS1pbi1vdXQ6IGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG4vLyAkZWFzZS1vdXQtZXhwbzogY3ViaWMtYmV6aWVyKDAuMTksIDEsIDAuMjIsIDEpO1xuXG4kei1pbmRleGVzOiAoXCJwcmVsb2FkZXJcIiwgXCJuYXZpZ2F0aW9uXCIsIFwiY29udGVudFwiKTtcbiIsIkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJGZvbnQtYmxvd2JydXNoO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL2Jsb3dicnVzaC5vdGZcIikgZm9ybWF0KFwib3BlbnR5cGVcIiksXG4gICAgdXJsKFwiLi4vZm9udHMvYmxvd2JydXNoLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICRmb250LWdlb3JnZS14O1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL2dlb3JnZS14LXJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksXG4gICAgdXJsKFwiLi4vZm9udHMvZ2VvcmdlLXgtcmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICRmb250LXN1aXNzZS1icDtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9zdWlzc2UtYnAtcmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSxcbiAgICB1cmwoXCIuLi9mb250cy9zdWlzc2UtYnAtcmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICRmb250LXN1aXNzZS1icDtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9zdWlzc2UtYnAtbGlnaHQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksXG4gICAgdXJsKFwiLi4vZm9udHMvc3Vpc3NlLWJwLWxpZ2h0LndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJGZvbnQtc3Vpc3NlLWJwO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL3N1aXNzZS1icC11bHRyYS1saWdodC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSxcbiAgICB1cmwoXCIuLi9mb250cy9zdWlzc2UtYnAtdWx0cmEtbGlnaHQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogMjAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAkZm9udC1tb250c2VycmF0O1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL21vbnRzZXJyYXQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG4iLCIqLFxuKjphZnRlcixcbio6YmVmb3JlIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGN1cnNvcjogbm9uZTtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAvKiBQcmV2ZW50cyB0YXAgaGlnaGxpZ2h0IG9uIGlPUyAqL1xuICAgIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcbiAgICAvKiBQcmV2ZW50cyBjYWxsb3V0IG1lbnUgb24gbG9uZy1wcmVzcyAqL1xufVxuXG5odG1sIHtcbiAgLy8gdGhlIGNvdmVyIGhlcmUgbWl4aW4gaW4gaW50ZW5kZWQgZm9yIGhpZ2hqYWNraW5nIHRoZSBzY3JvbGwgb2YgdGhlIHBhZ2VcbiAgQGV4dGVuZCAlY292ZXI7XG5cbiAgLy8gY29sb3I6ICRjb2xvci1xdWFydGVyLXNwYW5pc2gtd2hpdGU7XG4gIC8vIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1jb250ZXNzYTtcbiAgY3Vyc29yOiBub25lO1xuXG4gIGZvbnQtc2l6ZTogY2FsYyhcbiAgICAxMDB2dyAvIDE5MjAgKiAxMFxuICApOyAvKiBTZXQgYmFzZSBmb250IHNpemUgYnkgdmlld3BvcnQgd2lkdGggZm9yIHN0YW5kYXJkIHJlc29sdXRpb24gKi9cbiAgbGluZS1oZWlnaHQ6IDE7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgXG4gIFxuICBAaW5jbHVkZSBtZWRpYShcIjx0YWJsZXRcIikge1xuICAgICAgIGZvbnQtc2l6ZTogY2FsYygxMDB2dyAvIDEwMjQgKiAxMCk7XG4gICAgICAgLyogQWRqdXN0IGZvbnQgc2l6ZSBmb3IgcGhvbmUgc2NyZWVuIHJlc29sdXRpb25zICovXG4gICAgIH1cbiAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgICAgZm9udC1zaXplOiBjYWxjKDEwMHZ3IC8gNzY4ICogMTApO1xuICAgICAgLyogQWRqdXN0IGZvbnQgc2l6ZSBmb3IgcGhvbmUgc2NyZWVuIHJlc29sdXRpb25zICovXG4gICAgfVxufVxuXG5ib2R5IHtcbiAgQGV4dGVuZCAlY292ZXI7XG4gIGN1cnNvcjogbm9uZTtcblxuICAvLyBmb250LWZhbWlseTogXCJUcmVidWNoZXQgTVNcIiwgc2Fucy1zZXJpZjtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbn1cbi5jb250ZW50e1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5jb250ZW50X19yb3RhdGUsXG4uY29udGVudF9fcmV2ZXJzZSB7XG4gIC8vIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XG5cbiAgQGV4dGVuZCAlY292ZXI7XG4gIC8vIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbn1cblxuLmNvbnRlbnRfX21vdmUge1xuICBAZXh0ZW5kICVjb3ZlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgLy8gd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcbn1cblxuXG4uY3Vyc29yLWRvdCB7XG4gIHdpZHRoOiA1cHg7XG4gIGhlaWdodDogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgbWl4LWJsZW5kLW1vZGU6IGRpZmZlcmVuY2U7XG5cbiAgJi5jdXJzb3Itc2Nyb2xsIHtcbiAgICB3aWR0aDogOHB4O1xuICAgIGhlaWdodDogOHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM4MGZmMDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKDQ1ZGVnKTtcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzgwZmYwMDtcbiAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCAjODBmZjAwO1xuICB9XG59XG5cbi5jdXJzb3Itb3V0bGluZSB7XG4gIHdpZHRoOiAzNXB4O1xuICBoZWlnaHQ6IDM1cHg7XG4gIGJvcmRlcjogM3B4IHNvbGlkIGhzbCg3OCwgMTAwJSwgNDAlKTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcblxuICAmLmN1cnNvci1zY3JvbGwge1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICBjb2xvcjogIzgwZmYwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjJlbTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxMHB4LCAtMTBweCk7XG5cbiAgICAmOjpiZWZvcmUge1xuICAgICAgY29udGVudDogJ1Njcm9sbCc7XG4gICAgfVxuICB9XG5cbiAgJjo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IGF0dHIoZGF0YS1sYWJlbCk7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogLTEwcHg7XG4gICAgbGVmdDogNTBweDtcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBoc2woNzgsIDEwMCUsIDkwJSwgMC42KTtcbiAgICBjb2xvcjogaHNsKDc4LCAxMDAlLCAxNSUpO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB9XG59XG5cbi5pbWFnZS1ob3Zlci5jdXJzb3Itb3V0bGluZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGhzbCg3OCwgMTAwJSwgOTAlLCAwLjYpO1xuICBib3JkZXI6IG5vbmU7XG59XG5cbi5jdXJzb3Itb3V0bGluZS5pbWFnZS1ob3Zlcjo6YWZ0ZXIge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmN1cnNvci1kb3QsXG4uY3Vyc29yLW91dGxpbmUge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgei1pbmRleDogOTk5OTk5O1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuQG1lZGlhKGhvdmVyOiBob3Zlcikge1xuXG4gIC5jdXJzb3ItZG90LFxuICAuY3Vyc29yLW91dGxpbmUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5cbi8qIFBzZXVkby1lbGVtZW50IGZvciB0aGUgbGFiZWwgbmV4dCB0byB0aGUgY3Vyc29yICovXG5cbi8qIFNob3cgdGhlIGxhYmVsIHdoZW4gaG92ZXJpbmcgb3ZlciBhbiBpbWFnZSAqL1xuXG5hIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvdXRsaW5lOiBub25lO1xufVxuY2FudmFzIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi8vIGltZyB7XG4vLyAgIG9wYWNpdHk6IDA7XG4vLyAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyBlYXNlO1xuLy8gICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuXG4vLyAgICYubG9hZGVkIHtcbi8vICAgICBvcGFjaXR5OiAxO1xuLy8gICB9XG4vLyB9XG5cbi5jb250ZW50IHtcbiAgLy8gdGhlIGNvdmVyIG1peGluIGhlcmUgIGluIGludGVuZGVkIGZvciBoaWdoamFja2luZyB0aGUgc2Nyb2xsIG9mIHRoZSBwYWdlXG4gIC8vIEBleHRlbmQgJWNvdmVyO1xufVxuXG5bZGF0YS1hbmltYXRpb249XCJ0aXRsZVwiXSxcbltkYXRhLWFuaW1hdGlvbj1cImxhYmVsXCJdLFxuW2RhdGEtYW5pbWF0aW9uPVwicGFyYWdyYXBoXCJdIHtcbiAgc3BhbiB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgfVxufVxuXG5cblxuLnBhZ2UtdHJhbnNpdGlvbiB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAzMDAwO1xuICBkaXNwbGF5OiBub25lO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcblxuICAmX19sYXllciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICAgIC8vIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG5cbiAgICAmOm50aC1jaGlsZCgxKSB7XG4gICAgICAgICAgICAvLyBiYWNrZ3JvdW5kOiBoc2woOTAsIDEwMCUsIDUwJSk7IC8vIEJyaWdodCBsaW1lICBcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGhzbCg5MCwgMTAwJSwgNTAlKTsgLy8gQnJpZ2h0IGxpbWUgZ3JlZW5cbiAgICAgICAgICAgICAgei1pbmRleDogMzAwMTtcbiAgICB9XG5cbiAgICAmOm50aC1jaGlsZCgyKSB7XG4gICAgICAgICAgICAvLyBiYWNrZ3JvdW5kOiBoc2woOTAsIDEwMCUsIDQwJSk7IC8vIFNsaWdodGx5IGRhcmtlciBsaW1lICBcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGhzbCgyMDAsIDEwMCUsIDUwJSk7IC8vIEJyaWdodCBibHVlXG4gICAgICAgICAgICAgICAgei1pbmRleDogMzAwMjtcbiAgICB9XG5cbiAgICAmOm50aC1jaGlsZCgzKSB7XG4gICAgICAgICAgICAvLyBiYWNrZ3JvdW5kOiBoc2woOTAsIDEwMCUsIDMwJSk7IC8vIEV2ZW4gZGFya2VyIGxpbWUgIFxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogaHNsKDQ1LCAxMDAlLCA1MCUpOyAvLyBCcmlnaHQgeWVsbG93L2dvbGRcbiAgICAgICAgICAgICAgICB6LWluZGV4OiAzMDAzO1xuICAgIH1cblxuICB9XG5cbiAgJi5pcy1hbmltYXRpbmcge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgJi5pcy1hbmltYXRpbmctbmV4dCAucGFnZS10cmFuc2l0aW9uX19sYXllciB7XG4gICAgYW5pbWF0aW9uOiBsYXllci1zbGlkZS1uZXh0LTEgMS41cyBjdWJpYy1iZXppZXIoMC41NTAsIDAuMDU1LCAwLjY3NSwgMC4xOTApIGZvcndhcmRzO1xuXG4gICAgJjpudGgtY2hpbGQoMikge1xuICAgICAgYW5pbWF0aW9uLW5hbWU6IGxheWVyLXNsaWRlLW5leHQtMjtcbiAgICB9XG5cbiAgICAmOm50aC1jaGlsZCgzKSB7XG4gICAgICBhbmltYXRpb24tbmFtZTogbGF5ZXItc2xpZGUtbmV4dC0zO1xuICAgIH1cbiAgfVxufVxuXG4vLyBOZXh0IGRpcmVjdGlvbiBhbmltYXRpb25zXG5Aa2V5ZnJhbWVzIGxheWVyLXNsaWRlLW5leHQtMSB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICB9XG5cbiAgMjUlLFxuICA3NSUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMjE1LCAwLjYxMCwgMC4zNTUsIDEuMDAwKTtcbiAgfVxuXG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMCUsIDAsIDApO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgbGF5ZXItc2xpZGUtbmV4dC0yIHtcblxuICAwJSxcbiAgMTIuNSUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMTAwJSwgMCwgMCk7XG4gIH1cblxuICAzNy41JSxcbiAgNjIuNSUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMjE1LCAwLjYxMCwgMC4zNTUsIDEuMDAwKTtcbiAgfVxuXG4gIDg3LjUlLFxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDAlLCAwLCAwKTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIGxheWVyLXNsaWRlLW5leHQtMyB7XG5cbiAgMCUsXG4gIDI1JSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgxMDAlLCAwLCAwKTtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMS4wMDApO1xuICB9XG5cbiAgNzUlLFxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDAlLCAwLCAwKTtcbiAgfVxufVxuXG4vLyBQcmV2aW91cyBkaXJlY3Rpb24gYW5pbWF0aW9uc1xuLnBhZ2UtdHJhbnNpdGlvbi5pcy1hbmltYXRpbmctcHJldiAucGFnZS10cmFuc2l0aW9uX19sYXllciB7XG4gIGFuaW1hdGlvbjogbGF5ZXItc2xpZGUtcHJldi0xIDEuNXMgY3ViaWMtYmV6aWVyKDAuNTUwLCAwLjA1NSwgMC42NzUsIDAuMTkwKSBmb3J3YXJkcztcblxuICAmOm50aC1jaGlsZCgyKSB7XG4gICAgYW5pbWF0aW9uLW5hbWU6IGxheWVyLXNsaWRlLXByZXYtMjtcbiAgfVxuXG4gICY6bnRoLWNoaWxkKDMpIHtcbiAgICBhbmltYXRpb24tbmFtZTogbGF5ZXItc2xpZGUtcHJldi0zO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgbGF5ZXItc2xpZGUtcHJldi0xIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMCUsIDAsIDApO1xuICB9XG5cbiAgMjUlLFxuICA3NSUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMjE1LCAwLjYxMCwgMC4zNTUsIDEuMDAwKTtcbiAgfVxuXG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMTAwJSwgMCwgMCk7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBsYXllci1zbGlkZS1wcmV2LTIge1xuXG4gIDAlLFxuICAxMi41JSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCk7XG4gIH1cblxuICAzNy41JSxcbiAgNjIuNSUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMjE1LCAwLjYxMCwgMC4zNTUsIDEuMDAwKTtcbiAgfVxuXG4gIDg3LjUlLFxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgbGF5ZXItc2xpZGUtcHJldi0zIHtcblxuICAwJSxcbiAgMjUlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDAlLCAwLCAwKTtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMS4wMDApO1xuICB9XG5cbiAgNzUlLFxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICB9XG59IiwiLnByZWxvYWRlciB7XG4gIEBleHRlbmQgJWNvdmVyO1xuICBAZXh0ZW5kICVjZW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGdhcDogM3JlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gIGNvbG9yOiBoc2woNzgsIDEwMCUsIDQ1JSk7XG4gIHotaW5kZXg6IHooXCJwcmVsb2FkZXJcIik7XG59XG5cbi5vdmVybGF5IHtcbiAgQGV4dGVuZCAlY292ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6IGhzbGEoMCwgMCUsIDAlLCAwLjc1KTtcbiAgei1pbmRleDogNDtcbn1cblxuLnByZWxvYWRlcl9fdGV4dCB7XG4gIGZvbnQtZmFtaWx5OiAkZm9udC1ibG93YnJ1c2g7XG5vcGFjaXR5OiAwO1xuICBmb250LXNpemU6IDYuNXJlbTtcbiAgbWF4LXdpZHRoOiA2NnJlbTtcbiAgei1pbmRleDogNjc3O1xuICB0ZXh0LXNoYWRvdzogMCAwIDUwcHggaHNsYSgwLCAwJSwgMCUsIDAuNCk7XG59XG5cbi5wcmVsb2FkZXJfX251bWJlciB7XG4gIGZvbnQtc2l6ZTogMi41cmVtO1xuICBmb250LXdlaWdodDogOTAwO1xuICB6LWluZGV4OiA2Nzc7XG5cbn1cblxuXG5cbi5wcmVsb2FkZXJfX2FuaW1hdGlvbntcbm9wYWNpdHk6IDA7fVxuXG5cblxuLmZyYW1lIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTsgXG4gIGhlaWdodDogMTAwJTsgXG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgb3BhY2l0eTogMDsgLyogU3RhcnQgd2l0aCBmcmFtZXMgaGlkZGVuICovXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlLWluLW91dDsgLyogU21vb3RoIHRyYW5zaXRpb24gYmV0d2VlbiBmcmFtZXMgKi9cbiAgLy8gd2lsbC1jaGFuZ2U6IG9wYWNpdHk7XG5cblxuICAgaW1nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMjA4KTtcbiAgb3BhY2l0eTogMTtcbiAgaGVpZ2h0OiAxMDAlO1xuXG59XG5cbn1cblxuLmZyYW1lMSAuaW1nMSB7XG4gIHRvcDogMDtcbiAgbGVmdDogNTB2dztcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPHBob25lXCIpIHtcbiAgICBsZWZ0OjIwdndcbiAgfVxuXG59XG4uZnJhbWUxIC5pbWcyIHtcbiAgdG9wOiAwO1xuICByaWdodDogNTB2dztcbiAgICBAaW5jbHVkZSBtZWRpYShcIjxwaG9uZVwiKSB7XG4gICAgcmlnaHQ6MjB2d1xuICB9XG59XG5cbi5mcmFtZTIgLmltZzEge1xuICB0b3A6IDA7XG4gIGxlZnQ6IDUwdnc7XG4gICAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIGxlZnQ6MjB2d1xuICB9XG59XG4uZnJhbWUyIC5pbWcyIHtcbiAgdG9wOiAwO1xuICByaWdodDogNTB2dzsgICAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIHJpZ2h0OjIwdndcbiAgfVxufVxuXG4uZnJhbWUzIC5pbWcxIHtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgbGVmdDogNTB2dztcbiAgd2lkdGg6IDUwMHB4O1xuICBoZWlnaHQ6IDUwMHB4O1xuICBcbn1cbi5mcmFtZTMgLmltZzIge1xuICB0b3A6IDA7XG4gIHJpZ2h0OiA1MHZ3O1xuICAgICAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIHJpZ2h0OjIwdndcbiAgfVxufVxuLmZyYW1lNCAuaW1nMSB7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDUwdnc7XG4gIHdpZHRoOiA0MDBweDtcbiAgaGVpZ2h0OiA0MDBweDtcbiAgei1pbmRleDogNjtcbiAgICAgIEBpbmNsdWRlIG1lZGlhKFwiPHBob25lXCIpIHtcbiAgICByaWdodDoyMHZ3XG4gIH1cbn1cblxuLmZyYW1lNCAuaW1nMiB7XG4gIHRvcDogMDsgXG4gIHJpZ2h0OiA1MHZ3OyAgICBAaW5jbHVkZSBtZWRpYShcIjxwaG9uZVwiKSB7XG4gICAgcmlnaHQ6MjB2d1xuICB9XG59XG4uZnJhbWU0IC5pbWczIHtcbiAgdG9wOiAwO1xuICBsZWZ0OiA1MHZ3OyAgICBAaW5jbHVkZSBtZWRpYShcIjxwaG9uZVwiKSB7XG4gICAgbGVmdDoyMHZ3XG4gIH1cbn1cblxuLmZyYW1lNSAuaW1nMSB7XG4gIHRvcDogMDtcbiAgbGVmdDogNTB2dzsgICAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIGxlZnQ6MjB2d1xuICB9XG59XG5cbi5mcmFtZTUgLmltZzIge1xuICB0b3A6IDA7XG4gIHJpZ2h0OiA1MHZ3O1xuICAgICAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIHJpZ2h0OjIwdndcbiAgfVxufVxuLmZyYW1lNiAuaW1nMSB7XG4gIHRvcDogMDtcbiAgbGVmdDogNTB2dztcbiAgICAgIEBpbmNsdWRlIG1lZGlhKFwiPHBob25lXCIpIHtcbiAgICBsZWZ0OjIwdndcbiAgfVxufVxuXG4uZnJhbWU2IC5pbWcyIHtcbiAgdG9wOiAwO1xuICByaWdodDogNTB2dztcbiAgICAgIEBpbmNsdWRlIG1lZGlhKFwiPHBob25lXCIpIHtcbiAgICByaWdodDoyMHZ3XG4gIH1cbn1cbi5mcmFtZTYgLmltZzMge1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDUwdnc7XG4gIGhlaWdodDogNjAlO1xuICAgICAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIGxlZnQ6MjB2d1xuICB9XG59XG5cbi5mcmFtZTcgLmltZzEge1xuICB0b3A6IDA7XG4gIGxlZnQ6IDUwdnc7XG4gICAgICBAaW5jbHVkZSBtZWRpYShcIjxwaG9uZVwiKSB7XG4gICAgbGVmdDoyMHZ3XG4gIH1cbn1cblxuLmZyYW1lNyAuaW1nMiB7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDUwdnc7XG4gICAgICBAaW5jbHVkZSBtZWRpYShcIjxwaG9uZVwiKSB7XG4gICAgcmlnaHQ6MjB2d1xuICB9XG59XG4uZnJhbWU3IC5pbWczIHtcbiAgYm90dG9tOiAyMHB4O1xuICBsZWZ0OiA1MHZ3O1xuICBoZWlnaHQ6IDYwJTtcbiAgICAgIEBpbmNsdWRlIG1lZGlhKFwiPHBob25lXCIpIHtcbiAgICBsZWZ0OjIwdndcbiAgfVxufVxuLmZyYW1lNyAuaW1nNCB7XG4gIHRvcDogNDBweDtcbiAgcmlnaHQ6IDUwdnc7XG4gIGhlaWdodDogNTUwcHg7XG4gIHdpZHRoOiA1MDBweDtcbiAgICAgIEBpbmNsdWRlIG1lZGlhKFwiPHBob25lXCIpIHtcbiAgICByaWdodDoyMHZ3XG4gIH1cbn1cbi5mcmFtZTggLmltZzEge1xuICB0b3A6IDA7XG4gIGxlZnQ6IDUwdnc7XG4gICAgICBAaW5jbHVkZSBtZWRpYShcIjxwaG9uZVwiKSB7XG4gICAgbGVmdDoyMHZ3XG4gIH1cbn1cblxuLmZyYW1lOCAuaW1nMiB7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDUwdnc7XG4gICAgICBAaW5jbHVkZSBtZWRpYShcIjxwaG9uZVwiKSB7XG4gICAgcmlnaHQ6MjB2d1xuICB9XG59XG4uZnJhbWU4IC5pbWczIHtcbiAgdG9wOiA0MHB4O1xuICByaWdodDogNTB2dztcbiAgaGVpZ2h0OiA1NTBweDtcbiAgd2lkdGg6IDUwMHB4O1xuICAgICAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIHJpZ2h0OjIwdndcbiAgfVxufVxuXG4uZnJhbWU5IC5pbWcxIHtcbiAgdG9wOiAwO1xuICBsZWZ0OiA1MHZ3O1xuICAgICAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIGxlZnQ6MjB2d1xuICB9XG59XG5cbi5mcmFtZTkgLmltZzIge1xuICB0b3A6IDA7XG4gIHJpZ2h0OiA1MHZ3O1xuICAgICAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIHJpZ2h0OjIwdndcbiAgfVxufVxuLmZyYW1lMTAgLmltZzEge1xuICB0b3A6IDA7XG4gIGxlZnQ6IDUwdnc7XG4gICAgICBAaW5jbHVkZSBtZWRpYShcIjxwaG9uZVwiKSB7XG4gICAgbGVmdDoyMHZ3XG4gIH1cbn1cblxuLmZyYW1lMTAgLmltZzIge1xuICB0b3A6IDA7XG4gIHJpZ2h0OiA1MHZ3O1xuICAgICAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIHJpZ2h0OjIwdndcbiAgfVxufVxuXG4uZnJhbWUxMSAuaW1nMSB7XG4gIHRvcDogMDtcbiAgbGVmdDogNTB2dztcbiAgICAgIEBpbmNsdWRlIG1lZGlhKFwiPHBob25lXCIpIHtcbiAgICBsZWZ0OjIwdndcbiAgfVxufVxuXG4uZnJhbWUxMSAuaW1nMiB7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDUwdnc7XG4gICAgICBAaW5jbHVkZSBtZWRpYShcIjxwaG9uZVwiKSB7XG4gICAgcmlnaHQ6MjB2d1xuICB9XG59XG4uZnJhbWUxMiAuaW1nMSB7XG4gIHRvcDogMDtcbiAgbGVmdDogNTB2dztcbiAgICAgIEBpbmNsdWRlIG1lZGlhKFwiPHBob25lXCIpIHtcbiAgICBsZWZ0OjIwdndcbiAgfVxufVxuXG4uZnJhbWUxMiAuaW1nMiB7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDUwdnc7XG4gICAgICBAaW5jbHVkZSBtZWRpYShcIjxwaG9uZVwiKSB7XG4gICAgcmlnaHQ6MjB2d1xuICB9XG59XG4uZnJhbWUxMiAuaW1nMyB7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDUwdnc7XG4gIGhlaWdodDogNTUwcHg7XG4gIHdpZHRoOiA1MDBweDsgICAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIHJpZ2h0OjIwdndcbiAgfVxufVxuLmZyYW1lMTIgLmltZzQge1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDUwdnc7XG4gIGhlaWdodDogNTUwcHg7XG4gIHdpZHRoOiA1MDBweDsgICAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIGxlZnQ6MjB2d1xuICB9XG59XG5Aa2V5ZnJhbWVzIHN3aXRjaEZyYW1lcyB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9IC8qIEZyYW1lIGlzIHZpc2libGUgKi9cbiAgOC4zMyUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH0gLyogTWFpbnRhaW4gdmlzaWJpbGl0eSAqL1xuICA4LjM0JSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfSAvKiBTdGFydCBmYWRpbmcgb3V0ICovXG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH0gLyogUmVtYWluIGhpZGRlbiAqL1xufVxuXG4uZnJhbWUxIHtcbiAgYW5pbWF0aW9uOiBzd2l0Y2hGcmFtZXMgNnMgaW5maW5pdGUgZWFzZS1pbi1vdXQ7XG59XG4uZnJhbWUyIHtcbiAgYW5pbWF0aW9uOiBzd2l0Y2hGcmFtZXMgNnMgaW5maW5pdGUgZWFzZS1pbi1vdXQ7XG4gIGFuaW1hdGlvbi1kZWxheTogMC41cztcbn1cbi5mcmFtZTMge1xuICBhbmltYXRpb246IHN3aXRjaEZyYW1lcyA2cyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgYW5pbWF0aW9uLWRlbGF5OiAxcztcbn1cbi5mcmFtZTQge1xuICBhbmltYXRpb246IHN3aXRjaEZyYW1lcyA2cyBpbmZpbml0ZSBlYXNlLWluLW91dDtcbiAgYW5pbWF0aW9uLWRlbGF5OiAxLjVzO1xufVxuLmZyYW1lNSB7XG4gIGFuaW1hdGlvbjogc3dpdGNoRnJhbWVzIDZzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICBhbmltYXRpb24tZGVsYXk6IDJzO1xufVxuLmZyYW1lNiB7XG4gIGFuaW1hdGlvbjogc3dpdGNoRnJhbWVzIDZzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICBhbmltYXRpb24tZGVsYXk6IDIuNXM7XG59XG4uZnJhbWU3IHtcbiAgYW5pbWF0aW9uOiBzd2l0Y2hGcmFtZXMgNnMgaW5maW5pdGUgZWFzZS1pbi1vdXQ7XG4gIGFuaW1hdGlvbi1kZWxheTogM3M7XG59XG4uZnJhbWU4IHtcbiAgYW5pbWF0aW9uOiBzd2l0Y2hGcmFtZXMgNnMgaW5maW5pdGUgZWFzZS1pbi1vdXQ7XG4gIGFuaW1hdGlvbi1kZWxheTogMy41cztcbn1cbi5mcmFtZTkge1xuICBhbmltYXRpb246IHN3aXRjaEZyYW1lcyA2cyBpbmZpbml0ZSBlYXNlLWluLW91dCAgIDtcbiAgYW5pbWF0aW9uLWRlbGF5OiA0cztcbn1cbi5mcmFtZTEwIHtcbiAgYW5pbWF0aW9uOiBzd2l0Y2hGcmFtZXMgNnMgaW5maW5pdGUgZWFzZS1pbi1vdXQ7XG4gIGFuaW1hdGlvbi1kZWxheTogNC41cztcbn1cbi5mcmFtZTExIHtcbiAgYW5pbWF0aW9uOiBzd2l0Y2hGcmFtZXMgNnMgaW5maW5pdGUgZWFzZS1pbi1vdXQ7XG4gIGFuaW1hdGlvbi1kZWxheTogNXM7XG59XG4uZnJhbWUxMiB7XG4gIGFuaW1hdGlvbjogc3dpdGNoRnJhbWVzIDZzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICBhbmltYXRpb24tZGVsYXk6IDUuNXM7XG59XG4iLCIubmF2aWdhdGlvbiB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMTAwdmg7XG4gIHotaW5kZXg6IHooXCJuYXZpZ2F0aW9uXCIpO1xufVxuXG4ubmF2aWdhdGlvbl9fb3ZlcmxheSB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgb3BhY2l0eTogMDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHotaW5kZXg6IHooXCJuYXZpZ2F0aW9uXCIpICsgMTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7XG5cbiAgJi5pcy1hY3RpdmUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgcG9pbnRlci1ldmVudHM6IGFsbCAhaW1wb3J0YW50O1xuICB9XG5cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5uYXZpZ2F0aW9uX19idXR0b24ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogNHJlbTtcbiAgcmlnaHQ6IDRyZW07XG4gIHdpZHRoOiA3cmVtO1xuICBoZWlnaHQ6IDdyZW07XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB6LWluZGV4OiB6KFwibmF2aWdhdGlvblwiKSArIDM7XG59XG5cbi5uYXZpZ2F0aW9uX19idXR0b24tY2lyY2xlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuXG4gICY6OmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBoc2woOTAsIDEwMCUsIDUwJSk7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjZzIGN1YmljLWJlemllcigwLjcsIDAsIDAuMiwgMSk7XG4gICAgYm94LXNoYWRvdzogMCAwIDIwcHggcmdiYSgxNDUsIDI1NSwgMCwgMC4yKTtcbiAgfVxuXG4gIC5uYXZpZ2F0aW9uX19idXR0b246aG92ZXIgJjo6YmVmb3JlLFxuICAubmF2aWdhdGlvbl9fYnV0dG9uLmlzLWFjdGl2ZSAmOjpiZWZvcmUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIH1cblxuICBzdmcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG5cbiAgICBjaXJjbGUge1xuICAgICAgZmlsbDogaHNsKDc4IDEwMCUgMTUlIC8gMSk7XG4gICAgICB0cmFuc2l0aW9uOiBmaWxsIDAuM3MgZWFzZTtcbiAgICB9XG4gIH1cblxuICAubmF2aWdhdGlvbl9fYnV0dG9uOmhvdmVyICYsXG4gIC5uYXZpZ2F0aW9uX19idXR0b24uaXMtYWN0aXZlICYge1xuICAgIHN2ZyBjaXJjbGUge1xuICAgICAgZmlsbDogdHJhbnNwYXJlbnQ7XG4gICAgfVxuICB9XG59XG5cbi5uYXZpZ2F0aW9uX19idXR0b24taWNvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHdpZHRoOiAyLjVyZW07XG4gIGhlaWdodDogMi4yNXJlbTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB6LWluZGV4OiAxO1xuXG4gIHNwYW4ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDNweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlcjtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlLCB3aWR0aCAwLjNzIGVhc2UsIG9wYWNpdHkgMC4zcyBlYXNlO1xuXG4gICAgJjpudGgtY2hpbGQoMikge1xuICAgICAgd2lkdGg6IDcwJTtcbiAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIH1cblxuICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyO1xuICAgIH1cblxuICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXI7XG4gICAgfVxuICB9XG5cbiAgLm5hdmlnYXRpb25fX2J1dHRvbjpob3ZlciAmIHNwYW4ge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5uYXZpZ2F0aW9uX19tZW51LXdyYXBwZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1heC13aWR0aDogNDB2dztcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHotaW5kZXg6IHooXCJuYXZpZ2F0aW9uXCIpICsgMjtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5uYXZpZ2F0aW9uX19tZW51LWJhY2tncm91bmQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IGhzbCg3OCAxMDAlIDE1JSAvIDEpO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodCBjZW50ZXI7XG4gIHRyYW5zZm9ybTogc2NhbGVYKDApO1xuICBwb2ludGVyLWV2ZW50czogYWxsO1xuXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgwZGVnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIC4wMykgMXB4LCB0cmFuc3BhcmVudCAxcHgpLFxuICAgIGxpbmVhci1ncmFkaWVudCg5MGRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAuMDMpIDFweCwgdHJhbnNwYXJlbnQgMXB4KTtcbiAgYmFja2dyb3VuZC1zaXplOiAyMHB4IDIwcHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG59XG5cbi5uYXZpZ2F0aW9uX19tZW51IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwb2ludGVyLWV2ZW50czogYWxsO1xuXG4gICY6OmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIC8vIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZyxcbiAgICAvLyAgICAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjAzKSAwJSxcbiAgICAvLyAgICAgdHJhbnNwYXJlbnQgMTAwJSk7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIH1cbn1cblxuLm5hdmlnYXRpb25fX21lbnUtbGlzdCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLm5hdmlnYXRpb25fX21lbnUtbGlzdC1pdGVtIHtcbiAgbWFyZ2luOiA0cmVtIDA7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgycmVtKTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLWxlZnQ6IDNyZW07XG4gIGZvbnQtc2l6ZTogY2FsYyhjbGFtcCgzLjI1ZW0sIDV2dywgNGVtKSAqIC41KTtcblxuICAmOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwi4oCiXCI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIG9wYWNpdHk6IDAuNTtcbiAgICB0b3A6IDE1JTtcbiAgICBmb250LXNpemU6IGNhbGMoY2xhbXAoMy4yNWVtLCA1dncsIDRlbSkgKiAuNSk7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7XG4gIH1cblxuIEBtZWRpYSAoaG92ZXI6IGhvdmVyKSB7XG4gICAmOmhvdmVyOjpiZWZvcmUge1xuICAgICBvcGFjaXR5OiAwLjg7XG4gICB9XG4gfVxuXG5cbiAgYSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC1zaXplOiBjYWxjKGNsYW1wKDMuMjVlbSwgNXZ3LCA0ZW0pKTtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1nZW9yZ2UteDtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOiAtMC4wMmVtO1xuXG4gICAgLy8gRm9yIG5vbi10b3VjaCBkZXZpY2VzIChkZXNrdG9wKVxuICAgICAgQG1lZGlhIChob3ZlcjogaG92ZXIpIHtcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgb3BhY2l0eTogMC44O1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMHB4KTtcbiAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgXG4gIH1cbn0iLCIuZ2FsbGVyeSB7XG4gICAgQGV4dGVuZCAlY292ZXI7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZDogaHNsKDAsIDMlLCAxNCUpO1xuICAgIGNvbG9yOiBcIiMzNzM4NENcIjtcbiAgICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7XG4gICAgc2Nyb2xsYmFyLXdpZHRoOiBub25lO1xuXG4gICAgJjo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgICYubm8tc2Nyb2xsIHtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG5cbiAgICAmX19jb250ZW50IHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIH1cblxuICAgICZfX25hdmlnYXRpb24ge1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgIHotaW5kZXg6IDIwMDA7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICB9XG5cbiAgICAmX19uYXYge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICAgICAgICBtaXgtYmxlbmQtbW9kZTogZGlmZmVyZW5jZTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGdhcDogMXJlbTtcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICAgIHBhZGRpbmc6IDEuNXJlbTtcblxuICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgICAgICAgd2lkdGg6IDEyMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEyMCU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiBoc2xhKDAsIDAlLCAwJSwgMC40KTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICAgICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZTtcbiAgICAgICAgICAgIHotaW5kZXg6IC0xO1xuICAgICAgICB9XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuNSk7XG5cbiAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLmljb24ge1xuICAgICAgICAgICAgICAgIHN0cm9rZTogaHNsKDkwLCAxMDAlLCA1MCUpO1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgICAgICAgICAgICAgICBtaXgtYmxlbmQtbW9kZTogZGlmZmVyZW5jZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLmdhbGxlcnlfX25hdi1sYWJlbCB7XG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgICAgICAgICAgICAgbWl4LWJsZW5kLW1vZGU6IGRpZmZlcmVuY2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLS1wcmV2IHtcbiAgICAgICAgICAgIGxlZnQ6IDJyZW07XG4gICAgICAgIH1cblxuICAgICAgICAmLS1uZXh0IHtcbiAgICAgICAgICAgIHJpZ2h0OiAycmVtO1xuXG4gICAgICAgICAgICAuaWNvbiB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJjpob3ZlciAuaWNvbiB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKSBzY2FsZSgxLjEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLmdhbGxlcnlfX25hdi1sYWJlbCB7XG4gICAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4xZW07XG4gICAgICAgICAgICBjb2xvcjogaHNsKDkwLCAxMDAlLCA1MCUpO1xuICAgICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMHB4KTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogJGZvbnQtc3Vpc3NlLWJwO1xuICAgICAgICAgICAgbWl4LWJsZW5kLW1vZGU6IGRpZmZlcmVuY2U7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5oaWRkZW4ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5pY29uIHtcbiAgICB3aWR0aDogNDBweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgZmlsbDogbm9uZTtcbiAgICBzdHJva2U6IGhzbCg5MCwgMTAwJSwgNTAlKTtcbiAgICBzdHJva2Utd2lkdGg6IDY7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgICBtaXgtYmxlbmQtbW9kZTogZGlmZmVyZW5jZTtcbn1cblxuLmdyaWQge1xuICAgIC0tZ2FwOiBjbGFtcCgxcmVtLCA1dm1pbiwgMnJlbSk7XG4gICAgLS1jb2x1bW5zOiAxNTBweDtcblxuICAgIGdhcDogdmFyKC0tZ2FwKTtcbiAgICBjb2x1bW5zOiB2YXIoLS1jb2x1bW5zKTtcbiAgICB3aWR0aDogOTYlO1xuICAgIG1heC13aWR0aDogMTQwMHB4O1xuICAgIG1hcmdpbjogNXJlbSBhdXRvO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxO1xuXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIC0tY29sdW1uczogMzAwcHg7XG4gICAgfVxufVxuXG4uZ3JpZF9pdGVtIHtcbiAgICBicmVhay1pbnNpZGU6IGF2b2lkO1xuICAgIG1hcmdpbi1ib3R0b206IHZhcigtLWdhcCk7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBjZW50ZXI7XG4gICAgLy8gd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcblxuICAgIGltZyB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICBmaWx0ZXI6IGdyYXlzY2FsZSgxMDAlKTtcbiAgICAgICAgdHJhbnNpdGlvbjogZmlsdGVyIDAuNHMgZWFzZSwgdHJhbnNmb3JtIDAuNHMgZWFzZTtcblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGZpbHRlcjogZ3JheXNjYWxlKDApO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAzKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vICY6OmFmdGVyIHtcbiAgICAvLyAgICAgY29udGVudDogJyc7XG4gICAgLy8gICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAvLyAgICAgdG9wOiAwO1xuICAgIC8vICAgICBsZWZ0OiAwO1xuICAgIC8vICAgICB3aWR0aDogMTAwJTtcbiAgICAvLyAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIC8vICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgLy8gICAgIG9wYWNpdHk6IDA7XG4gICAgLy8gICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyBlYXNlO1xuICAgIC8vIH1cblxuICAgIC8vIC8vICY6aG92ZXI6OmFmdGVyIHtcbiAgICAvLyAgICAgb3BhY2l0eTogMTtcbiAgICAvLyB9XG59XG5cbi5wcmV2aWV3IHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICB6LWluZGV4OiAxMDAwO1xuXG4gICAgJl9fYmFja2dyb3VuZCB7XG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBiYWNrZ3JvdW5kOiBoc2woMCwgMyUsIDE0JSk7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xuICAgIH1cblxuICAgICZfX2NvbnRlbnQge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIH1cblxuICAgICZfX2ltYWdlLWNvbnRhaW5lciB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG5cbiAgICAmX19jbG9zZSB7XG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgdG9wOiAycmVtO1xuICAgICAgICByaWdodDogMnJlbTtcbiAgICAgICAgd2lkdGg6IDZyZW07XG4gICAgICAgIGhlaWdodDogNnJlbTtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB6LWluZGV4OiAyMDAxO1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICAgICAgICBtaXgtYmxlbmQtbW9kZTogZGlmZmVyZW5jZTtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cblxuICAgICAgICAuaWNvbi1jbG9zZSB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIGZpbGw6IGhzbCg5MCwgMTAwJSwgNTAlKTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2U7XG4gICAgICAgIH1cblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcblxuICAgICAgICAgICAgLmljb24tY2xvc2Uge1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfX3RyYW5zaXRpb24taW1hZ2Uge1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICB6LWluZGV4OiAxMDAxO1xuICAgICAgICAvLyB3aWxsLWNoYW5nZTogdHJhbnNmb3JtLCB3aWR0aCwgaGVpZ2h0O1xuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgY2VudGVyO1xuICAgICAgICBmaWx0ZXI6IGJyaWdodG5lc3MoMS4xKTtcbiAgICB9XG59XG5cbi5wcmV2aWV3LS1vcGVuIHtcbiAgICBkaXNwbGF5OiBibG9jaztcblxuICAgIC5wcmV2aWV3X19jbG9zZSB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxuXG4gICAgLnByZXZpZXdfX2JhY2tncm91bmQge1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgIH1cbn1cblxuLy8gTWVkaWEgUXVlcmllc1xuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmdhbGxlcnkge1xuICAgICAgICAmX19uYXYge1xuICAgICAgICAgICAgJi0tcHJldiB7XG4gICAgICAgICAgICAgICAgbGVmdDogMXJlbTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJi0tbmV4dCB7XG4gICAgICAgICAgICAgICAgcmlnaHQ6IDFyZW07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC5nYWxsZXJ5X19uYXYtbGFiZWwge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5pY29uIHtcbiAgICAgICAgd2lkdGg6IDMwcHg7XG4gICAgICAgIGhlaWdodDogMzBweDtcbiAgICB9XG5cbn1cblxuXG4ucHJldmlld19fbG9hZGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIHotaW5kZXg6IDk5OTk7XG59XG5cbi5zcGlubmVyIHtcbiAgICB3aWR0aDogMTAwcHg7XG4gICAgaGVpZ2h0OiAxMDBweDtcbiAgICBib3JkZXI6IDRweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XG4gICAgYm9yZGVyLXRvcC1jb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGFuaW1hdGlvbjogc3BpbiAwLjhzIGxpbmVhciBpbmZpbml0ZTtcbn1cblxuQGtleWZyYW1lcyBzcGluIHtcbiAgICBmcm9tIHtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gICAgfVxuICAgIHRvIHtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgICB9XG59XG4iLCIuYWJvdXQge1xuICB0b3VjaC1hY3Rpb246IG5vbmU7XG4gICAgLyogUHJldmVudHMgZGVmYXVsdCB0b3VjaCBhY3Rpb25zICovXG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuICAgIC8qIEVuYWJsZXMgc21vb3RoIHNjcm9sbGluZyBvbiBpT1MgKi9cbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBjb2xvcjogIzM4NGYwMztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LWZhbWlseTogJGZvbnQtbW9udHNlcnJhdDtcblxuICAgICZfX3Njcm9sbF9fdGV4dCB7XG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgYm90dG9tOiAxcmVtO1xuICAgICAgICBsZWZ0OiA1MHZ3O1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgICAgICBjb2xvcjogIzgwZmYwMDtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMmVtO1xuICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICBvcGFjaXR5OiAwLjg7XG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgICAgICBmb250LXNpemU6IDEuOHJlbTsgICAgICB9XG4gICAgICBcbiAgICAgIH1cblxuICAmX193cmFwcGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgfVxuXG5cblxuICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuXG4gICZfX2ZpcnN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgJl9fbGVmdCB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBmbGV4OiAxO1xuICAgICAgaXNvbGF0aW9uOiBpc29sYXRlO1xuXG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LFxuICAgICAgICAgICAgcmdiYSgwLCAwLCAwLCAwLjYpLFxuICAgICAgICAgICAgcmdiYSgwLCAwLCAwLCAwLjIpKTtcbiAgICAgICAgLy8gbWl4LWJsZW5kLW1vZGU6IG11bHRpcGx5O1xuICAgICAgICB6LWluZGV4OiAxO1xuXG4gICAgICAgIEBpbmNsdWRlIG1lZGlhKFwiPHRhYmxldFwiKSB7ICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sXG4gICAgICAgICAgICAgIHJnYmEoMCwgMCwgMCwgMC4zKSxcbiAgICAgICAgICAgICAgcmdiYSgwLCAwLCAwLCAwLjgpKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAgIEBpbmNsdWRlIG1lZGlhKFwiPHRhYmxldFwiKSB7ICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICB9XG5cbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBtZWRpYShcIj50YWJsZXRcIikgeyAgICAgICAgZmxleDogbm9uZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19pbWFnZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG5cbiAgICAgIGltZyB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICBvYmplY3QtcG9zaXRpb246IDUwJSAwJTtcbiAgICAgIH1cblxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIG1lZGlhKFwiPHRhYmxldFwiKSB7ICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jb250ZW50IHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHotaW5kZXg6IDI7XG4gICAgICBwYWRkaW5nOiA2cmVtO1xuICAgICAgbWF4LXdpZHRoOiA2MHJlbTtcbiAgICAgIC8vIG1peC1ibGVuZC1tb2RlOiBkaWZmZXJlbmNlO1xuICAgICAgY29sb3I6ICNGRkZGRkY7XG4gICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgb3BhY2l0eTogMDtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTtcbiAgICAgIGFuaW1hdGlvbjogZmFkZUluVXAgMXMgZWFzZSBmb3J3YXJkcztcbiAgICAgIGFuaW1hdGlvbi1kZWxheTogMC41cztcblxuICAgICAgICBAaW5jbHVkZSBtZWRpYShcIjx0YWJsZXRcIikgeyAgICAgICAgcGFkZGluZzogMi41cmVtO1xuICAgICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTh2aDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX190aXRsZSB7XG4gICAgICBmb250LXNpemU6IDcuMnJlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjE7XG4gICAgICBtYXJnaW4tYm90dG9tOiAzLjJyZW07XG4gICAgICAvLyBtaXgtYmxlbmQtbW9kZTogZGlmZmVyZW5jZTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAvLyBsZXR0ZXItc3BhY2luZzogLTAuMDJlbTtcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmb250LWJsb3dicnVzaDtcbiAgICAgICAgICAgICAgLy8gbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgICAgIFxuXG4gICAgICBzcGFuIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGNvbG9yOiAjODBmZjAwO1xuICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2U7XG5cbiAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICBib3R0b206IC01cHg7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBoZWlnaHQ6IDJweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjODBmZjAwO1xuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGVYKDApO1xuICAgICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2U7XG4gICAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQ7XG4gICAgICAgIH1cblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAmOjphZnRlciB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgxKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEoXCI8dGFibGV0XCIpIHsgICAgICAgIGZvbnQtc2l6ZTogOHJlbTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMi40cmVtO1xuXG4gICAgICAgIHNwYW4ge1xuICAgICAgICAgIGZvbnQtc2l6ZTogOXJlbTtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fZGVzY3JpcHRpb24ge1xuICAgICAgZm9udC1zaXplOiAyLjRyZW07XG4gICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgb3BhY2l0eTogMDtcbiAgICAgIG1heC13aWR0aDogNTJyZW07XG4gICAgICAvLyBtaXgtYmxlbmQtbW9kZTogZGlmZmVyZW5jZTtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAwLjAxZW07XG4gICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xuICAgICAgbWFyZ2luLXRvcDogMnJlbTtcblxuICAgICAgICBAaW5jbHVkZSBtZWRpYShcIjx0YWJsZXRcIikgeyAgICAgICAgZm9udC1zaXplOiAyLjhyZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fcmlnaHQge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAgIHBhZGRpbmc6IDZyZW07XG4gICAgICBiYWNrZ3JvdW5kOiAjMjUyMzIzO1xuICAgICAgY29sb3I6ICNGRkZGRkY7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMCUpO1xuICAgICAgLy8gd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcblxuICAgIFxuXG4gICAgICBoMiB7XG4gICAgICAgIEBleHRlbmQgJXRpdGxlLTUwO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA0cmVtO1xuICAgICAgICBtYXJnaW4tdG9wOiAxMHJlbTtcbiAgICAgICAgY29sb3I6ICM4MGZmMDA7XG4gICAgICAgICAgZm9udC1mYW1pbHk6ICRmb250LWJsb3dicnVzaDtcblxuXG4gICAgICAgICBcbiY6Zmlyc3Qtb2YtdHlwZXtcblxuICAgQGluY2x1ZGUgbWVkaWEoXCI8dGFibGV0XCIpIHsgICAgICAgXG4gIG1hcmdpbi1ib3R0b206IDhyZW07XG5cbiAgICAgICAgICB9XG59IFxuICAgICB9XG5cbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBtZWRpYShcIj50YWJsZXRcIikgeyAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB0cmFuc2Zvcm06IG5vbmU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJl9fc2VydmljZXMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDZyZW07XG4gIH1cblxuICAmX19zZXJ2aWNlIHtcbiAgICBtYXgtd2lkdGg6IDQ0cmVtO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2U7XG4gICAgQGluY2x1ZGUgbWVkaWEoJzx0YWJsZXQnKSB7IFxuICAgICAgICBtYXgtd2lkdGg6IHVuc2V0O1xuICAgICAgfVxuXG4gICAgJjpob3ZlciB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTBweCk7XG5cbiAgICAgIC5hYm91dF9fc2VydmljZV9fdGl0bGUge1xuICAgICAgICBjb2xvcjogIzgwZmYwMDtcbiAgICAgIH1cblxuICAgICAgLmFib3V0X19zZXJ2aWNlX19udW1iZXIge1xuICAgICAgICBjb2xvcjogIzgwZmYwMDtcbiAgICAgIH1cblxuICB9XG5cblxuICAgICZfX251bWJlciB7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpO1xuICAgICAgZm9udC1zaXplOiAxLjRyZW07XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMDVlbTtcbiAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZTtcbiAgICB9XG5cbiAgICAmX190aXRsZSB7XG4gICAgIEBleHRlbmQgJXRpdGxlLTIwO1xuICAgfVxuXG4gICAgJl9fZGVzY3JpcHRpb24ge1xuICAgICAgQGV4dGVuZCAlZGVzY3JpcHRpb24tMTY7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuXG4gIFxuICAgIH1cbiAgfVxuXG4gICZfX3JlY29nbml0aW9uIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBwYWRkaW5nOiA2cmVtO1xuICAgIGJhY2tncm91bmQ6ICMyNTIzMjM7XG4gICAgY29sb3I6ICNGRkZGRkY7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTAwJSk7XG4gICAgLy8gd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcbiAgICBpc29sYXRpb246IGlzb2xhdGU7XG5cbiAgICAmOjpiZWZvcmUge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAvLyBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsXG4gICAgICAvLyAgICAgcmdiYSgxMjgsIDI1NSwgMCwgMC4wNSksXG4gICAgICAvLyAgICAgcmdiYSgzNywgMzUsIDM1LCAwLjEpKTtcbiAgICAgIC8vIG9wYWNpdHk6IDAuODtcbiAgICAgIC8vIG1peC1ibGVuZC1tb2RlOiBtdWx0aXBseTtcbiAgICAgIHotaW5kZXg6IC0xO1xuICAgIH1cblxuICAgICZfX3RpdGxlIHtcbiAgICAgIEBleHRlbmQgJXRpdGxlLTUwO1xuICAgICAgbWFyZ2luLWJvdHRvbTogNnJlbTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBcbiAgICAgIGNvbG9yOiAjODBmZjAwO1xuXG4gICAgIFxuXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgbWVkaWEoJz50YWJsZXQnKSB7XG4gICAgICAgIG1hcmdpbi10b3A6IDI1cmVtICFpbXBvcnRhbnQ7ICAgICAgICAgICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jb250ZW50IHtcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICAgICAgZ2FwOiA2cmVtO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cblxuICAgICZfX3N1YnRpdGxlIHtcbiAgICAgICAgICBAZXh0ZW5kICV0aXRsZS0yMDtcbiAgICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgICBcblxuICAgICAgJjpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgIG1hcmdpbi10b3A6IDRyZW07XG5cbiAgICAgICAgICBAaW5jbHVkZSBtZWRpYShcIjx0YWJsZXRcIikge1xuICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA4cmVtO1xuICAgICAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgICZfX2xpc3Qge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBnYXA6IDRyZW07XG4gICAgfVxuXG4gICAgJl9faXRlbSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZ2FwOiAycmVtO1xuICAgICAgcGFkZGluZy1ib3R0b206IDJyZW07XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgxMjgsIDI1NSwgMCwgMC4yKTtcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2U7XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTBweCk7XG5cbiAgICAgICAgLmFib3V0X19yZWNvZ25pdGlvbl9fYXdhcmQsXG4gICAgICAgIC5hYm91dF9fcmVjb2duaXRpb25fX2RlZ3JlZSB7XG4gICAgICAgICAgY29sb3I6ICM4MGZmMDA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX195ZWFyIHtcbiAgICAgIGZvbnQtc2l6ZTogMS40cmVtO1xuICAgICAgb3BhY2l0eTogMC42O1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMDVlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZTtcbiAgICB9XG5cbiAgICAmX19kZXRhaWxzIHtcbiAgICAgIGZsZXg6IDE7XG4gICAgfVxuXG4gICAgJl9fYXdhcmQsXG4gICAgJl9fZGVncmVlIHtcbiAgICAgIEBleHRlbmQgJWRlc2NyaXB0aW9uLTE2O1xuICAgICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuXG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2U7XG4gICAgfVxuXG4gICAgJl9fcG9zaXRpb24sXG4gICAgJl9fc2Nob29sIHtcbiAgICAgIGZvbnQtc2l6ZTogMS40cmVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7XG4gICAgICBmb250LXdlaWdodDogMzAwO1xuXG4gICAgICAgIEBpbmNsdWRlIG1lZGlhKFwiPHRhYmxldFwiKSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgICB9XG4gICAgICBcbiAgICB9XG5cbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBtZWRpYShcIj50YWJsZXRcIikgeyAgICAgIGxlZnQ6IDQwJTtcbiAgICAgIHdpZHRoOiA2MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XG4gICAgfVxuXG4gICAgICAgXG5cbiAgICBcbiAgfVxuXG4gICZfX3NvY2lhbCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgcGFkZGluZzogNnJlbTtcbiAgICBiYWNrZ3JvdW5kOiAjMjUyMzIzO1xuICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMCUpO1xuICAgIC8vIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XG4gICAgaXNvbGF0aW9uOiBpc29sYXRlO1xuXG4gICAgJl9fdGl0bGUge1xuICAgICAgICBAZXh0ZW5kICV0aXRsZS01MDtcbiAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNnJlbTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIFxuICAgICAgLy8gbGV0dGVyLXNwYWNpbmc6IC0wLjAxZW07XG4gICAgICBjb2xvcjogIzgwZmYwMDtcblxuICAgICAgICBAaW5jbHVkZSBtZWRpYShcIj50YWJsZXRcIikgeyAgICAgICAgbWFyZ2luLXRvcDogMzRyZW0gIWltcG9ydGFudDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jb250ZW50IHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgZ2FwOiA0cmVtO1xuICAgIH1cblxuICAgICZfX2l0ZW0ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBnYXA6IDJyZW07XG4gICAgICBmb250LXNpemU6IDIuMnJlbTtcbiAgICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAmOjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAtMjBweDtcbiAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgIHdpZHRoOiAxMHB4O1xuICAgICAgICBoZWlnaHQ6IDJweDtcbiAgICAgICAgYmFja2dyb3VuZDogIzgwZmYwMDtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2U7XG4gICAgICB9XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjb2xvcjogIzgwZmYwMDtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwcHgpO1xuXG4gICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMSk7XG4gICAgICAgIH1cblxuICAgICAgICBzdmcge1xuICAgICAgICAgIHN0cm9rZTogIzgwZmYwMDtcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgc3ZnIHtcbiAgICAgICAgd2lkdGg6IDNyZW07XG4gICAgICAgIGhlaWdodDogM3JlbTtcbiAgICAgICAgc3Ryb2tlLXdpZHRoOiAxLjU7XG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG5cbiAgXG4gICAgICB9XG5cbiAgICAgIHNwYW4ge1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgfVxuICAgIH1cblxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIG1lZGlhKFwiPnRhYmxldFwiKSB7ICAgICAgbGVmdDogNTUlO1xuICAgICAgd2lkdGg6IDQ1JTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbiAgICB9XG4gIH1cbiAgICBAaW5jbHVkZSBtZWRpYShcIjx0YWJsZXRcIikge31cbiAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuXG4gICAgJl9fcmVjb2duaXRpb24ge1xuICAgICAgcGFkZGluZzogNHJlbTtcblxuICAgICAgJl9fdGl0bGUge1xuICAgICAgICBmb250LXNpemU6IDUuNnJlbTtcbiAgICAgIH1cblxuICAgICAgJl9fY29udGVudCB7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgICAgICBnYXA6IDRyZW07XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fc29jaWFsIHtcbiAgICAgIHBhZGRpbmc6IDRyZW07XG5cbiAgICAgICZfX3RpdGxlIHtcbiAgICAgICAgZm9udC1zaXplOiA1LjZyZW07XG4gICAgICB9XG5cbiAgICAgICZfX2l0ZW0ge1xuICAgICAgICBmb250LXNpemU6IDJyZW07XG4gIHNwYW4ge1xuICAgICAgZm9udC1zaXplOiAyLjhyZW07XG4gICAgfVxuICAgICAgICBzdmcge1xuICAgICAgICAgIHdpZHRoOiA0cmVtO1xuICAgICAgICAgIGhlaWdodDogNHJlbTtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDFyZW07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAgICAgXG4gICAgICAgIFxufVxuXG4vLyBBbmltYXRpb24gS2V5ZnJhbWVzXG5Aa2V5ZnJhbWVzIHNjcm9sbExpbmUge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcbiAgfVxuXG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMCUpO1xuICB9XG5cbiAgNTElIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMjBweCk7XG4gIH1cblxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJblVwIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gIH1cblxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gIH1cbn0iLCIuaG9tZSB7XG4gIEBleHRlbmQgJXBhZ2U7XG4gIHBhZGRpbmctdG9wOiA3cmVtO1xuICBmb250LWZhbWlseTogJGZvbnQtYmxvd2JydXNoO1xuICBmb250LXNpemU6IDNyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG4gIGNvbG9yOiAjNDQ0NDQ0O1xufVxuXG4uZ2FsbGVyaWVzIHtcbiAgZm9udC1mYW1pbHk6IFwiYmxvd2JydXNoXCI7XG4gIGNvbG9yOiBoc2woNzggMTAwJSAxNSUgLyAxKTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgdG9wOiA0cmVtO1xuICB6LWluZGV4OiAyO1xuICBmb250LXNpemU6IDZyZW07XG59XG5cbi5waW5uZWQtYXJ0IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDEwdmg7XG4gIGxlZnQ6IC0yMHB4O1xuICB3aWR0aDogMTgwcHg7XG4gIC8vIGhlaWdodDogMjgwcHg7XG4gIHBlcnNwZWN0aXZlOiAxMDAwcHg7XG4gIHotaW5kZXg6IDI7XG4gIHRyYW5zZm9ybS1zdHlsZTogcHJlc2VydmUtM2Q7XG4gIHRyYW5zZm9ybTogcm90YXRlKDI3ZGVnKTtcblxuICAucGluIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIHRvcDogLTEwcHg7XG4gICAgbGVmdDogLTEwcHg7XG4gICAgei1pbmRleDogNTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMjVkZWcpO1xuICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMnB4IDRweCAycHggcmdiYSgwLCAwLCAwLCAwLjIpKTtcbiAgfVxuXG4gICAgLm5ldy1hcnQtdGV4dCB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IC02LjVyZW07XG4gICAgICBsZWZ0OiAtMS41cmVtO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDZyZW0pIHJvdGF0ZSgtMjZkZWcpO1xuICAgICAgZm9udC1mYW1pbHk6ICBjdXJzaXZlO1xuICAgICAgZm9udC1zaXplOiAyLjVyZW07XG4gICAgICBjb2xvcjogaHNsKDc4IDEwMCUgMTUlIC8gMSk7XG4gICAgICB6LWluZGV4OiA0O1xuICAgIH1cblxuICAuYXJ0d29yayB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAxMjBweDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogdG9wIGxlZnQ7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTtcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDhweDtcblxuICAgICY6aG92ZXIge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNWRlZyk7XG4gICAgfVxuXG4gICAgaW1nIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgfVxuXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiA5MHB4O1xuICAgICAgd2lkdGg6IDEwcHg7XG4gICAgICBoZWlnaHQ6IDEwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlIGF0IGNlbnRlciwgcmdiYSgwLCAwLCAwLCAwLjIpLCB0cmFuc3BhcmVudCA3MCUpO1xuICAgIH1cbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhKFwiPHBob25lXCIpIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cblxuXG4uYmFubmVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAxO1xuICBtYXJnaW4tdG9wOiAxMHZoO1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZ3JpZDtcbiAganVzdGlmeS1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDEwMHZoO1xuXG4gIEBpbmNsdWRlIG1lZGlhKFwiPHBob25lXCIpIHtcbiAgICBtYXJnaW4tdG9wOiAxOHZoO1xuICB9XG59XG5cbi5iYW5uZXIgLnNsaWRlciB7XG4gIHRvcDogMDtcbiAgbWF4LXdpZHRoOiAxNzBweDtcbiAgYXNwZWN0LXJhdGlvOiA0IC8gNDtcbiAgdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcbiAgd2lkdGg6IDMwdnc7XG4gIC8vIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XG4gIHRyYW5zZm9ybTogcm90YXRlWCgnMTZkZWcnKTtcblxuICBAaW5jbHVkZSBtZWRpYShcIjxwaG9uZVwiKSB7XG4gICAgYXNwZWN0LXJhdGlvOiA2IC8gNDtcbiAgfVxufVxuXG4uYmFubmVyIC5zbGlkZXIgLmdhbGxlcnlfX2ltYWdlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBpbnNldDogMCAwIDAgMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHRyYW5zZm9ybTogcm90YXRlWShjYWxjKHZhcigtLXBvc2l0aW9uKSAqICgzNjAgLyB2YXIoLS1xdWFudGl0eSkpICogLTFkZWcpKSB0cmFuc2xhdGVaKG1pbigyNnZ3LCA0ODBweCkpO1xuICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xuICAvLyB3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xuICB6LWluZGV4OiAxO1xuICBwb2ludGVyLWV2ZW50czogYXV0bztcblxuICBAaW5jbHVkZSBtZWRpYShcIjxwaG9uZVwiKSB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGVZKGNhbGModmFyKC0tcG9zaXRpb24pICogKDM2MCAvIHZhcigtLXF1YW50aXR5KSkgKiAtMWRlZykpIHRyYW5zbGF0ZVooNDV2dyk7XG4gIH1cblxuICBhLmdhbGxlcnlfbGluayB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGluc2V0OiAwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB6LWluZGV4OiA1O1xuICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICB9XG5cbiAgZmlndXJlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB9XG5cbiAgaW1nIHtcbiAgICBmaWx0ZXI6IGdyYXlzY2FsZSgxMDAlKTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIHRyYW5zaXRpb246IGZpbHRlciAwLjVzIGVhc2U7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgei1pbmRleDogMTtcblxuICAgICY6aG92ZXIge1xuICAgICAgZmlsdGVyOiBncmF5c2NhbGUoMCUpO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIG1lZGlhKFwiPHBob25lXCIpIHtcbiAgICAgIGhlaWdodDogdW5zZXQ7XG4gICAgfVxuICB9XG59XG5cbi5zbGlkZXIge1xuICBwb2ludGVyLWV2ZW50czogYXV0bztcbn1cblxuLmdhbGxlcnlfX2RldGFpbHMge1xuICBAZXh0ZW5kICVjb3Zlcjtcbn1cblxuLmdhbGxlcnlfX2RldGFpbHNfX2l0ZW0ge1xuICBvcGFjaXR5OiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNzB2aDtcbiAgbGVmdDogOHJlbTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzIGVhc2U7XG5cbiAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIHRvcDogNjV2aDtcbiAgICBsZWZ0OiAycmVtO1xuICB9XG59XG5cbi5nYWxsZXJ5X19kZXRhaWxzX190aXRsZSB7XG4gIGNvbG9yOiBoc2woNzggMTAwJSAxNSUgLyAxKTtcbiAgQGV4dGVuZCAldGl0bGUtNjA7XG59XG5cbi5nYWxsZXJ5X19kZXRhaWxzX19wYXJhZ3JhcGgge1xuICBmb250LWZhbWlseTogJGZvbnQtbW9udHNlcnJhdDtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbiAgQGV4dGVuZCAlZGVzY3JpcHRpb24tMTY7XG4gIG1heC13aWR0aDogNDRyZW07XG5cbiAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIG1heC13aWR0aDogbm9uZTtcbiAgfVxufVxuXG4uZ2FsbGVyeS1pbmRpY2F0b3JzIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDJyZW07XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDFyZW07XG4gIHotaW5kZXg6IDI7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4uaW5kaWNhdG9yLWRvdCB7XG4gIHdpZHRoOiA4cHg7XG4gIGhlaWdodDogOHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQ6IGhzbGEoNzgsIDEwMCUsIDE1JSwgMC4zKTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XG5cbiAgQGluY2x1ZGUgbWVkaWEoXCI8cGhvbmVcIikge1xuICAgIHdpZHRoOiA2cHg7XG4gICAgaGVpZ2h0OiA2cHg7XG4gIH1cbn1cblxuLnJldmVhbGVyIHtcbiAgd2lkdGg6IG1heCgyMDB2dywgMjAwdmgpO1xuICBoZWlnaHQ6IG1heCgyMDB2dywgMjAwdmgpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDEwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBoc2woOTAsIDEwMCUsIDUwJSk7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCBtYXgoMjAwdncsIDIwMHZoKSkgcm90YXRlKDE2ZGVnKTtcbiAgLy8gd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcblxuICB1bCB7XG4gICAgbGlzdC1zdHlsZTogZGlzYztcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIH1cbn1cblxuLnJldmVhbGVyX190ZXh0IHtcbiAgLy8gd2lsbC1jaGFuZ2U6IG9wYWNpdHk7XG4gIGNvbG9yOiBibGFjaztcbiAgZm9udC1zaXplOiA3LjVyZW07XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9*/