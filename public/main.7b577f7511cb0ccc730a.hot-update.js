/*! For license information please see main.7b577f7511cb0ccc730a.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatehermann("main",{"./app/pages/Home/index.js":(e,t,i)=>{i.r(t),i.d(t,{default:()=>v});var n=i("./app/classes/Page.js"),r=i("./node_modules/lodash/lodash.js"),o=i("./node_modules/gsap/index.js");function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function l(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,s(n.key),n)}}function s(e){var t=function(e,t){if("object"!=a(e)||!e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,t||"default");if("object"!=a(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==a(t)?t:t+""}function u(e,t,i){return t=f(t),function(e,t){if(t&&("object"==a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,c()?Reflect.construct(t,i||[],f(e).constructor):t.apply(e,i))}function c(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(c=function(){return!!e})()}function h(e,t,i,n){var r=d(f(1&n?e.prototype:e),t,i);return 2&n?function(e){return r.apply(i,e)}:r}function d(){return d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,i){var n=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=f(e)););return e}(e,t);if(n){var r=Object.getOwnPropertyDescriptor(n,t);return r.get?r.get.call(arguments.length<3?e:i):r.value}},d.apply(null,arguments)}function f(e){return f=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},f(e)}function p(e,t){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},p(e,t)}var v=function(e){function t(){var e;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(e=u(this,t,[{id:"home",element:".home",elements:{galleries:".gallery__image",slider:".slider",revealer:".revealer",galleryName:".revealer__text",details:".gallery__details__item",indicators:".indicator-dot"}}])).rotation=0,e.rotationSpeed=10,e.currentSpeed=0,e.directionMultiplier=1,e.lastTime=performance.now(),e.touchStart=null,e.touchY=null,e.lastDeltaY=0,e.touchVelocity=0,e.isTouching=!1,e.isInitializing=!1,e.initialSpeed=860,e.initialStartTime=null,e.initialDuration=2700,e.onNavigationCallback=null,e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&p(e,t)}(t,e),i=t,(n=[{key:"create",value:function(){h(t,"create",this,3)([]),this.setupRotation(),this.addEventListener()}},{key:"setupRotation",value:function(){var e=this.elements.slider;e.style.transformStyle="preserve-3d",e.style.transform="perspective(1000px) rotateX(-16deg) rotateY(0deg)",this.startRotationLoop()}},{key:"initialSpeedUp",value:function(){this.isInitializing=!0}},{key:"startRotationLoop",value:function(){var e=this,t=function(i){var n=(i-e.lastTime)/1e3;if(e.lastTime=i,e.isInitializing){e.initialStartTime||(e.initialStartTime=i);var r=i-e.initialStartTime,o=Math.min(r/e.initialDuration,1);e.currentSpeed=(e.initialSpeed-(e.initialSpeed-e.rotationSpeed)*o)*e.directionMultiplier,1===o&&(e.isInitializing=!1)}else{var a=e.rotationSpeed*e.directionMultiplier;e.currentSpeed+=.2*(a-e.currentSpeed)}e.rotation+=e.currentSpeed*n,e.elements.slider.style.transform="perspective(1000px) rotateX(-16deg) rotateY(".concat(e.rotation,"deg)"),Math.abs(Math.abs(e.currentSpeed)-e.rotationSpeed)<.1&&e.updateDetailsAndIndicators(e.rotation),e.rotationFrame=requestAnimationFrame(t)};this.rotationFrame=requestAnimationFrame(t)}},{key:"updateDetailsAndIndicators",value:function(e){var t=(e%360+360)%360,i=Math.floor(t/360*6);this.elements.details.forEach((function(e,t){o.default.to(e,{opacity:t===i?1:0,duration:.1,ease:"ease"})})),this.elements.indicators.forEach((function(e,t){e.style.backgroundColor=t===i?"hsl(78, 100%, 15%)":"hsla(78, 100%, 15%, 0.3)"})),this.elements.galleries.forEach((function(e,t){var n=e.querySelector("img");o.default.to(n,{filter:t===i?"grayscale(0%)":"grayscale(100%)",duration:.5})}))}},{key:"onWheel",value:function(e){e.preventDefault();var t=1.5*e.deltaY;Math.abs(t)>1&&(this.directionMultiplier=t>0?-1:1);var i=Math.abs(t);t>0&&this.directionMultiplier<0||t<0&&this.directionMultiplier>0?this.currentSpeed=this.directionMultiplier*Math.max(this.rotationSpeed,i):this.currentSpeed=i*this.directionMultiplier}},{key:"onTouchStart",value:function(e){e.preventDefault(),this.isTouching=!0,this.touchStart=e.touches[0].clientY,this.touchY=this.touchStart,this.touchVelocity=0}},{key:"onTouchMove",value:function(e){if(e.preventDefault(),this.isTouching){var t=e.touches[0].clientY,i=this.touchY-t;this.touchVelocity=i,this.lastDeltaY=i,this.onWheel({preventDefault:function(){},deltaY:2*i}),this.touchY=t}}},{key:"onTouchEnd",value:function(){var e=this;this.isTouching=!1;var t=15*this.touchVelocity,i=function(){Math.abs(t)>.1&&(e.onWheel({preventDefault:function(){},deltaY:t}),t*=.95,requestAnimationFrame(i))};requestAnimationFrame(i),this.touchStart=null,this.touchY=null}},{key:"onGalleryClick",value:function(e,t){t.preventDefault(),t.stopPropagation();var i=e.querySelector("a"),n=e.querySelector("img"),r=i.getAttribute("href");this.onNavigationCallback=function(){window.app.onChange({url:r})},this.galleryName=n.alt,this.elements.galleryName.innerText=this.galleryName,this.animateTransition()}},{key:"animateTransition",value:function(){var e=this,t=o.default.timeline(),i=Math.max(2*window.innerHeight,2*window.innerWidth);return t.set(this.elements.revealer,{display:"flex",y:"".concat(i,"px"),rotate:20}),t.set(this.elements.galleryName,{opacity:0,rotate:-20}),t.addLabel("firstHalf").to(this.elements.revealer,{y:"0",duration:1.2,ease:"power3.inOut"},"firstHalf").to(this.elements.galleryName,{opacity:1,duration:.8,ease:"power2.out"},"firstHalf+=0.4"),t.call((function(){e.onNavigationCallback&&(e.onNavigationCallback(),e.onNavigationCallback=null)}),null,"+=0.5"),t.addLabel("secondHalf").to(this.elements.galleryName,{opacity:0,duration:.6,ease:"power2.in"},"secondHalf").to(this.elements.revealer,{y:"-".concat(i,"px"),duration:2,rotate:20,ease:"power3.inOut"},"secondHalf+=0.2"),t.set(this.elements.revealer,{display:"none"}),t}},{key:"addEventListener",value:function(){var e=this;window.addEventListener("wheel",this.onWheel.bind(this),{passive:!1}),"ontouchstart"in window&&(this.element.addEventListener("touchstart",this.onTouchStart.bind(this)),this.element.addEventListener("touchmove",this.onTouchMove.bind(this)),this.element.addEventListener("touchend",this.onTouchEnd.bind(this))),r.forEach(this.elements.galleries,(function(t){t.querySelector("a").addEventListener("click",e.onGalleryClick.bind(e,t))}))}},{key:"removeEventListeners",value:function(){var e=this;window.removeEventListener("wheel",this.onWheel.bind(this)),"ontouchstart"in window&&(this.element.removeEventListener("touchstart",this.onTouchStart.bind(this)),this.element.removeEventListener("touchmove",this.onTouchMove.bind(this)),this.element.removeEventListener("touchend",this.onTouchEnd.bind(this))),r.forEach(this.elements.galleries,(function(t){t.querySelector("a").removeEventListener("click",e.onGalleryClick.bind(e,t))}))}},{key:"destroy",value:function(){this.rotationFrame&&cancelAnimationFrame(this.rotationFrame),this.removeEventListeners(),h(t,"destroy",this,3)([])}}])&&l(i.prototype,n),a&&l(i,a),Object.defineProperty(i,"prototype",{writable:!1}),i;var i,n,a}(n.default)}},(function(e){e.h=()=>"3b77e3a94bd9253f3f78"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,