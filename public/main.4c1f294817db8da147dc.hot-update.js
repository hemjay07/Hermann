/*! For license information please see main.4c1f294817db8da147dc.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatehermann("main",{"./app/pages/Home/index.js":(t,e,n)=>{n.r(e),n.d(e,{default:()=>y});var i=n("./app/classes/Page.js"),o=n("./node_modules/lodash/lodash.js"),r=n("./node_modules/gsap/index.js");function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}function l(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,u(i.key),i)}}function u(t){var e=function(t,e){if("object"!=a(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var i=n.call(t,e||"default");if("object"!=a(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"==a(e)?e:e+""}function s(t,e,n){return e=f(e),function(t,e){if(e&&("object"==a(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,c()?Reflect.construct(e,n||[],f(t).constructor):e.apply(t,n))}function c(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(c=function(){return!!t})()}function d(t,e,n,i){var o=h(f(1&i?t.prototype:t),e,n);return 2&i&&"function"==typeof o?function(t){return o.apply(n,t)}:o}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var i=function(t,e){for(;!{}.hasOwnProperty.call(t,e)&&null!==(t=f(t)););return t}(t,e);if(i){var o=Object.getOwnPropertyDescriptor(i,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},h.apply(null,arguments)}function f(t){return f=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},f(t)}function p(t,e){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},p(t,e)}var y=function(t){function e(){var t;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=s(this,e,[{id:"home",element:".home",elements:{galleries:".gallery__image",slider:".slider",revealer:".revealer",galleryName:".revealer__text",details:".gallery__details__item",indicators:".indicator-dot",pinnedArt:".pinned-art",artworkContainer:".pinned-art .artwork"}}])).rotation=0,t.rotationSpeed=10,t.currentSpeed=0,t.directionMultiplier=1,t.lastTime=performance.now(),t.touchStart=null,t.touchY=null,t.lastDeltaY=0,t.lastDeltaX=0,t.touchVelocity=0,t.isTouching=!1,t.isInitializing=!1,t.initialSpeed=860,t.initialStartTime=null,t.initialDuration=2700,t.onNavigationCallback=null,t.boundWheel=t.onWheel.bind(t),t.boundTouchStart=t.onTouchStart.bind(t),t.boundTouchMove=t.onTouchMove.bind(t),t.boundTouchEnd=t.onTouchEnd.bind(t),t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&p(t,e)}(e,t),n=e,(i=[{key:"initializePinnedArt",value:function(){console.log("initialize pinned art"),r.default.set(this.elements.pinnedArt,{opacity:0})}},{key:"setupPinnedArt",value:function(){console.log("set up being called"),this.elements.pinnedArt&&(r.default.set(this.elements.pinnedArt,{opacity:1}),r.default.timeline({delay:1}).from(this.elements.pinnedArt,{y:-100,opacity:0,duration:1,ease:"elastic.out(1, 0.5)"}),r.default.to(this.elements.artworkContainer,{opacity:1,rotation:"2",duration:2,yoyo:!0,repeat:-1,ease:"power1.inOut"}))}},{key:"create",value:function(){d(e,"create",this,3)([]),this.setupRotation(),this.addEventListener()}},{key:"setupRotation",value:function(){var t=this.elements.slider;t.style.transformStyle="preserve-3d",t.style.transform="perspective(1000px) rotateX(-16deg) rotateY(0deg)",this.startRotationLoop()}},{key:"initialSpeedUp",value:function(){this.isInitializing=!0}},{key:"startRotationLoop",value:function(){var t=this,e=function(n){var i=(n-t.lastTime)/1e3;if(t.lastTime=n,t.isInitializing){t.initialStartTime||(t.initialStartTime=n);var o=n-t.initialStartTime,r=Math.min(o/t.initialDuration,1);t.currentSpeed=(t.initialSpeed-(t.initialSpeed-t.rotationSpeed)*r)*t.directionMultiplier,1===r&&(t.isInitializing=!1,t.setupPinnedArt())}else{var a=t.rotationSpeed*t.directionMultiplier;t.currentSpeed+=.2*(a-t.currentSpeed)}t.rotation+=t.currentSpeed*i,t.elements.slider.style.transform="perspective(1000px) rotateX(-16deg) rotateY(".concat(t.rotation,"deg)"),Math.abs(Math.abs(t.currentSpeed)-t.rotationSpeed)<.1&&t.updateDetailsAndIndicators(t.rotation),t.rotationFrame=requestAnimationFrame(e)};this.rotationFrame=requestAnimationFrame(e)}},{key:"updateDetailsAndIndicators",value:function(t){var e=(t%360+360)%360,n=Math.floor(e/360*6);-1===this.directionMultiplier&&(n=(n-1+6)%6),this.elements.details.forEach((function(t,e){r.default.to(t,{opacity:e===n?1:0,duration:.1,ease:"ease"})})),this.elements.indicators.forEach((function(t,e){t.style.backgroundColor=e===n?"hsl(78, 100%, 15%)":"hsla(78, 100%, 15%, 0.3)"})),this.elements.galleries.forEach((function(t,e){var i=t.querySelector("img");r.default.to(i,{filter:e===n?"grayscale(0%)":"grayscale(100%)",duration:.5})}))}},{key:"onWheel",value:function(t){t.preventDefault();var e=Math.abs(t.deltaY)>Math.abs(t.deltaX)?1.5*t.deltaY:1.5*t.deltaX;Math.abs(e)>1&&(this.directionMultiplier=e>0?-1:1);var n=Math.abs(e);e>0&&this.directionMultiplier<0||e<0&&this.directionMultiplier>0?this.currentSpeed=this.directionMultiplier*Math.max(this.rotationSpeed,n):this.currentSpeed=n*this.directionMultiplier}},{key:"onTouchStart",value:function(t){this.isTouching=!0,this.touchStart=t.touches[0].clientY,this.touchStart={x:t.touches[0].clientX,y:t.touches[0].clientY},this.touchY=this.touchStart.y,this.touchX=this.touchStart.x,this.touchVelocity=0}},{key:"onTouchMove",value:function(t){if(this.isTouching){var e=t.touches[0].clientY,n=t.touches[0].clientX,i=this.touchY-e,o=this.touchX-n,r=Math.abs(o)>Math.abs(i)?2*o:i;this.touchVelocity=r,this.onWheel({preventDefault:function(){},deltaY:2*r,deltaX:0}),this.touchStart={x:n,y:e},this.touchY=e,this.touchX=n}}},{key:"onTouchEnd",value:function(){var t=this;this.isTouching=!1;var e=15*this.touchVelocity,n=function(){Math.abs(e)>.1&&(t.onWheel({preventDefault:function(){},deltaY:e,deltaX:0}),e*=.95,requestAnimationFrame(n))};requestAnimationFrame(n),this.touchStart=null,this.touchY=null}},{key:"onGalleryClick",value:function(t,e){e.preventDefault(),e.stopPropagation();var n=t.querySelector("a"),i=t.querySelector("img"),o=n.getAttribute("href");this.onNavigationCallback=function(){window.app.onChange({url:o})},this.galleryName=i.alt,this.elements.galleryName.innerText=this.galleryName,this.animateTransition()}},{key:"animateTransition",value:function(){var t=this,e=r.default.timeline(),n=Math.max(2*window.innerHeight,2*window.innerWidth);return e.set(this.elements.revealer,{display:"flex",y:"".concat(n,"px"),rotate:20}),e.set(this.elements.galleryName,{opacity:0,rotate:-20}),e.addLabel("firstHalf").to(this.elements.revealer,{y:"0",duration:1.2,ease:"power3.inOut"},"firstHalf").to(this.elements.galleryName,{opacity:1,duration:.8,ease:"power2.out"},"firstHalf+=0.4"),e.call((function(){t.onNavigationCallback&&(t.onNavigationCallback(),t.onNavigationCallback=null)}),null,"+=0.5"),e.addLabel("secondHalf").to(this.elements.galleryName,{opacity:0,duration:.6,ease:"power2.in"},"secondHalf").to(this.elements.revealer,{y:"-".concat(n,"px"),duration:2,rotate:20,ease:"power3.inOut"},"secondHalf+=0.2"),e.set(this.elements.revealer,{display:"none"}),e}},{key:"addEventListener",value:function(){var t=this;window.addEventListener("wheel",this.boundWheel,{passive:!1}),"ontouchstart"in window&&(window.addEventListener("touchstart",this.boundTouchStart),window.addEventListener("touchmove",this.boundTouchMove),window.addEventListener("touchend",this.boundTouchEnd)),o.forEach(this.elements.galleries,(function(e){var n=e.querySelector("a");t.boundGalleryClick=t.onGalleryClick.bind(t,e),n.addEventListener("click",t.boundGalleryClick)}))}},{key:"removeEventListeners",value:function(){var t=this;window.removeEventListener("wheel",this.boundWheel),"ontouchstart"in window&&(window.removeEventListener("touchstart",this.boundTouchStart),window.removeEventListener("touchmove",this.boundTouchMove),window.removeEventListener("touchend",this.boundTouchEnd)),o.forEach(this.elements.galleries,(function(e){e.querySelector("a").removeEventListener("click",t.boundGalleryClick)}))}},{key:"destroy",value:function(){this.rotationFrame&&cancelAnimationFrame(this.rotationFrame),this.removeEventListeners(),d(e,"destroy",this,3)([])}}])&&l(n.prototype,i),a&&l(n,a),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,i,a}(i.default)}},(function(t){t.h=()=>"681b4def890ca93984bf"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,