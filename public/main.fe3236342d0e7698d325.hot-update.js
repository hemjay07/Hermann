/*! For license information please see main.fe3236342d0e7698d325.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatehermann("main",{"./app/pages/Home/index.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>v});var i=n("./app/classes/Page.js"),o=n("./node_modules/lodash/lodash.js"),r=n("./node_modules/gsap/index.js");function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function l(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,u(i.key),i)}}function u(e){var t=function(e,t){if("object"!=a(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,t||"default");if("object"!=a(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==a(t)?t:t+""}function s(e,t,n){return t=f(t),function(e,t){if(t&&("object"==a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,c()?Reflect.construct(t,n||[],f(e).constructor):t.apply(e,n))}function c(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(c=function(){return!!e})()}function h(e,t,n,i){var o=d(f(1&i?e.prototype:e),t,n);return 2&i?function(e){return o.apply(n,e)}:o}function d(){return d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var i=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=f(e)););return e}(e,t);if(i){var o=Object.getOwnPropertyDescriptor(i,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},d.apply(null,arguments)}function f(e){return f=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},f(e)}function p(e,t){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},p(e,t)}var v=function(e){function t(){var e;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(e=s(this,t,[{id:"home",element:".home",elements:{galleries:".gallery__image",slider:".slider",revealer:".revealer",galleryName:".revealer__text",details:".gallery__details__item",indicators:".indicator-dot"}}])).rotation=0,e.rotationSpeed=10,e.currentSpeed=0,e.lastTime=performance.now(),e.touchStart=null,e.touchY=null,e.lastDeltaY=0,e.touchVelocity=0,e.isTouching=!1,e.isInitializing=!1,e.initialSpeed=860,e.initialStartTime=null,e.initialDuration=2700,e.onNavigationCallback=null,e.boundWheel=e.onWheel.bind(e),e.boundTouchStart=e.onTouchStart.bind(e),e.boundTouchMove=e.onTouchMove.bind(e),e.boundTouchEnd=e.onTouchEnd.bind(e),e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&p(e,t)}(t,e),n=t,(i=[{key:"create",value:function(){h(t,"create",this,3)([]),this.setupRotation(),this.addEventListener()}},{key:"setupRotation",value:function(){var e=this.elements.slider;e.style.transformStyle="preserve-3d",e.style.transform="perspective(1000px) rotateX(-16deg) rotateY(0deg)",this.startRotationLoop()}},{key:"initialSpeedUp",value:function(){this.isInitializing=!0}},{key:"startRotationLoop",value:function(){var e=this,t=function(n){var i=(n-e.lastTime)/1e3;if(e.lastTime=n,e.isInitializing){e.initialStartTime||(e.initialStartTime=n);var o=n-e.initialStartTime,r=Math.min(o/e.initialDuration,1);e.currentSpeed=e.initialSpeed-(e.initialSpeed-e.rotationSpeed)*r,1===r&&(e.isInitializing=!1)}else{var a=e.rotationSpeed;e.currentSpeed+=.2*(a-e.currentSpeed)}e.rotation+=e.currentSpeed*i,e.elements.slider.style.transform="perspective(1000px) rotateX(-16deg) rotateY(".concat(e.rotation,"deg)"),Math.abs(e.currentSpeed-e.rotationSpeed)<.1&&e.updateDetailsAndIndicators(e.rotation),e.rotationFrame=requestAnimationFrame(t)};this.rotationFrame=requestAnimationFrame(t)}},{key:"updateDetailsAndIndicators",value:function(e){var t=(e%360+360)%360,n=Math.floor(t/360*6);this.elements.details.forEach((function(e,t){r.default.to(e,{opacity:t===n?1:0,duration:.1,ease:"ease"})})),this.elements.indicators.forEach((function(e,t){e.style.backgroundColor=t===n?"hsl(78, 100%, 15%)":"hsla(78, 100%, 15%, 0.3)"})),this.elements.galleries.forEach((function(e,t){var i=e.querySelector("img");r.default.to(i,{filter:t===n?"grayscale(0%)":"grayscale(100%)",duration:.5})}))}},{key:"onWheel",value:function(e){e.preventDefault();var t=1.5*e.deltaY;this.currentSpeed=Math.abs(t)}},{key:"onTouchStart",value:function(e){e.preventDefault(),this.isTouching=!0,this.touchStart=e.touches[0].clientY,this.touchY=this.touchStart,this.touchVelocity=0}},{key:"onTouchMove",value:function(e){if(e.preventDefault(),this.isTouching){var t=e.touches[0].clientY,n=this.touchY-t;this.touchVelocity=n,this.lastDeltaY=n,this.onWheel({preventDefault:function(){},deltaY:2*n}),this.touchY=t}}},{key:"onTouchEnd",value:function(){var e=this;this.isTouching=!1;var t=15*this.touchVelocity,n=function(){Math.abs(t)>.1&&(e.onWheel({preventDefault:function(){},deltaY:t}),t*=.95,requestAnimationFrame(n))};requestAnimationFrame(n),this.touchStart=null,this.touchY=null}},{key:"onGalleryClick",value:function(e,t){t.preventDefault(),t.stopPropagation();var n=e.querySelector("a"),i=e.querySelector("img"),o=n.getAttribute("href");this.onNavigationCallback=function(){window.app.onChange({url:o})},this.galleryName=i.alt,this.elements.galleryName.innerText=this.galleryName,this.animateTransition()}},{key:"animateTransition",value:function(){var e=this,t=r.default.timeline(),n=Math.max(2*window.innerHeight,2*window.innerWidth);return t.set(this.elements.revealer,{display:"flex",y:"".concat(n,"px"),rotate:20}),t.set(this.elements.galleryName,{opacity:0,rotate:-20}),t.addLabel("firstHalf").to(this.elements.revealer,{y:"0",duration:1.2,ease:"power3.inOut"},"firstHalf").to(this.elements.galleryName,{opacity:1,duration:.8,ease:"power2.out"},"firstHalf+=0.4"),t.call((function(){e.onNavigationCallback&&(e.onNavigationCallback(),e.onNavigationCallback=null)}),null,"+=0.5"),t.addLabel("secondHalf").to(this.elements.galleryName,{opacity:0,duration:.6,ease:"power2.in"},"secondHalf").to(this.elements.revealer,{y:"-".concat(n,"px"),duration:2,rotate:20,ease:"power3.inOut"},"secondHalf+=0.2"),t.set(this.elements.revealer,{display:"none"}),t}},{key:"addEventListener",value:function(){var e=this;window.addEventListener("wheel",this.boundWheel,{passive:!1}),"ontouchstart"in window&&(this.element.addEventListener("touchstart",this.boundTouchStart),this.element.addEventListener("touchmove",this.boundTouchMove),this.element.addEventListener("touchend",this.boundTouchEnd)),o.forEach(this.elements.galleries,(function(t){var n=t.querySelector("a");e.boundGalleryClick=e.onGalleryClick.bind(e,t),n.addEventListener("click",e.boundGalleryClick)}))}},{key:"removeEventListeners",value:function(){var e=this;window.removeEventListener("wheel",this.boundWheel),"ontouchstart"in window&&(this.element.removeEventListener("touchstart",this.boundTouchStart),this.element.removeEventListener("touchmove",this.boundTouchMove),this.element.removeEventListener("touchend",this.boundTouchEnd)),o.forEach(this.elements.galleries,(function(t){t.querySelector("a").removeEventListener("click",e.boundGalleryClick)}))}},{key:"destroy",value:function(){this.rotationFrame&&cancelAnimationFrame(this.rotationFrame),this.removeEventListeners(),h(t,"destroy",this,3)([])}}])&&l(n.prototype,i),a&&l(n,a),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,i,a}(i.default)}},(function(e){e.h=()=>"2fe63f003176a0f0c14c"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,